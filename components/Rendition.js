var _jsxFileName="/Users/johanpoirier/workspace/tea/epubjs-rn/src/Rendition.js";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=require("react");var _react2=_interopRequireDefault(_react);var _reactNative=require("react-native");var _reactNativeWkwebviewReborn=require("react-native-wkwebview-reborn");var _reactNativeWkwebviewReborn2=_interopRequireDefault(_reactNativeWkwebviewReborn);var _eventEmitter=require("event-emitter");var _eventEmitter2=_interopRequireDefault(_eventEmitter);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var URL=require("epubjs/libs/url/url-polyfill.js");var EPUBJS="(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('xmldom'), require('jszip')) :\n\ttypeof define === 'function' && define.amd ? define(['xmldom', 'jszip'], factory) :\n\t(global.ePub = factory(global.xmldom,global.JSZip));\n}(this, (function (XMLDom,JSZip) { 'use strict';\n\n\tXMLDom = XMLDom && XMLDom.hasOwnProperty('default') ? XMLDom['default'] : XMLDom;\n\tJSZip = JSZip && JSZip.hasOwnProperty('default') ? JSZip['default'] : JSZip;\n\n\tvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\tfunction unwrapExports (x) {\n\t\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n\t}\n\n\tfunction createCommonjsModule(fn, module) {\n\t\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n\t}\n\n\tvar isImplemented = function () {\n\t\tvar assign = Object.assign, obj;\n\t\tif (typeof assign !== \"function\") return false;\n\t\tobj = { foo: \"raz\" };\n\t\tassign(obj, { bar: \"dwa\" }, { trzy: \"trzy\" });\n\t\treturn (obj.foo + obj.bar + obj.trzy) === \"razdwatrzy\";\n\t};\n\n\tvar isImplemented$1 = function () {\n\t\ttry {\n\t\t\treturn true;\n\t\t} catch (e) {\n\t return false;\n\t}\n\t};\n\n\t// eslint-disable-next-line no-empty-function\n\tvar noop = function () {};\n\n\tvar _undefined = noop(); // Support ES3 engines\n\n\tvar isValue = function (val) {\n\t return (val !== _undefined) && (val !== null);\n\t};\n\n\tvar keys = Object.keys;\n\n\tvar shim = function (object) {\n\t\treturn keys(isValue(object) ? Object(object) : object);\n\t};\n\n\tvar keys$1 = isImplemented$1()\n\t\t? Object.keys\n\t\t: shim;\n\n\tvar validValue = function (value) {\n\t\tif (!isValue(value)) throw new TypeError(\"Cannot use null or undefined\");\n\t\treturn value;\n\t};\n\n\tvar max   = Math.max;\n\n\tvar shim$1 = function (dest, src /*, \u2026srcn*/) {\n\t\tvar error, i, length = max(arguments.length, 2), assign;\n\t\tdest = Object(validValue(dest));\n\t\tassign = function (key) {\n\t\t\ttry {\n\t\t\t\tdest[key] = src[key];\n\t\t\t} catch (e) {\n\t\t\t\tif (!error) error = e;\n\t\t\t}\n\t\t};\n\t\tfor (i = 1; i < length; ++i) {\n\t\t\tsrc = arguments[i];\n\t\t\tkeys$1(src).forEach(assign);\n\t\t}\n\t\tif (error !== undefined) throw error;\n\t\treturn dest;\n\t};\n\n\tvar assign = isImplemented()\n\t\t? Object.assign\n\t\t: shim$1;\n\n\tvar forEach = Array.prototype.forEach, create = Object.create;\n\n\tvar process = function (src, obj) {\n\t\tvar key;\n\t\tfor (key in src) obj[key] = src[key];\n\t};\n\n\t// eslint-disable-next-line no-unused-vars\n\tvar normalizeOptions = function (opts1 /*, \u2026options*/) {\n\t\tvar result = create(null);\n\t\tforEach.call(arguments, function (options) {\n\t\t\tif (!isValue(options)) return;\n\t\t\tprocess(Object(options), result);\n\t\t});\n\t\treturn result;\n\t};\n\n\t// Deprecated\n\n\tvar isCallable = function (obj) {\n\t return typeof obj === \"function\";\n\t};\n\n\tvar str = \"razdwatrzy\";\n\n\tvar isImplemented$2 = function () {\n\t\tif (typeof str.contains !== \"function\") return false;\n\t\treturn (str.contains(\"dwa\") === true) && (str.contains(\"foo\") === false);\n\t};\n\n\tvar indexOf = String.prototype.indexOf;\n\n\tvar shim$2 = function (searchString/*, position*/) {\n\t\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n\t};\n\n\tvar contains = isImplemented$2()\n\t\t? String.prototype.contains\n\t\t: shim$2;\n\n\tvar d_1 = createCommonjsModule(function (module) {\n\n\tvar d;\n\n\td = module.exports = function (dscr, value/*, options*/) {\n\t\tvar c, e, w, options, desc;\n\t\tif ((arguments.length < 2) || (typeof dscr !== 'string')) {\n\t\t\toptions = value;\n\t\t\tvalue = dscr;\n\t\t\tdscr = null;\n\t\t} else {\n\t\t\toptions = arguments[2];\n\t\t}\n\t\tif (dscr == null) {\n\t\t\tc = w = true;\n\t\t\te = false;\n\t\t} else {\n\t\t\tc = contains.call(dscr, 'c');\n\t\t\te = contains.call(dscr, 'e');\n\t\t\tw = contains.call(dscr, 'w');\n\t\t}\n\n\t\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\t\treturn !options ? desc : assign(normalizeOptions(options), desc);\n\t};\n\n\td.gs = function (dscr, get, set/*, options*/) {\n\t\tvar c, e, options, desc;\n\t\tif (typeof dscr !== 'string') {\n\t\t\toptions = set;\n\t\t\tset = get;\n\t\t\tget = dscr;\n\t\t\tdscr = null;\n\t\t} else {\n\t\t\toptions = arguments[3];\n\t\t}\n\t\tif (get == null) {\n\t\t\tget = undefined;\n\t\t} else if (!isCallable(get)) {\n\t\t\toptions = get;\n\t\t\tget = set = undefined;\n\t\t} else if (set == null) {\n\t\t\tset = undefined;\n\t\t} else if (!isCallable(set)) {\n\t\t\toptions = set;\n\t\t\tset = undefined;\n\t\t}\n\t\tif (dscr == null) {\n\t\t\tc = true;\n\t\t\te = false;\n\t\t} else {\n\t\t\tc = contains.call(dscr, 'c');\n\t\t\te = contains.call(dscr, 'e');\n\t\t}\n\n\t\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\t\treturn !options ? desc : assign(normalizeOptions(options), desc);\n\t};\n\t});\n\n\tvar validCallable = function (fn) {\n\t\tif (typeof fn !== \"function\") throw new TypeError(fn + \" is not a function\");\n\t\treturn fn;\n\t};\n\n\tvar eventEmitter = createCommonjsModule(function (module, exports) {\n\n\tvar apply = Function.prototype.apply, call = Function.prototype.call\n\t  , create = Object.create, defineProperty = Object.defineProperty\n\t  , defineProperties = Object.defineProperties\n\t  , hasOwnProperty = Object.prototype.hasOwnProperty\n\t  , descriptor = { configurable: true, enumerable: false, writable: true }\n\n\t  , on, once, off, emit, methods, descriptors, base;\n\n\ton = function (type, listener) {\n\t\tvar data;\n\n\t\tvalidCallable(listener);\n\n\t\tif (!hasOwnProperty.call(this, '__ee__')) {\n\t\t\tdata = descriptor.value = create(null);\n\t\t\tdefineProperty(this, '__ee__', descriptor);\n\t\t\tdescriptor.value = null;\n\t\t} else {\n\t\t\tdata = this.__ee__;\n\t\t}\n\t\tif (!data[type]) data[type] = listener;\n\t\telse if (typeof data[type] === 'object') data[type].push(listener);\n\t\telse data[type] = [data[type], listener];\n\n\t\treturn this;\n\t};\n\n\tonce = function (type, listener) {\n\t\tvar once, self;\n\n\t\tvalidCallable(listener);\n\t\tself = this;\n\t\ton.call(this, type, once = function () {\n\t\t\toff.call(self, type, once);\n\t\t\tapply.call(listener, this, arguments);\n\t\t});\n\n\t\tonce.__eeOnceListener__ = listener;\n\t\treturn this;\n\t};\n\n\toff = function (type, listener) {\n\t\tvar data, listeners, candidate, i;\n\n\t\tvalidCallable(listener);\n\n\t\tif (!hasOwnProperty.call(this, '__ee__')) return this;\n\t\tdata = this.__ee__;\n\t\tif (!data[type]) return this;\n\t\tlisteners = data[type];\n\n\t\tif (typeof listeners === 'object') {\n\t\t\tfor (i = 0; (candidate = listeners[i]); ++i) {\n\t\t\t\tif ((candidate === listener) ||\n\t\t\t\t\t\t(candidate.__eeOnceListener__ === listener)) {\n\t\t\t\t\tif (listeners.length === 2) data[type] = listeners[i ? 0 : 1];\n\t\t\t\t\telse listeners.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif ((listeners === listener) ||\n\t\t\t\t\t(listeners.__eeOnceListener__ === listener)) {\n\t\t\t\tdelete data[type];\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t};\n\n\temit = function (type) {\n\t\tvar i, l, listener, listeners, args;\n\n\t\tif (!hasOwnProperty.call(this, '__ee__')) return;\n\t\tlisteners = this.__ee__[type];\n\t\tif (!listeners) return;\n\n\t\tif (typeof listeners === 'object') {\n\t\t\tl = arguments.length;\n\t\t\targs = new Array(l - 1);\n\t\t\tfor (i = 1; i < l; ++i) args[i - 1] = arguments[i];\n\n\t\t\tlisteners = listeners.slice();\n\t\t\tfor (i = 0; (listener = listeners[i]); ++i) {\n\t\t\t\tapply.call(listener, this, args);\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (arguments.length) {\n\t\t\tcase 1:\n\t\t\t\tcall.call(listeners, this);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tcall.call(listeners, this, arguments[1]);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tcall.call(listeners, this, arguments[1], arguments[2]);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tl = arguments.length;\n\t\t\t\targs = new Array(l - 1);\n\t\t\t\tfor (i = 1; i < l; ++i) {\n\t\t\t\t\targs[i - 1] = arguments[i];\n\t\t\t\t}\n\t\t\t\tapply.call(listeners, this, args);\n\t\t\t}\n\t\t}\n\t};\n\n\tmethods = {\n\t\ton: on,\n\t\tonce: once,\n\t\toff: off,\n\t\temit: emit\n\t};\n\n\tdescriptors = {\n\t\ton: d_1(on),\n\t\tonce: d_1(once),\n\t\toff: d_1(off),\n\t\temit: d_1(emit)\n\t};\n\n\tbase = defineProperties({}, descriptors);\n\n\tmodule.exports = exports = function (o) {\n\t\treturn (o == null) ? create(base) : defineProperties(Object(o), descriptors);\n\t};\n\texports.methods = methods;\n\t});\n\tvar eventEmitter_1 = eventEmitter.methods;\n\n\t/**\n\t * Core Utilities and Helpers\n\t * @module Core\n\t*/\n\n\t/**\n\t * Vendor prefixed requestAnimationFrame\n\t * @returns {function} requestAnimationFrame\n\t * @memberof Core\n\t */\n\tconst requestAnimationFrame$1 = (typeof window != \"undefined\") ? (window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame) : false;\n\tconst ELEMENT_NODE = 1;\n\tconst TEXT_NODE = 3;\n\tconst COMMENT_NODE = 8;\n\tconst DOCUMENT_NODE = 9;\n\tconst _URL = typeof URL != \"undefined\" ? URL : (typeof window != \"undefined\" ? (window.URL || window.webkitURL || window.mozURL) : undefined);\n\n\t/**\n\t * Generates a UUID\n\t * based on: http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript\n\t * @returns {string} uuid\n\t * @memberof Core\n\t */\n\tfunction uuid() {\n\t\tvar d = new Date().getTime();\n\t  if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\n\t      d += performance.now(); //use high-precision timer if available\n\t  }\n\t  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n\t      var r = (d + Math.random() * 16) % 16 | 0;\n\t      d = Math.floor(d / 16);\n\t      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n\t  });\n\t}\n\n\t/**\n\t * Gets the height of a document\n\t * @returns {number} height\n\t * @memberof Core\n\t */\n\tfunction documentHeight() {\n\t\treturn Math.max(\n\t\t\tdocument.documentElement.clientHeight,\n\t\t\tdocument.body.scrollHeight,\n\t\t\tdocument.documentElement.scrollHeight,\n\t\t\tdocument.body.offsetHeight,\n\t\t\tdocument.documentElement.offsetHeight\n\t\t);\n\t}\n\n\t/**\n\t * Checks if a node is an element\n\t * @returns {boolean}\n\t * @memberof Core\n\t */\n\tfunction isElement(obj) {\n\t\treturn !!(obj && obj.nodeType == 1);\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t * @memberof Core\n\t */\n\tfunction isNumber(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t * @memberof Core\n\t */\n\tfunction isFloat(n) {\n\t\tlet f = parseFloat(n);\n\t\treturn isNumber(n) && (Math.floor(f) !== parseFloat(n));\n\t}\n\n\t/**\n\t * Get a prefixed css property\n\t * @returns {string}\n\t * @memberof Core\n\t */\n\tfunction prefixed(unprefixed) {\n\t\tvar vendors = [\"Webkit\", \"webkit\", \"Moz\", \"O\", \"ms\" ];\n\t\tvar prefixes = [\"-webkit-\", \"-webkit-\", \"-moz-\", \"-o-\", \"-ms-\"];\n\t\tvar upper = unprefixed[0].toUpperCase() + unprefixed.slice(1);\n\t\tvar length = vendors.length;\n\n\t\tif (typeof(document) === \"undefined\" || typeof(document.body.style[unprefixed]) != \"undefined\") {\n\t\t\treturn unprefixed;\n\t\t}\n\n\t\tfor ( var i=0; i < length; i++ ) {\n\t\t\tif (typeof(document.body.style[vendors[i] + upper]) != \"undefined\") {\n\t\t\t\treturn prefixes[i] + unprefixed;\n\t\t\t}\n\t\t}\n\n\t\treturn unprefixed;\n\t}\n\n\t/**\n\t * Apply defaults to an object\n\t * @param {object} obj\n\t * @returns {object}\n\t * @memberof Core\n\t */\n\tfunction defaults(obj) {\n\t\tfor (var i = 1, length = arguments.length; i < length; i++) {\n\t\t\tvar source = arguments[i];\n\t\t\tfor (var prop in source) {\n\t\t\t\tif (obj[prop] === void 0) obj[prop] = source[prop];\n\t\t\t}\n\t\t}\n\t\treturn obj;\n\t}\n\n\t/**\n\t * Extend properties of an object\n\t * @param {object} target\n\t * @returns {object}\n\t * @memberof Core\n\t */\n\tfunction extend(target) {\n\t\tvar sources = [].slice.call(arguments, 1);\n\t\tsources.forEach(function (source) {\n\t\t\tif(!source) return;\n\t\t\tObject.getOwnPropertyNames(source).forEach(function(propName) {\n\t\t\t\tObject.defineProperty(target, propName, Object.getOwnPropertyDescriptor(source, propName));\n\t\t\t});\n\t\t});\n\t\treturn target;\n\t}\n\n\t/**\n\t * Fast quicksort insert for sorted array -- based on:\n\t *  http://stackoverflow.com/questions/1344500/efficient-way-to-insert-a-number-into-a-sorted-array-of-numbers\n\t * @param {any} item\n\t * @param {array} array\n\t * @param {function} [compareFunction]\n\t * @returns {number} location (in array)\n\t * @memberof Core\n\t */\n\tfunction insert(item, array, compareFunction) {\n\t\tvar location = locationOf(item, array, compareFunction);\n\t\tarray.splice(location, 0, item);\n\n\t\treturn location;\n\t}\n\n\t/**\n\t * Finds where something would fit into a sorted array\n\t * @param {any} item\n\t * @param {array} array\n\t * @param {function} [compareFunction]\n\t * @param {function} [_start]\n\t * @param {function} [_end]\n\t * @returns {number} location (in array)\n\t * @memberof Core\n\t */\n\tfunction locationOf(item, array, compareFunction, _start, _end) {\n\t\tvar start = _start || 0;\n\t\tvar end = _end || array.length;\n\t\tvar pivot = parseInt(start + (end - start) / 2);\n\t\tvar compared;\n\t\tif(!compareFunction){\n\t\t\tcompareFunction = function(a, b) {\n\t\t\t\tif(a > b) return 1;\n\t\t\t\tif(a < b) return -1;\n\t\t\t\tif(a == b) return 0;\n\t\t\t};\n\t\t}\n\t\tif(end-start <= 0) {\n\t\t\treturn pivot;\n\t\t}\n\n\t\tcompared = compareFunction(array[pivot], item);\n\t\tif(end-start === 1) {\n\t\t\treturn compared >= 0 ? pivot : pivot + 1;\n\t\t}\n\t\tif(compared === 0) {\n\t\t\treturn pivot;\n\t\t}\n\t\tif(compared === -1) {\n\t\t\treturn locationOf(item, array, compareFunction, pivot, end);\n\t\t} else{\n\t\t\treturn locationOf(item, array, compareFunction, start, pivot);\n\t\t}\n\t}\n\n\t/**\n\t * Finds index of something in a sorted array\n\t * Returns -1 if not found\n\t * @param {any} item\n\t * @param {array} array\n\t * @param {function} [compareFunction]\n\t * @param {function} [_start]\n\t * @param {function} [_end]\n\t * @returns {number} index (in array) or -1\n\t * @memberof Core\n\t */\n\tfunction indexOfSorted$1(item, array, compareFunction, _start, _end) {\n\t\tvar start = _start || 0;\n\t\tvar end = _end || array.length;\n\t\tvar pivot = parseInt(start + (end - start) / 2);\n\t\tvar compared;\n\t\tif(!compareFunction){\n\t\t\tcompareFunction = function(a, b) {\n\t\t\t\tif(a > b) return 1;\n\t\t\t\tif(a < b) return -1;\n\t\t\t\tif(a == b) return 0;\n\t\t\t};\n\t\t}\n\t\tif(end-start <= 0) {\n\t\t\treturn -1; // Not found\n\t\t}\n\n\t\tcompared = compareFunction(array[pivot], item);\n\t\tif(end-start === 1) {\n\t\t\treturn compared === 0 ? pivot : -1;\n\t\t}\n\t\tif(compared === 0) {\n\t\t\treturn pivot; // Found\n\t\t}\n\t\tif(compared === -1) {\n\t\t\treturn indexOfSorted$1(item, array, compareFunction, pivot, end);\n\t\t} else{\n\t\t\treturn indexOfSorted$1(item, array, compareFunction, start, pivot);\n\t\t}\n\t}\n\t/**\n\t * Find the bounds of an element\n\t * taking padding and margin into account\n\t * @param {element} el\n\t * @returns {{ width: Number, height: Number}}\n\t * @memberof Core\n\t */\n\tfunction bounds(el) {\n\n\t\tvar style = window.getComputedStyle(el);\n\t\tvar widthProps = [\"width\", \"paddingRight\", \"paddingLeft\", \"marginRight\", \"marginLeft\", \"borderRightWidth\", \"borderLeftWidth\"];\n\t\tvar heightProps = [\"height\", \"paddingTop\", \"paddingBottom\", \"marginTop\", \"marginBottom\", \"borderTopWidth\", \"borderBottomWidth\"];\n\n\t\tvar width = 0;\n\t\tvar height = 0;\n\n\t\twidthProps.forEach(function(prop){\n\t\t\twidth += parseFloat(style[prop]) || 0;\n\t\t});\n\n\t\theightProps.forEach(function(prop){\n\t\t\theight += parseFloat(style[prop]) || 0;\n\t\t});\n\n\t\treturn {\n\t\t\theight: height,\n\t\t\twidth: width\n\t\t};\n\n\t}\n\n\t/**\n\t * Find the bounds of an element\n\t * taking padding, margin and borders into account\n\t * @param {element} el\n\t * @returns {{ width: Number, height: Number}}\n\t * @memberof Core\n\t */\n\tfunction borders(el) {\n\n\t\tvar style = window.getComputedStyle(el);\n\t\tvar widthProps = [\"paddingRight\", \"paddingLeft\", \"marginRight\", \"marginLeft\", \"borderRightWidth\", \"borderLeftWidth\"];\n\t\tvar heightProps = [\"paddingTop\", \"paddingBottom\", \"marginTop\", \"marginBottom\", \"borderTopWidth\", \"borderBottomWidth\"];\n\n\t\tvar width = 0;\n\t\tvar height = 0;\n\n\t\twidthProps.forEach(function(prop){\n\t\t\twidth += parseFloat(style[prop]) || 0;\n\t\t});\n\n\t\theightProps.forEach(function(prop){\n\t\t\theight += parseFloat(style[prop]) || 0;\n\t\t});\n\n\t\treturn {\n\t\t\theight: height,\n\t\t\twidth: width\n\t\t};\n\n\t}\n\n\t/**\n\t * Find the equivelent of getBoundingClientRect of a browser window\n\t * @returns {{ width: Number, height: Number, top: Number, left: Number, right: Number, bottom: Number }}\n\t * @memberof Core\n\t */\n\tfunction windowBounds() {\n\n\t\tvar width = window.innerWidth;\n\t\tvar height = window.innerHeight;\n\n\t\treturn {\n\t\t\ttop: 0,\n\t\t\tleft: 0,\n\t\t\tright: width,\n\t\t\tbottom: height,\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\n\t}\n\n\t/**\n\t * Gets the index of a node in its parent\n\t * @private\n\t * @memberof Core\n\t */\n\tfunction indexOfNode(node, typeId) {\n\t\tvar parent = node.parentNode;\n\t\tvar children = parent.childNodes;\n\t\tvar sib;\n\t\tvar index = -1;\n\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\tsib = children[i];\n\t\t\tif (sib.nodeType === typeId) {\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\tif (sib == node) break;\n\t\t}\n\n\t\treturn index;\n\t}\n\n\t/**\n\t * Gets the index of a text node in its parent\n\t * @param {node} textNode\n\t * @returns {number} index\n\t * @memberof Core\n\t */\n\tfunction indexOfTextNode(textNode) {\n\t\treturn indexOfNode(textNode, TEXT_NODE);\n\t}\n\n\t/**\n\t * Gets the index of an element node in its parent\n\t * @param {element} elementNode\n\t * @returns {number} index\n\t * @memberof Core\n\t */\n\tfunction indexOfElementNode(elementNode) {\n\t\treturn indexOfNode(elementNode, ELEMENT_NODE);\n\t}\n\n\t/**\n\t * Check if extension is xml\n\t * @param {string} ext\n\t * @returns {boolean}\n\t * @memberof Core\n\t */\n\tfunction isXml(ext) {\n\t\treturn [\"xml\", \"opf\", \"ncx\"].indexOf(ext) > -1;\n\t}\n\n\t/**\n\t * Create a new blob\n\t * @param {any} content\n\t * @param {string} mime\n\t * @returns {Blob}\n\t * @memberof Core\n\t */\n\tfunction createBlob(content, mime){\n\t\treturn new Blob([content], {type : mime });\n\t}\n\n\t/**\n\t * Create a new blob url\n\t * @param {any} content\n\t * @param {string} mime\n\t * @returns {string} url\n\t * @memberof Core\n\t */\n\tfunction createBlobUrl(content, mime){\n\t\tvar tempUrl;\n\t\tvar blob = createBlob(content, mime);\n\n\t\ttempUrl = _URL.createObjectURL(blob);\n\n\t\treturn tempUrl;\n\t}\n\n\t/**\n\t * Remove a blob url\n\t * @param {string} url\n\t * @memberof Core\n\t */\n\tfunction revokeBlobUrl(url){\n\t\treturn _URL.revokeObjectURL(url);\n\t}\n\n\t/**\n\t * Create a new base64 encoded url\n\t * @param {any} content\n\t * @param {string} mime\n\t * @returns {string} url\n\t * @memberof Core\n\t */\n\tfunction createBase64Url(content, mime){\n\t\tvar data;\n\t\tvar datauri;\n\n\t\tif (typeof(content) !== \"string\") {\n\t\t\t// Only handles strings\n\t\t\treturn;\n\t\t}\n\n\t\tdata = btoa(encodeURIComponent(content));\n\n\t\tdatauri = \"data:\" + mime + \";base64,\" + data;\n\n\t\treturn datauri;\n\t}\n\n\t/**\n\t * Get type of an object\n\t * @param {object} obj\n\t * @returns {string} type\n\t * @memberof Core\n\t */\n\tfunction type(obj){\n\t\treturn Object.prototype.toString.call(obj).slice(8, -1);\n\t}\n\n\t/**\n\t * Parse xml (or html) markup\n\t * @param {string} markup\n\t * @param {string} mime\n\t * @param {boolean} forceXMLDom force using xmlDom to parse instead of native parser\n\t * @returns {document} document\n\t * @memberof Core\n\t */\n\tfunction parse(markup, mime, forceXMLDom) {\n\t\tvar doc;\n\t\tvar Parser;\n\n\t\tif (typeof DOMParser === \"undefined\" || forceXMLDom) {\n\t\t\tParser = XMLDom.DOMParser;\n\t\t} else {\n\t\t\tParser = DOMParser;\n\t\t}\n\n\t\t// Remove byte order mark before parsing\n\t\t// https://www.w3.org/International/questions/qa-byte-order-mark\n\t\tif(markup.charCodeAt(0) === 0xFEFF) {\n\t\t\tmarkup = markup.slice(1);\n\t\t}\n\n\t\tdoc = new Parser().parseFromString(markup, mime);\n\n\t\treturn doc;\n\t}\n\n\t/**\n\t * querySelector polyfill\n\t * @param {element} el\n\t * @param {string} sel selector string\n\t * @returns {element} element\n\t * @memberof Core\n\t */\n\tfunction qs(el, sel) {\n\t\tvar elements;\n\t\tif (!el) {\n\t\t\tthrow new Error(\"No Element Provided\");\n\t\t}\n\n\t\tif (typeof el.querySelector != \"undefined\") {\n\t\t\treturn el.querySelector(sel);\n\t\t} else {\n\t\t\telements = el.getElementsByTagName(sel);\n\t\t\tif (elements.length) {\n\t\t\t\treturn elements[0];\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * querySelectorAll polyfill\n\t * @param {element} el\n\t * @param {string} sel selector string\n\t * @returns {element[]} elements\n\t * @memberof Core\n\t */\n\tfunction qsa(el, sel) {\n\n\t\tif (typeof el.querySelector != \"undefined\") {\n\t\t\treturn el.querySelectorAll(sel);\n\t\t} else {\n\t\t\treturn el.getElementsByTagName(sel);\n\t\t}\n\t}\n\n\t/**\n\t * querySelector by property\n\t * @param {element} el\n\t * @param {string} sel selector string\n\t * @param {props[]} props\n\t * @returns {element[]} elements\n\t * @memberof Core\n\t */\n\tfunction qsp(el, sel, props) {\n\t\tvar q, filtered;\n\t\tif (typeof el.querySelector != \"undefined\") {\n\t\t\tsel += \"[\";\n\t\t\tfor (var prop in props) {\n\t\t\t\tsel += prop + \"~='\" + props[prop] + \"'\";\n\t\t\t}\n\t\t\tsel += \"]\";\n\n\t\t\treturn el.querySelector(sel);\n\t\t} else {\n\t\t\tq = el.getElementsByTagName(sel);\n\t\t\tfiltered = Array.prototype.slice.call(q, 0).filter(function(el) {\n\t\t\t\tfor (var prop in props) {\n\t\t\t\t\tif(el.getAttribute(prop) === props[prop]){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\tif (filtered) {\n\t\t\t\treturn filtered[0];\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Sprint through all text nodes in a document\n\t * @memberof Core\n\t * @param  {element} root element to start with\n\t * @param  {function} func function to run on each element\n\t */\n\tfunction sprint(root, func) {\n\t\tvar doc = root.ownerDocument || root;\n\t\tif (typeof(doc.createTreeWalker) !== \"undefined\") {\n\t\t\ttreeWalker(root, func, NodeFilter.SHOW_TEXT);\n\t\t} else {\n\t\t\twalk(root, function(node) {\n\t\t\t\tif (node && node.nodeType === 3) { // Node.TEXT_NODE\n\t\t\t\t\tfunc(node);\n\t\t\t\t}\n\t\t\t}, true);\n\t\t}\n\t}\n\n\tfunction treeWalker(root, func, filter) {\n\t\tvar treeWalker = document.createTreeWalker(root, filter, null, false);\n\t\tlet node;\n\t\twhile ((node = treeWalker.nextNode())) {\n\t\t\tfunc(node);\n\t\t}\n\t}\n\n\t/**\n\t * @memberof Core\n\t * @param {node} node\n\t * @param {callback} return false for continue,true for break inside callback\n\t */\n\tfunction walk(node,callback){\n\t\tif(callback(node)){\n\t\t\treturn true;\n\t\t}\n\t\tnode = node.firstChild;\n\t\tif(node){\n\t\t\tdo{\n\t\t\t\tlet walked = walk(node,callback);\n\t\t\t\tif(walked){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tnode = node.nextSibling;\n\t\t\t} while(node);\n\t\t}\n\t}\n\n\t/**\n\t * Convert a blob to a base64 encoded string\n\t * @param {Blog} blob\n\t * @returns {string}\n\t * @memberof Core\n\t */\n\tfunction blob2base64(blob) {\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\tvar reader = new FileReader();\n\t\t\treader.readAsDataURL(blob);\n\t\t\treader.onloadend = function() {\n\t\t\t\tresolve(reader.result);\n\t\t\t};\n\t\t});\n\t}\n\n\n\t/**\n\t * Creates a new pending promise and provides methods to resolve or reject it.\n\t * From: https://developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules/Promise.jsm/Deferred#backwards_forwards_compatible\n\t * @memberof Core\n\t */\n\tfunction defer() {\n\t\t/* A method to resolve the associated Promise with the value passed.\n\t\t * If the promise is already settled it does nothing.\n\t\t *\n\t\t * @param {anything} value : This value is used to resolve the promise\n\t\t * If the value is a Promise then the associated promise assumes the state\n\t\t * of Promise passed as value.\n\t\t */\n\t\tthis.resolve = null;\n\n\t\t/* A method to reject the assocaited Promise with the value passed.\n\t\t * If the promise is already settled it does nothing.\n\t\t *\n\t\t * @param {anything} reason: The reason for the rejection of the Promise.\n\t\t * Generally its an Error object. If however a Promise is passed, then the Promise\n\t\t * itself will be the reason for rejection no matter the state of the Promise.\n\t\t */\n\t\tthis.reject = null;\n\n\t\tthis.id = uuid();\n\n\t\t/* A newly created Pomise object.\n\t\t * Initially in pending state.\n\t\t */\n\t\tthis.promise = new Promise((resolve, reject) => {\n\t\t\tthis.resolve = resolve;\n\t\t\tthis.reject = reject;\n\t\t});\n\t\tObject.freeze(this);\n\t}\n\n\t/**\n\t * querySelector with filter by epub type\n\t * @param {element} html\n\t * @param {string} element element type to find\n\t * @param {string} type epub type to find\n\t * @returns {element[]} elements\n\t * @memberof Core\n\t */\n\tfunction querySelectorByType(html, element, type){\n\t\tvar query;\n\t\tif (typeof html.querySelector != \"undefined\") {\n\t\t\tquery = html.querySelector(`${element}[*|type=\"${type}\"]`);\n\t\t}\n\t\t// Handle IE not supporting namespaced epub:type in querySelector\n\t\tif(!query || query.length === 0) {\n\t\t\tquery = qsa(html, element);\n\t\t\tfor (var i = 0; i < query.length; i++) {\n\t\t\t\tif(query[i].getAttributeNS(\"http://www.idpf.org/2007/ops\", \"type\") === type ||\n\t\t\t\t\t query[i].getAttribute(\"epub:type\") === type) {\n\t\t\t\t\treturn query[i];\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn query;\n\t\t}\n\t}\n\n\t/**\n\t * Find direct decendents of an element\n\t * @param {element} el\n\t * @returns {element[]} children\n\t * @memberof Core\n\t */\n\tfunction findChildren(el) {\n\t\tvar result = [];\n\t\tvar childNodes = el.childNodes;\n\t\tfor (var i = 0; i < childNodes.length; i++) {\n\t\t\tlet node = childNodes[i];\n\t\t\tif (node.nodeType === 1) {\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * Find all parents (ancestors) of an element\n\t * @param {element} node\n\t * @returns {element[]} parents\n\t * @memberof Core\n\t */\n\tfunction parents(node) {\n\t\tvar nodes = [node];\n\t\tfor (; node; node = node.parentNode) {\n\t\t\tnodes.unshift(node);\n\t\t}\n\t\treturn nodes;\n\t}\n\n\t/**\n\t * Find all direct decendents of a specific type\n\t * @param {element} el\n\t * @param {string} nodeName\n\t * @param {boolean} [single]\n\t * @returns {element[]} children\n\t * @memberof Core\n\t */\n\tfunction filterChildren(el, nodeName, single) {\n\t\tvar result = [];\n\t\tvar childNodes = el.childNodes;\n\t\tfor (var i = 0; i < childNodes.length; i++) {\n\t\t\tlet node = childNodes[i];\n\t\t\tif (node.nodeType === 1 && node.nodeName.toLowerCase() === nodeName) {\n\t\t\t\tif (single) {\n\t\t\t\t\treturn node;\n\t\t\t\t} else {\n\t\t\t\t\tresult.push(node);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!single) {\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t/**\n\t * Filter all parents (ancestors) with tag name\n\t * @param {element} node\n\t * @param {string} tagname\n\t * @returns {element[]} parents\n\t * @memberof Core\n\t */\n\tfunction getParentByTagName(node, tagname) {\n\t\tlet parent;\n\t\tif (node === null || tagname === \"\") return;\n\t\tparent = node.parentNode;\n\t\twhile (parent.nodeType === 1) {\n\t\t\tif (parent.tagName.toLowerCase() === tagname) {\n\t\t\t\treturn parent;\n\t\t\t}\n\t\t\tparent = parent.parentNode;\n\t\t}\n\t}\n\n\t/**\n\t * Get the next section in the spine\n\t */\n\tfunction nextSection(section, spine) {\n\t\tlet nextIndex = section.index;\n\t\twhile (nextIndex < spine.length-1) {\n\t\t\tlet next = spine[nextIndex+1];\n\t\t\tif (next && (next.linear === true || next.linear === \"yes\")) {\n\t\t\t\treturn next;\n\t\t\t}\n\t\t\tnextIndex += 1;\n\t\t}\n\t\treturn;\n\t}\n\n\t/**\n\t * Get the previous section in the spine\n\t */\n\tfunction prevSection(section, spine) {\n\t\tlet prevIndex = section.index;\n\t\twhile (prevIndex > 0) {\n\t\t\tlet prev = spine[prevIndex-1];\n\t\t\tif (prev && (prev.linear === true || prev.linear === \"yes\")) {\n\t\t\t\treturn prev;\n\t\t\t}\n\t\t\tprevIndex -= 1;\n\t\t}\n\t\treturn;\n\t}\n\n\t/**\n\t * Serialize the contents of a document\n\t */\n\tfunction serialize(doc) {\n\t\tlet userAgent = (typeof navigator !== \"undefined\" && navigator.userAgent) || \"\";\n\t\tlet isIE = userAgent.indexOf(\"Trident\") >= 0;\n\t\tlet Serializer;\n\t\tif (typeof XMLSerializer === \"undefined\" || isIE) {\n\t\t\tSerializer = XMLDom.XMLSerializer;\n\t\t} else {\n\t\t\tSerializer = XMLSerializer;\n\t\t}\n\t\tlet serializer = new Serializer();\n\t\treturn serializer.serializeToString(doc);\n\t}\n\n\t/**\n\t * Lightweight Polyfill for DOM Range\n\t * @class\n\t * @memberof Core\n\t */\n\tclass RangeObject {\n\t\tconstructor() {\n\t\t\tthis.collapsed = false;\n\t\t\tthis.commonAncestorContainer = undefined;\n\t\t\tthis.endContainer = undefined;\n\t\t\tthis.endOffset = undefined;\n\t\t\tthis.startContainer = undefined;\n\t\t\tthis.startOffset = undefined;\n\t\t}\n\n\t\tsetStart(startNode, startOffset) {\n\t\t\tthis.startContainer = startNode;\n\t\t\tthis.startOffset = startOffset;\n\n\t\t\tif (!this.endContainer) {\n\t\t\t\tthis.collapse(true);\n\t\t\t} else {\n\t\t\t\tthis.commonAncestorContainer = this._commonAncestorContainer();\n\t\t\t}\n\n\t\t\tthis._checkCollapsed();\n\t\t}\n\n\t\tsetEnd(endNode, endOffset) {\n\t\t\tthis.endContainer = endNode;\n\t\t\tthis.endOffset = endOffset;\n\n\t\t\tif (!this.startContainer) {\n\t\t\t\tthis.collapse(false);\n\t\t\t} else {\n\t\t\t\tthis.collapsed = false;\n\t\t\t\tthis.commonAncestorContainer = this._commonAncestorContainer();\n\t\t\t}\n\n\t\t\tthis._checkCollapsed();\n\t\t}\n\n\t\tcollapse(toStart) {\n\t\t\tthis.collapsed = true;\n\t\t\tif (toStart) {\n\t\t\t\tthis.endContainer = this.startContainer;\n\t\t\t\tthis.endOffset = this.startOffset;\n\t\t\t\tthis.commonAncestorContainer = this.startContainer.parentNode;\n\t\t\t} else {\n\t\t\t\tthis.startContainer = this.endContainer;\n\t\t\t\tthis.startOffset = this.endOffset;\n\t\t\t\tthis.commonAncestorContainer = this.endOffset.parentNode;\n\t\t\t}\n\t\t}\n\n\t\tselectNode(referenceNode) {\n\t\t\tlet parent = referenceNode.parentNode;\n\t\t\tlet index = Array.prototype.indexOf.call(parent.childNodes, referenceNode);\n\t\t\tthis.setStart(parent, index);\n\t\t\tthis.setEnd(parent, index + 1);\n\t\t}\n\n\t\tselectNodeContents(referenceNode) {\n\t\t\t// let end = referenceNode.childNodes[referenceNode.childNodes - 1];\n\t\t\tlet endIndex = (referenceNode.nodeType === 3) ?\n\t\t\t\treferenceNode.textContent.length : parent.childNodes.length;\n\t\t\tthis.setStart(referenceNode, 0);\n\t\t\tthis.setEnd(referenceNode, endIndex);\n\t\t}\n\n\t\t_commonAncestorContainer(startContainer, endContainer) {\n\t\t\tvar startParents = parents(startContainer || this.startContainer);\n\t\t\tvar endParents = parents(endContainer || this.endContainer);\n\n\t\t\tif (startParents[0] != endParents[0]) return undefined;\n\n\t\t\tfor (var i = 0; i < startParents.length; i++) {\n\t\t\t\tif (startParents[i] != endParents[i]) {\n\t\t\t\t\treturn startParents[i - 1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_checkCollapsed() {\n\t\t\tif (this.startContainer === this.endContainer &&\n\t\t\t\t\tthis.startOffset === this.endOffset) {\n\t\t\t\tthis.collapsed = true;\n\t\t\t} else {\n\t\t\t\tthis.collapsed = false;\n\t\t\t}\n\t\t}\n\n\t\ttoString() {\n\t\t\t// TODO: implement walking between start and end to find text\n\t\t}\n\t}\n\n\tvar utils = /*#__PURE__*/Object.freeze({\n\t\trequestAnimationFrame: requestAnimationFrame$1,\n\t\tELEMENT_NODE: ELEMENT_NODE,\n\t\tTEXT_NODE: TEXT_NODE,\n\t\tCOMMENT_NODE: COMMENT_NODE,\n\t\tDOCUMENT_NODE: DOCUMENT_NODE,\n\t\t_URL: _URL,\n\t\tuuid: uuid,\n\t\tdocumentHeight: documentHeight,\n\t\tisElement: isElement,\n\t\tisNumber: isNumber,\n\t\tisFloat: isFloat,\n\t\tprefixed: prefixed,\n\t\tdefaults: defaults,\n\t\textend: extend,\n\t\tinsert: insert,\n\t\tlocationOf: locationOf,\n\t\tindexOfSorted: indexOfSorted$1,\n\t\tbounds: bounds,\n\t\tborders: borders,\n\t\twindowBounds: windowBounds,\n\t\tindexOfNode: indexOfNode,\n\t\tindexOfTextNode: indexOfTextNode,\n\t\tindexOfElementNode: indexOfElementNode,\n\t\tisXml: isXml,\n\t\tcreateBlob: createBlob,\n\t\tcreateBlobUrl: createBlobUrl,\n\t\trevokeBlobUrl: revokeBlobUrl,\n\t\tcreateBase64Url: createBase64Url,\n\t\ttype: type,\n\t\tparse: parse,\n\t\tqs: qs,\n\t\tqsa: qsa,\n\t\tqsp: qsp,\n\t\tsprint: sprint,\n\t\ttreeWalker: treeWalker,\n\t\twalk: walk,\n\t\tblob2base64: blob2base64,\n\t\tdefer: defer,\n\t\tquerySelectorByType: querySelectorByType,\n\t\tfindChildren: findChildren,\n\t\tparents: parents,\n\t\tfilterChildren: filterChildren,\n\t\tgetParentByTagName: getParentByTagName,\n\t\tnextSection: nextSection,\n\t\tprevSection: prevSection,\n\t\tserialize: serialize,\n\t\tRangeObject: RangeObject\n\t});\n\n\tif (!process$1) {\n\t  var process$1 = {\n\t    \"cwd\" : function () { return '/' }\n\t  };\n\t}\n\n\tfunction assertPath(path) {\n\t  if (typeof path !== 'string') {\n\t    throw new TypeError('Path must be a string. Received ' + path);\n\t  }\n\t}\n\n\t// Resolves . and .. elements in a path with directory names\n\tfunction normalizeStringPosix(path, allowAboveRoot) {\n\t  var res = '';\n\t  var lastSlash = -1;\n\t  var dots = 0;\n\t  var code;\n\t  for (var i = 0; i <= path.length; ++i) {\n\t    if (i < path.length)\n\t      code = path.charCodeAt(i);\n\t    else if (code === 47/*/*/)\n\t      break;\n\t    else\n\t      code = 47/*/*/;\n\t    if (code === 47/*/*/) {\n\t      if (lastSlash === i - 1 || dots === 1) {\n\t        // NOOP\n\t      } else if (lastSlash !== i - 1 && dots === 2) {\n\t        if (res.length < 2 ||\n\t            res.charCodeAt(res.length - 1) !== 46/*.*/ ||\n\t            res.charCodeAt(res.length - 2) !== 46/*.*/) {\n\t          if (res.length > 2) {\n\t            var start = res.length - 1;\n\t            var j = start;\n\t            for (; j >= 0; --j) {\n\t              if (res.charCodeAt(j) === 47/*/*/)\n\t                break;\n\t            }\n\t            if (j !== start) {\n\t              if (j === -1)\n\t                res = '';\n\t              else\n\t                res = res.slice(0, j);\n\t              lastSlash = i;\n\t              dots = 0;\n\t              continue;\n\t            }\n\t          } else if (res.length === 2 || res.length === 1) {\n\t            res = '';\n\t            lastSlash = i;\n\t            dots = 0;\n\t            continue;\n\t          }\n\t        }\n\t        if (allowAboveRoot) {\n\t          if (res.length > 0)\n\t            res += '/..';\n\t          else\n\t            res = '..';\n\t        }\n\t      } else {\n\t        if (res.length > 0)\n\t          res += '/' + path.slice(lastSlash + 1, i);\n\t        else\n\t          res = path.slice(lastSlash + 1, i);\n\t      }\n\t      lastSlash = i;\n\t      dots = 0;\n\t    } else if (code === 46/*.*/ && dots !== -1) {\n\t      ++dots;\n\t    } else {\n\t      dots = -1;\n\t    }\n\t  }\n\t  return res;\n\t}\n\n\tfunction _format(sep, pathObject) {\n\t  var dir = pathObject.dir || pathObject.root;\n\t  var base = pathObject.base ||\n\t    ((pathObject.name || '') + (pathObject.ext || ''));\n\t  if (!dir) {\n\t    return base;\n\t  }\n\t  if (dir === pathObject.root) {\n\t    return dir + base;\n\t  }\n\t  return dir + sep + base;\n\t}\n\n\tvar posix = {\n\t  // path.resolve([from ...], to)\n\t  resolve: function resolve() {\n\t    var resolvedPath = '';\n\t    var resolvedAbsolute = false;\n\t    var cwd;\n\n\t    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t      var path;\n\t      if (i >= 0)\n\t        path = arguments[i];\n\t      else {\n\t        if (cwd === undefined)\n\t          cwd = process$1.cwd();\n\t        path = cwd;\n\t      }\n\n\t      assertPath(path);\n\n\t      // Skip empty entries\n\t      if (path.length === 0) {\n\t        continue;\n\t      }\n\n\t      resolvedPath = path + '/' + resolvedPath;\n\t      resolvedAbsolute = path.charCodeAt(0) === 47/*/*/;\n\t    }\n\n\t    // At this point the path should be resolved to a full absolute path, but\n\t    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t    // Normalize the path\n\t    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n\t    if (resolvedAbsolute) {\n\t      if (resolvedPath.length > 0)\n\t        return '/' + resolvedPath;\n\t      else\n\t        return '/';\n\t    } else if (resolvedPath.length > 0) {\n\t      return resolvedPath;\n\t    } else {\n\t      return '.';\n\t    }\n\t  },\n\n\n\t  normalize: function normalize(path) {\n\t    assertPath(path);\n\n\t    if (path.length === 0)\n\t      return '.';\n\n\t    var isAbsolute = path.charCodeAt(0) === 47/*/*/;\n\t    var trailingSeparator = path.charCodeAt(path.length - 1) === 47/*/*/;\n\n\t    // Normalize the path\n\t    path = normalizeStringPosix(path, !isAbsolute);\n\n\t    if (path.length === 0 && !isAbsolute)\n\t      path = '.';\n\t    if (path.length > 0 && trailingSeparator)\n\t      path += '/';\n\n\t    if (isAbsolute)\n\t      return '/' + path;\n\t    return path;\n\t  },\n\n\n\t  isAbsolute: function isAbsolute(path) {\n\t    assertPath(path);\n\t    return path.length > 0 && path.charCodeAt(0) === 47/*/*/;\n\t  },\n\n\n\t  join: function join() {\n\t    if (arguments.length === 0)\n\t      return '.';\n\t    var joined;\n\t    for (var i = 0; i < arguments.length; ++i) {\n\t      var arg = arguments[i];\n\t      assertPath(arg);\n\t      if (arg.length > 0) {\n\t        if (joined === undefined)\n\t          joined = arg;\n\t        else\n\t          joined += '/' + arg;\n\t      }\n\t    }\n\t    if (joined === undefined)\n\t      return '.';\n\t    return posix.normalize(joined);\n\t  },\n\n\n\t  relative: function relative(from, to) {\n\t    assertPath(from);\n\t    assertPath(to);\n\n\t    if (from === to)\n\t      return '';\n\n\t    from = posix.resolve(from);\n\t    to = posix.resolve(to);\n\n\t    if (from === to)\n\t      return '';\n\n\t    // Trim any leading backslashes\n\t    var fromStart = 1;\n\t    for (; fromStart < from.length; ++fromStart) {\n\t      if (from.charCodeAt(fromStart) !== 47/*/*/)\n\t        break;\n\t    }\n\t    var fromEnd = from.length;\n\t    var fromLen = (fromEnd - fromStart);\n\n\t    // Trim any leading backslashes\n\t    var toStart = 1;\n\t    for (; toStart < to.length; ++toStart) {\n\t      if (to.charCodeAt(toStart) !== 47/*/*/)\n\t        break;\n\t    }\n\t    var toEnd = to.length;\n\t    var toLen = (toEnd - toStart);\n\n\t    // Compare paths to find the longest common path from root\n\t    var length = (fromLen < toLen ? fromLen : toLen);\n\t    var lastCommonSep = -1;\n\t    var i = 0;\n\t    for (; i <= length; ++i) {\n\t      if (i === length) {\n\t        if (toLen > length) {\n\t          if (to.charCodeAt(toStart + i) === 47/*/*/) {\n\t            // We get here if `from` is the exact base path for `to`.\n\t            // For example: from='/foo/bar'; to='/foo/bar/baz'\n\t            return to.slice(toStart + i + 1);\n\t          } else if (i === 0) {\n\t            // We get here if `from` is the root\n\t            // For example: from='/'; to='/foo'\n\t            return to.slice(toStart + i);\n\t          }\n\t        } else if (fromLen > length) {\n\t          if (from.charCodeAt(fromStart + i) === 47/*/*/) {\n\t            // We get here if `to` is the exact base path for `from`.\n\t            // For example: from='/foo/bar/baz'; to='/foo/bar'\n\t            lastCommonSep = i;\n\t          } else if (i === 0) {\n\t            // We get here if `to` is the root.\n\t            // For example: from='/foo'; to='/'\n\t            lastCommonSep = 0;\n\t          }\n\t        }\n\t        break;\n\t      }\n\t      var fromCode = from.charCodeAt(fromStart + i);\n\t      var toCode = to.charCodeAt(toStart + i);\n\t      if (fromCode !== toCode)\n\t        break;\n\t      else if (fromCode === 47/*/*/)\n\t        lastCommonSep = i;\n\t    }\n\n\t    var out = '';\n\t    // Generate the relative path based on the path difference between `to`\n\t    // and `from`\n\t    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t      if (i === fromEnd || from.charCodeAt(i) === 47/*/*/) {\n\t        if (out.length === 0)\n\t          out += '..';\n\t        else\n\t          out += '/..';\n\t      }\n\t    }\n\n\t    // Lastly, append the rest of the destination (`to`) path that comes after\n\t    // the common path parts\n\t    if (out.length > 0)\n\t      return out + to.slice(toStart + lastCommonSep);\n\t    else {\n\t      toStart += lastCommonSep;\n\t      if (to.charCodeAt(toStart) === 47/*/*/)\n\t        ++toStart;\n\t      return to.slice(toStart);\n\t    }\n\t  },\n\n\n\t  _makeLong: function _makeLong(path) {\n\t    return path;\n\t  },\n\n\n\t  dirname: function dirname(path) {\n\t    assertPath(path);\n\t    if (path.length === 0)\n\t      return '.';\n\t    var code = path.charCodeAt(0);\n\t    var hasRoot = (code === 47/*/*/);\n\t    var end = -1;\n\t    var matchedSlash = true;\n\t    for (var i = path.length - 1; i >= 1; --i) {\n\t      code = path.charCodeAt(i);\n\t      if (code === 47/*/*/) {\n\t        if (!matchedSlash) {\n\t          end = i;\n\t          break;\n\t        }\n\t      } else {\n\t        // We saw the first non-path separator\n\t        matchedSlash = false;\n\t      }\n\t    }\n\n\t    if (end === -1)\n\t      return hasRoot ? '/' : '.';\n\t    if (hasRoot && end === 1)\n\t      return '//';\n\t    return path.slice(0, end);\n\t  },\n\n\n\t  basename: function basename(path, ext) {\n\t    if (ext !== undefined && typeof ext !== 'string')\n\t      throw new TypeError('\"ext\" argument must be a string');\n\t    assertPath(path);\n\n\t    var start = 0;\n\t    var end = -1;\n\t    var matchedSlash = true;\n\t    var i;\n\n\t    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t      if (ext.length === path.length && ext === path)\n\t        return '';\n\t      var extIdx = ext.length - 1;\n\t      var firstNonSlashEnd = -1;\n\t      for (i = path.length - 1; i >= 0; --i) {\n\t        var code = path.charCodeAt(i);\n\t        if (code === 47/*/*/) {\n\t          // If we reached a path separator that was not part of a set of path\n\t          // separators at the end of the string, stop now\n\t          if (!matchedSlash) {\n\t            start = i + 1;\n\t            break;\n\t          }\n\t        } else {\n\t          if (firstNonSlashEnd === -1) {\n\t            // We saw the first non-path separator, remember this index in case\n\t            // we need it if the extension ends up not matching\n\t            matchedSlash = false;\n\t            firstNonSlashEnd = i + 1;\n\t          }\n\t          if (extIdx >= 0) {\n\t            // Try to match the explicit extension\n\t            if (code === ext.charCodeAt(extIdx)) {\n\t              if (--extIdx === -1) {\n\t                // We matched the extension, so mark this as the end of our path\n\t                // component\n\t                end = i;\n\t              }\n\t            } else {\n\t              // Extension does not match, so our result is the entire path\n\t              // component\n\t              extIdx = -1;\n\t              end = firstNonSlashEnd;\n\t            }\n\t          }\n\t        }\n\t      }\n\n\t      if (start === end)\n\t        end = firstNonSlashEnd;\n\t      else if (end === -1)\n\t        end = path.length;\n\t      return path.slice(start, end);\n\t    } else {\n\t      for (i = path.length - 1; i >= 0; --i) {\n\t        if (path.charCodeAt(i) === 47/*/*/) {\n\t          // If we reached a path separator that was not part of a set of path\n\t          // separators at the end of the string, stop now\n\t          if (!matchedSlash) {\n\t            start = i + 1;\n\t            break;\n\t          }\n\t        } else if (end === -1) {\n\t          // We saw the first non-path separator, mark this as the end of our\n\t          // path component\n\t          matchedSlash = false;\n\t          end = i + 1;\n\t        }\n\t      }\n\n\t      if (end === -1)\n\t        return '';\n\t      return path.slice(start, end);\n\t    }\n\t  },\n\n\n\t  extname: function extname(path) {\n\t    assertPath(path);\n\t    var startDot = -1;\n\t    var startPart = 0;\n\t    var end = -1;\n\t    var matchedSlash = true;\n\t    // Track the state of characters (if any) we see before our first dot and\n\t    // after any path separator we find\n\t    var preDotState = 0;\n\t    for (var i = path.length - 1; i >= 0; --i) {\n\t      var code = path.charCodeAt(i);\n\t      if (code === 47/*/*/) {\n\t        // If we reached a path separator that was not part of a set of path\n\t        // separators at the end of the string, stop now\n\t        if (!matchedSlash) {\n\t          startPart = i + 1;\n\t          break;\n\t        }\n\t        continue;\n\t      }\n\t      if (end === -1) {\n\t        // We saw the first non-path separator, mark this as the end of our\n\t        // extension\n\t        matchedSlash = false;\n\t        end = i + 1;\n\t      }\n\t      if (code === 46/*.*/) {\n\t        // If this is our first dot, mark it as the start of our extension\n\t        if (startDot === -1)\n\t          startDot = i;\n\t        else if (preDotState !== 1)\n\t          preDotState = 1;\n\t      } else if (startDot !== -1) {\n\t        // We saw a non-dot and non-path separator before our dot, so we should\n\t        // have a good chance at having a non-empty extension\n\t        preDotState = -1;\n\t      }\n\t    }\n\n\t    if (startDot === -1 ||\n\t        end === -1 ||\n\t        // We saw a non-dot character immediately before the dot\n\t        preDotState === 0 ||\n\t        // The (right-most) trimmed path component is exactly '..'\n\t        (preDotState === 1 &&\n\t         startDot === end - 1 &&\n\t         startDot === startPart + 1)) {\n\t      return '';\n\t    }\n\t    return path.slice(startDot, end);\n\t  },\n\n\n\t  format: function format(pathObject) {\n\t    if (pathObject === null || typeof pathObject !== 'object') {\n\t      throw new TypeError(\n\t        'Parameter \"pathObject\" must be an object, not ' + typeof(pathObject)\n\t      );\n\t    }\n\t    return _format('/', pathObject);\n\t  },\n\n\n\t  parse: function parse(path) {\n\t    assertPath(path);\n\n\t    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t    if (path.length === 0)\n\t      return ret;\n\t    var code = path.charCodeAt(0);\n\t    var isAbsolute = (code === 47/*/*/);\n\t    var start;\n\t    if (isAbsolute) {\n\t      ret.root = '/';\n\t      start = 1;\n\t    } else {\n\t      start = 0;\n\t    }\n\t    var startDot = -1;\n\t    var startPart = 0;\n\t    var end = -1;\n\t    var matchedSlash = true;\n\t    var i = path.length - 1;\n\n\t    // Track the state of characters (if any) we see before our first dot and\n\t    // after any path separator we find\n\t    var preDotState = 0;\n\n\t    // Get non-dir info\n\t    for (; i >= start; --i) {\n\t      code = path.charCodeAt(i);\n\t      if (code === 47/*/*/) {\n\t        // If we reached a path separator that was not part of a set of path\n\t        // separators at the end of the string, stop now\n\t        if (!matchedSlash) {\n\t          startPart = i + 1;\n\t          break;\n\t        }\n\t        continue;\n\t      }\n\t      if (end === -1) {\n\t        // We saw the first non-path separator, mark this as the end of our\n\t        // extension\n\t        matchedSlash = false;\n\t        end = i + 1;\n\t      }\n\t      if (code === 46/*.*/) {\n\t        // If this is our first dot, mark it as the start of our extension\n\t        if (startDot === -1)\n\t          startDot = i;\n\t        else if (preDotState !== 1)\n\t          preDotState = 1;\n\t      } else if (startDot !== -1) {\n\t        // We saw a non-dot and non-path separator before our dot, so we should\n\t        // have a good chance at having a non-empty extension\n\t        preDotState = -1;\n\t      }\n\t    }\n\n\t    if (startDot === -1 ||\n\t        end === -1 ||\n\t        // We saw a non-dot character immediately before the dot\n\t        preDotState === 0 ||\n\t        // The (right-most) trimmed path component is exactly '..'\n\t        (preDotState === 1 &&\n\t         startDot === end - 1 &&\n\t         startDot === startPart + 1)) {\n\t      if (end !== -1) {\n\t        if (startPart === 0 && isAbsolute)\n\t          ret.base = ret.name = path.slice(1, end);\n\t        else\n\t          ret.base = ret.name = path.slice(startPart, end);\n\t      }\n\t    } else {\n\t      if (startPart === 0 && isAbsolute) {\n\t        ret.name = path.slice(1, startDot);\n\t        ret.base = path.slice(1, end);\n\t      } else {\n\t        ret.name = path.slice(startPart, startDot);\n\t        ret.base = path.slice(startPart, end);\n\t      }\n\t      ret.ext = path.slice(startDot, end);\n\t    }\n\n\t    if (startPart > 0)\n\t      ret.dir = path.slice(0, startPart - 1);\n\t    else if (isAbsolute)\n\t      ret.dir = '/';\n\n\t    return ret;\n\t  },\n\n\n\t  sep: '/',\n\t  delimiter: ':',\n\t  posix: null\n\t};\n\n\n\tvar path = posix;\n\n\t/**\n\t * Creates a Path object for parsing and manipulation of a path strings\n\t *\n\t * Uses a polyfill for Nodejs path: https://nodejs.org/api/path.html\n\t * @param\t{string} pathString\ta url string (relative or absolute)\n\t * @class\n\t */\n\tclass Path {\n\t\tconstructor(pathString) {\n\t\t\tvar protocol;\n\t\t\tvar parsed;\n\n\t\t\tprotocol = pathString.indexOf(\"://\");\n\t\t\tif (protocol > -1) {\n\t\t\t\tpathString = new URL(pathString).pathname;\n\t\t\t}\n\n\t\t\tparsed = this.parse(pathString);\n\n\t\t\tthis.path = pathString;\n\n\t\t\tif (this.isDirectory(pathString)) {\n\t\t\t\tthis.directory = pathString;\n\t\t\t} else {\n\t\t\t\tthis.directory = parsed.dir + \"/\";\n\t\t\t}\n\n\t\t\tthis.filename = parsed.base;\n\t\t\tthis.extension = parsed.ext.slice(1);\n\n\t\t}\n\n\t\t/**\n\t\t * Parse the path: https://nodejs.org/api/path.html#path_path_parse_path\n\t\t * @param\t{string} what\n\t\t * @returns {object}\n\t\t */\n\t\tparse (what) {\n\t\t\treturn path.parse(what);\n\t\t}\n\n\t\t/**\n\t\t * @param\t{string} what\n\t\t * @returns {boolean}\n\t\t */\n\t\tisAbsolute (what) {\n\t\t\treturn path.isAbsolute(what || this.path);\n\t\t}\n\n\t\t/**\n\t\t * Check if path ends with a directory\n\t\t * @param\t{string} what\n\t\t * @returns {boolean}\n\t\t */\n\t\tisDirectory (what) {\n\t\t\treturn (what.charAt(what.length-1) === \"/\");\n\t\t}\n\n\t\t/**\n\t\t * Resolve a path against the directory of the Path\n\t\t *\n\t\t * https://nodejs.org/api/path.html#path_path_resolve_paths\n\t\t * @param\t{string} what\n\t\t * @returns {string} resolved\n\t\t */\n\t\tresolve (what) {\n\t\t\treturn path.resolve(this.directory, what);\n\t\t}\n\n\t\t/**\n\t\t * Resolve a path relative to the directory of the Path\n\t\t *\n\t\t * https://nodejs.org/api/path.html#path_path_relative_from_to\n\t\t * @param\t{string} what\n\t\t * @returns {string} relative\n\t\t */\n\t\trelative (what) {\n\t\t\treturn path.relative(this.directory, what);\n\t\t}\n\n\t\tsplitPath(filename) {\n\t\t\treturn this.splitPathRe.exec(filename).slice(1);\n\t\t}\n\n\t\t/**\n\t\t * Return the path string\n\t\t * @returns {string} path\n\t\t */\n\t\ttoString () {\n\t\t\treturn this.path;\n\t\t}\n\t}\n\n\t/**\n\t * creates a Url object for parsing and manipulation of a url string\n\t * @param\t{string} urlString\ta url string (relative or absolute)\n\t * @param\t{string} [baseString] optional base for the url,\n\t * default to window.location.href\n\t */\n\tclass Url {\n\t\tconstructor(urlString, baseString) {\n\t\t\tvar absolute = (urlString.indexOf(\"://\") > -1);\n\t\t\tvar pathname = urlString;\n\t\t\tvar basePath;\n\n\t\t\tthis.Url = undefined;\n\t\t\tthis.href = urlString;\n\t\t\tthis.protocol = \"\";\n\t\t\tthis.origin = \"\";\n\t\t\tthis.hash = \"\";\n\t\t\tthis.hash = \"\";\n\t\t\tthis.search = \"\";\n\t\t\tthis.base = baseString;\n\n\t\t\tif (!absolute &&\n\t\t\t\t\tbaseString !== false &&\n\t\t\t\t\ttypeof(baseString) !== \"string\" &&\n\t\t\t\t\ttypeof(window) !== \"undefined\" &&\n\t\t\t\t\ttypeof(window.location) !== \"undefined\") {\n\t\t\t\tthis.base = window.location.href;\n\t\t\t}\n\n\t\t\t// URL Polyfill doesn't throw an error if base is empty\n\t\t\tif (absolute || this.base) {\n\t\t\t\ttry {\n\t\t\t\t\tif (this.base) { // Safari doesn't like an undefined base\n\t\t\t\t\t\tthis.Url = new URL(urlString, this.base);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.Url = new URL(urlString);\n\t\t\t\t\t}\n\t\t\t\t\tthis.href = this.Url.href;\n\n\t\t\t\t\tthis.protocol = this.Url.protocol;\n\t\t\t\t\tthis.origin = this.Url.origin;\n\t\t\t\t\tthis.hash = this.Url.hash;\n\t\t\t\t\tthis.search = this.Url.search;\n\n\t\t\t\t\tpathname = this.Url.pathname;\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Skip URL parsing\n\t\t\t\t\tthis.Url = undefined;\n\t\t\t\t\t// resolve the pathname from the base\n\t\t\t\t\tif (this.base) {\n\t\t\t\t\t\tbasePath = new Path(this.base);\n\t\t\t\t\t\tpathname = basePath.resolve(pathname);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.Path = new Path(pathname);\n\n\t\t\tthis.directory = this.Path.directory;\n\t\t\tthis.filename = this.Path.filename;\n\t\t\tthis.extension = this.Path.extension;\n\n\t\t}\n\n\t\t/**\n\t\t * @returns {Path}\n\t\t */\n\t\tpath () {\n\t\t\treturn this.Path;\n\t\t}\n\n\t\t/**\n\t\t * Resolves a relative path to a absolute url\n\t\t * @returns {string} url\n\t\t */\n\t\tresolve (what) {\n\t\t\tvar isAbsolute = (what.indexOf(\"://\") > -1);\n\t\t\tvar fullpath;\n\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn what;\n\t\t\t}\n\n\t\t\tfullpath = path.resolve(this.directory, what);\n\t\t\treturn this.origin + fullpath;\n\t\t}\n\n\t\t/**\n\t\t * Resolve a path relative to the url\n\t\t * @returns {string} path\n\t\t */\n\t\trelative (what) {\n\t\t\treturn path.relative(what, this.directory);\n\t\t}\n\n\t\t/**\n\t\t * @returns {string}\n\t\t */\n\t\ttoString () {\n\t\t\treturn this.href;\n\t\t}\n\t}\n\n\tconst ELEMENT_NODE$1 = 1;\n\tconst TEXT_NODE$1 = 3;\n\t// const COMMENT_NODE = 8;\n\tconst DOCUMENT_NODE$1 = 9;\n\n\t/**\n\t\t* Parsing and creation of EpubCFIs: http://www.idpf.org/epub/linking/cfi/epub-cfi.html\n\n\t\t* Implements:\n\t\t* - Character Offset: epubcfi(/6/4[chap01ref]!/4[body01]/10[para05]/2/1:3)\n\t\t* - Simple Ranges : epubcfi(/6/4[chap01ref]!/4[body01]/10[para05],/2/1:1,/3:4)\n\n\t\t* Does Not Implement:\n\t\t* - Temporal Offset (~)\n\t\t* - Spatial Offset (@)\n\t\t* - Temporal-Spatial Offset (~ + @)\n\t\t* - Text Location Assertion ([)\n\t\t* @class\n\t\t@param {string | Range | Node } [cfiFrom]\n\t\t@param {string | object} [base]\n\t\t@param {string} [ignoreClass] class to ignore when parsing DOM\n\t*/\n\tclass EpubCFI {\n\t\tconstructor(cfiFrom, base, ignoreClass){\n\t\t\tvar type$$1;\n\n\t\t\tthis.str = \"\";\n\n\t\t\tthis.base = {};\n\t\t\tthis.spinePos = 0; // For compatibility\n\n\t\t\tthis.range = false; // true || false;\n\n\t\t\tthis.path = {};\n\t\t\tthis.start = null;\n\t\t\tthis.end = null;\n\n\t\t\t// Allow instantiation without the \"new\" keyword\n\t\t\tif (!(this instanceof EpubCFI)) {\n\t\t\t\treturn new EpubCFI(cfiFrom, base, ignoreClass);\n\t\t\t}\n\n\t\t\tif(typeof base === \"string\") {\n\t\t\t\tthis.base = this.parseComponent(base);\n\t\t\t} else if(typeof base === \"object\" && base.steps) {\n\t\t\t\tthis.base = base;\n\t\t\t}\n\n\t\t\ttype$$1 = this.checkType(cfiFrom);\n\n\n\t\t\tif(type$$1 === \"string\") {\n\t\t\t\tthis.str = cfiFrom;\n\t\t\t\treturn extend(this, this.parse(cfiFrom));\n\t\t\t} else if (type$$1 === \"range\") {\n\t\t\t\treturn extend(this, this.fromRange(cfiFrom, this.base, ignoreClass));\n\t\t\t} else if (type$$1 === \"node\") {\n\t\t\t\treturn extend(this, this.fromNode(cfiFrom, this.base, ignoreClass));\n\t\t\t} else if (type$$1 === \"EpubCFI\" && cfiFrom.path) {\n\t\t\t\treturn cfiFrom;\n\t\t\t} else if (!cfiFrom) {\n\t\t\t\treturn this;\n\t\t\t} else {\n\t\t\t\tthrow new TypeError(\"not a valid argument for EpubCFI\");\n\t\t\t}\n\n\t\t}\n\n\t\t/**\n\t\t * Check the type of constructor input\n\t\t * @private\n\t\t */\n\t\tcheckType(cfi) {\n\n\t\t\tif (this.isCfiString(cfi)) {\n\t\t\t\treturn \"string\";\n\t\t\t// Is a range object\n\t\t\t} else if (typeof cfi === \"object\" && (type(cfi) === \"Range\" || typeof(cfi.startContainer) != \"undefined\")){\n\t\t\t\treturn \"range\";\n\t\t\t} else if (typeof cfi === \"object\" && typeof(cfi.nodeType) != \"undefined\" ){ // || typeof cfi === \"function\"\n\t\t\t\treturn \"node\";\n\t\t\t} else if (typeof cfi === \"object\" && cfi instanceof EpubCFI){\n\t\t\t\treturn \"EpubCFI\";\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Parse a cfi string to a CFI object representation\n\t\t * @param {string} cfiStr\n\t\t * @returns {object} cfi\n\t\t */\n\t\tparse(cfiStr) {\n\t\t\tvar cfi = {\n\t\t\t\tspinePos: -1,\n\t\t\t\trange: false,\n\t\t\t\tbase: {},\n\t\t\t\tpath: {},\n\t\t\t\tstart: null,\n\t\t\t\tend: null\n\t\t\t};\n\t\t\tvar baseComponent, pathComponent, range;\n\n\t\t\tif(typeof cfiStr !== \"string\") {\n\t\t\t\treturn {spinePos: -1};\n\t\t\t}\n\n\t\t\tif(cfiStr.indexOf(\"epubcfi(\") === 0 && cfiStr[cfiStr.length-1] === \")\") {\n\t\t\t\t// Remove intial epubcfi( and ending )\n\t\t\t\tcfiStr = cfiStr.slice(8, cfiStr.length-1);\n\t\t\t}\n\n\t\t\tbaseComponent = this.getChapterComponent(cfiStr);\n\n\t\t\t// Make sure this is a valid cfi or return\n\t\t\tif(!baseComponent) {\n\t\t\t\treturn {spinePos: -1};\n\t\t\t}\n\n\t\t\tcfi.base = this.parseComponent(baseComponent);\n\n\t\t\tpathComponent = this.getPathComponent(cfiStr);\n\t\t\tcfi.path = this.parseComponent(pathComponent);\n\n\t\t\trange = this.getRange(cfiStr);\n\n\t\t\tif(range) {\n\t\t\t\tcfi.range = true;\n\t\t\t\tcfi.start = this.parseComponent(range[0]);\n\t\t\t\tcfi.end = this.parseComponent(range[1]);\n\t\t\t}\n\n\t\t\t// Get spine node position\n\t\t\t// cfi.spineSegment = cfi.base.steps[1];\n\n\t\t\t// Chapter segment is always the second step\n\t\t\tif(!cfi.base.steps || cfi.base.steps.length < 2) {\n\t\t\t\treturn {spinePos: -1};\n\t\t\t} else {\n\t\t\t\tcfi.spinePos = cfi.base.steps[1].index;\n\t\t\t}\n\n\t\t\treturn cfi;\n\t\t}\n\n\t\tparseComponent(componentStr){\n\t\t\tvar component = {\n\t\t\t\tsteps: [],\n\t\t\t\tterminal: {\n\t\t\t\t\toffset: null,\n\t\t\t\t\tassertion: null\n\t\t\t\t}\n\t\t\t};\n\t\t\tvar parts = componentStr.split(\":\");\n\t\t\tvar steps = parts[0].split(\"/\");\n\t\t\tvar terminal;\n\n\t\t\tif(parts.length > 1) {\n\t\t\t\tterminal = parts[1];\n\t\t\t\tcomponent.terminal = this.parseTerminal(terminal);\n\t\t\t}\n\n\t\t\tif (steps[0] === \"\") {\n\t\t\t\tsteps.shift(); // Ignore the first slash\n\t\t\t}\n\n\t\t\tcomponent.steps = steps.map(function(step){\n\t\t\t\treturn this.parseStep(step);\n\t\t\t}.bind(this));\n\n\t\t\treturn component;\n\t\t}\n\n\t\tparseStep(stepStr){\n\t\t\tvar type$$1, num, index, has_brackets, id;\n\n\t\t\thas_brackets = stepStr.match(/\\[(.*)\\]/);\n\t\t\tif(has_brackets && has_brackets[1]){\n\t\t\t\tid = has_brackets[1];\n\t\t\t}\n\n\t\t\t//-- Check if step is a text node or element\n\t\t\tnum = parseInt(stepStr);\n\n\t\t\tif(isNaN(num)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(num % 2 === 0) { // Even = is an element\n\t\t\t\ttype$$1 = \"element\";\n\t\t\t\tindex = num / 2 - 1;\n\t\t\t} else {\n\t\t\t\ttype$$1 = \"text\";\n\t\t\t\tindex = (num - 1 ) / 2;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t\"type\" : type$$1,\n\t\t\t\t\"index\" : index,\n\t\t\t\t\"id\" : id || null\n\t\t\t};\n\t\t}\n\n\t\tparseTerminal(termialStr){\n\t\t\tvar characterOffset, textLocationAssertion;\n\t\t\tvar assertion = termialStr.match(/\\[(.*)\\]/);\n\n\t\t\tif(assertion && assertion[1]){\n\t\t\t\tcharacterOffset = parseInt(termialStr.split(\"[\")[0]);\n\t\t\t\ttextLocationAssertion = assertion[1];\n\t\t\t} else {\n\t\t\t\tcharacterOffset = parseInt(termialStr);\n\t\t\t}\n\n\t\t\tif (!isNumber(characterOffset)) {\n\t\t\t\tcharacterOffset = null;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t\"offset\": characterOffset,\n\t\t\t\t\"assertion\": textLocationAssertion\n\t\t\t};\n\n\t\t}\n\n\t\tgetChapterComponent(cfiStr) {\n\n\t\t\tvar indirection = cfiStr.split(\"!\");\n\n\t\t\treturn indirection[0];\n\t\t}\n\n\t\tgetPathComponent(cfiStr) {\n\n\t\t\tvar indirection = cfiStr.split(\"!\");\n\n\t\t\tif(indirection[1]) {\n\t\t\t\tlet ranges = indirection[1].split(\",\");\n\t\t\t\treturn ranges[0];\n\t\t\t}\n\n\t\t}\n\n\t\tgetRange(cfiStr) {\n\n\t\t\tvar ranges = cfiStr.split(\",\");\n\n\t\t\tif(ranges.length === 3){\n\t\t\t\treturn [\n\t\t\t\t\tranges[1],\n\t\t\t\t\tranges[2]\n\t\t\t\t];\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tgetCharecterOffsetComponent(cfiStr) {\n\t\t\tvar splitStr = cfiStr.split(\":\");\n\t\t\treturn splitStr[1] || \"\";\n\t\t}\n\n\t\tjoinSteps(steps) {\n\t\t\tif(!steps) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\n\t\t\treturn steps.map(function(part){\n\t\t\t\tvar segment = \"\";\n\n\t\t\t\tif(part.type === \"element\") {\n\t\t\t\t\tsegment += (part.index + 1) * 2;\n\t\t\t\t}\n\n\t\t\t\tif(part.type === \"text\") {\n\t\t\t\t\tsegment += 1 + (2 * part.index); // TODO: double check that this is odd\n\t\t\t\t}\n\n\t\t\t\tif(part.id) {\n\t\t\t\t\tsegment += \"[\" + part.id + \"]\";\n\t\t\t\t}\n\n\t\t\t\treturn segment;\n\n\t\t\t}).join(\"/\");\n\n\t\t}\n\n\t\tsegmentString(segment) {\n\t\t\tvar segmentString = \"/\";\n\n\t\t\tsegmentString += this.joinSteps(segment.steps);\n\n\t\t\tif(segment.terminal && segment.terminal.offset != null){\n\t\t\t\tsegmentString += \":\" + segment.terminal.offset;\n\t\t\t}\n\n\t\t\tif(segment.terminal && segment.terminal.assertion != null){\n\t\t\t\tsegmentString += \"[\" + segment.terminal.assertion + \"]\";\n\t\t\t}\n\n\t\t\treturn segmentString;\n\t\t}\n\n\t\t/**\n\t\t * Convert CFI to a epubcfi(...) string\n\t\t * @returns {string} epubcfi\n\t\t */\n\t\ttoString() {\n\t\t\tvar cfiString = \"epubcfi(\";\n\n\t\t\tcfiString += this.segmentString(this.base);\n\n\t\t\tcfiString += \"!\";\n\t\t\tcfiString += this.segmentString(this.path);\n\n\t\t\t// Add Range, if present\n\t\t\tif(this.range && this.start) {\n\t\t\t\tcfiString += \",\";\n\t\t\t\tcfiString += this.segmentString(this.start);\n\t\t\t}\n\n\t\t\tif(this.range && this.end) {\n\t\t\t\tcfiString += \",\";\n\t\t\t\tcfiString += this.segmentString(this.end);\n\t\t\t}\n\n\t\t\tcfiString += \")\";\n\n\t\t\treturn cfiString;\n\t\t}\n\n\n\t\t/**\n\t\t * Compare which of two CFIs is earlier in the text\n\t\t * @returns {number} First is earlier = 1, Second is earlier = -1, They are equal = 0\n\t\t */\n\t\tcompare(cfiOne, cfiTwo) {\n\t\t\tvar stepsA, stepsB;\n\t\t\tvar terminalA, terminalB;\n\n\t\t\tif(typeof cfiOne === \"string\") {\n\t\t\t\tcfiOne = new EpubCFI(cfiOne);\n\t\t\t}\n\t\t\tif(typeof cfiTwo === \"string\") {\n\t\t\t\tcfiTwo = new EpubCFI(cfiTwo);\n\t\t\t}\n\t\t\t// Compare Spine Positions\n\t\t\tif(cfiOne.spinePos > cfiTwo.spinePos) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif(cfiOne.spinePos < cfiTwo.spinePos) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tif (cfiOne.range) {\n\t\t\t\tstepsA = cfiOne.path.steps.concat(cfiOne.start.steps);\n\t\t\t\tterminalA = cfiOne.start.terminal;\n\t\t\t} else {\n\t\t\t\tstepsA = cfiOne.path.steps;\n\t\t\t\tterminalA = cfiOne.path.terminal;\n\t\t\t}\n\n\t\t\tif (cfiTwo.range) {\n\t\t\t\tstepsB = cfiTwo.path.steps.concat(cfiTwo.start.steps);\n\t\t\t\tterminalB = cfiTwo.start.terminal;\n\t\t\t} else {\n\t\t\t\tstepsB = cfiTwo.path.steps;\n\t\t\t\tterminalB = cfiTwo.path.terminal;\n\t\t\t}\n\n\t\t\t// Compare Each Step in the First item\n\t\t\tfor (var i = 0; i < stepsA.length; i++) {\n\t\t\t\tif(!stepsA[i]) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif(!stepsB[i]) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif(stepsA[i].index > stepsB[i].index) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif(stepsA[i].index < stepsB[i].index) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\t// Otherwise continue checking\n\t\t\t}\n\n\t\t\t// All steps in First equal to Second and First is Less Specific\n\t\t\tif(stepsA.length < stepsB.length) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Compare the charecter offset of the text node\n\t\t\tif(terminalA.offset > terminalB.offset) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif(terminalA.offset < terminalB.offset) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// CFI's are equal\n\t\t\treturn 0;\n\t\t}\n\n\t\tstep(node) {\n\t\t\tvar nodeType = (node.nodeType === TEXT_NODE$1) ? \"text\" : \"element\";\n\n\t\t\treturn {\n\t\t\t\t\"id\" : node.id,\n\t\t\t\t\"tagName\" : node.tagName,\n\t\t\t\t\"type\" : nodeType,\n\t\t\t\t\"index\" : this.position(node)\n\t\t\t};\n\t\t}\n\n\t\tfilteredStep(node, ignoreClass) {\n\t\t\tvar filteredNode = this.filter(node, ignoreClass);\n\t\t\tvar nodeType;\n\n\t\t\t// Node filtered, so ignore\n\t\t\tif (!filteredNode) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise add the filter node in\n\t\t\tnodeType = (filteredNode.nodeType === TEXT_NODE$1) ? \"text\" : \"element\";\n\n\t\t\treturn {\n\t\t\t\t\"id\" : filteredNode.id,\n\t\t\t\t\"tagName\" : filteredNode.tagName,\n\t\t\t\t\"type\" : nodeType,\n\t\t\t\t\"index\" : this.filteredPosition(filteredNode, ignoreClass)\n\t\t\t};\n\t\t}\n\n\t\tpathTo(node, offset, ignoreClass) {\n\t\t\tvar segment = {\n\t\t\t\tsteps: [],\n\t\t\t\tterminal: {\n\t\t\t\t\toffset: null,\n\t\t\t\t\tassertion: null\n\t\t\t\t}\n\t\t\t};\n\t\t\tvar currentNode = node;\n\t\t\tvar step;\n\n\t\t\twhile(currentNode && currentNode.parentNode &&\n\t\t\t\t\t\tcurrentNode.parentNode.nodeType != DOCUMENT_NODE$1) {\n\n\t\t\t\tif (ignoreClass) {\n\t\t\t\t\tstep = this.filteredStep(currentNode, ignoreClass);\n\t\t\t\t} else {\n\t\t\t\t\tstep = this.step(currentNode);\n\t\t\t\t}\n\n\t\t\t\tif (step) {\n\t\t\t\t\tsegment.steps.unshift(step);\n\t\t\t\t}\n\n\t\t\t\tcurrentNode = currentNode.parentNode;\n\n\t\t\t}\n\n\t\t\tif (offset != null && offset >= 0) {\n\n\t\t\t\tsegment.terminal.offset = offset;\n\n\t\t\t\t// Make sure we are getting to a textNode if there is an offset\n\t\t\t\tif(segment.steps[segment.steps.length-1].type != \"text\") {\n\t\t\t\t\tsegment.steps.push({\n\t\t\t\t\t\t\"type\" : \"text\",\n\t\t\t\t\t\t\"index\" : 0\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\treturn segment;\n\t\t}\n\n\t\tequalStep(stepA, stepB) {\n\t\t\tif (!stepA || !stepB) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif(stepA.index === stepB.index &&\n\t\t\t\t stepA.id === stepB.id &&\n\t\t\t\t stepA.type === stepB.type) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t * Create a CFI object from a Range\n\t\t * @param {Range} range\n\t\t * @param {string | object} base\n\t\t * @param {string} [ignoreClass]\n\t\t * @returns {object} cfi\n\t\t */\n\t\tfromRange(range, base, ignoreClass) {\n\t\t\tvar cfi = {\n\t\t\t\trange: false,\n\t\t\t\tbase: {},\n\t\t\t\tpath: {},\n\t\t\t\tstart: null,\n\t\t\t\tend: null\n\t\t\t};\n\n\t\t\tvar start = range.startContainer;\n\t\t\tvar end = range.endContainer;\n\n\t\t\tvar startOffset = range.startOffset;\n\t\t\tvar endOffset = range.endOffset;\n\n\t\t\tvar needsIgnoring = false;\n\n\t\t\tif (ignoreClass) {\n\t\t\t\t// Tell pathTo if / what to ignore\n\t\t\t\tneedsIgnoring = (start.ownerDocument.querySelector(\".\" + ignoreClass) != null);\n\t\t\t}\n\n\n\t\t\tif (typeof base === \"string\") {\n\t\t\t\tcfi.base = this.parseComponent(base);\n\t\t\t\tcfi.spinePos = cfi.base.steps[1].index;\n\t\t\t} else if (typeof base === \"object\") {\n\t\t\t\tcfi.base = base;\n\t\t\t}\n\n\t\t\tif (range.collapsed) {\n\t\t\t\tif (needsIgnoring) {\n\t\t\t\t\tstartOffset = this.patchOffset(start, startOffset, ignoreClass);\n\t\t\t\t}\n\t\t\t\tcfi.path = this.pathTo(start, startOffset, ignoreClass);\n\t\t\t} else {\n\t\t\t\tcfi.range = true;\n\n\t\t\t\tif (needsIgnoring) {\n\t\t\t\t\tstartOffset = this.patchOffset(start, startOffset, ignoreClass);\n\t\t\t\t}\n\n\t\t\t\tcfi.start = this.pathTo(start, startOffset, ignoreClass);\n\t\t\t\tif (needsIgnoring) {\n\t\t\t\t\tendOffset = this.patchOffset(end, endOffset, ignoreClass);\n\t\t\t\t}\n\n\t\t\t\tcfi.end = this.pathTo(end, endOffset, ignoreClass);\n\n\t\t\t\t// Create a new empty path\n\t\t\t\tcfi.path = {\n\t\t\t\t\tsteps: [],\n\t\t\t\t\tterminal: null\n\t\t\t\t};\n\n\t\t\t\t// Push steps that are shared between start and end to the common path\n\t\t\t\tvar len = cfi.start.steps.length;\n\t\t\t\tvar i;\n\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tif (this.equalStep(cfi.start.steps[i], cfi.end.steps[i])) {\n\t\t\t\t\t\tif(i === len-1) {\n\t\t\t\t\t\t\t// Last step is equal, check terminals\n\t\t\t\t\t\t\tif(cfi.start.terminal === cfi.end.terminal) {\n\t\t\t\t\t\t\t\t// CFI's are equal\n\t\t\t\t\t\t\t\tcfi.path.steps.push(cfi.start.steps[i]);\n\t\t\t\t\t\t\t\t// Not a range\n\t\t\t\t\t\t\t\tcfi.range = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcfi.path.steps.push(cfi.start.steps[i]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcfi.start.steps = cfi.start.steps.slice(cfi.path.steps.length);\n\t\t\t\tcfi.end.steps = cfi.end.steps.slice(cfi.path.steps.length);\n\n\t\t\t\t// TODO: Add Sanity check to make sure that the end if greater than the start\n\t\t\t}\n\n\t\t\treturn cfi;\n\t\t}\n\n\t\t/**\n\t\t * Create a CFI object from a Node\n\t\t * @param {Node} anchor\n\t\t * @param {string | object} base\n\t\t * @param {string} [ignoreClass]\n\t\t * @returns {object} cfi\n\t\t */\n\t\tfromNode(anchor, base, ignoreClass) {\n\t\t\tvar cfi = {\n\t\t\t\trange: false,\n\t\t\t\tbase: {},\n\t\t\t\tpath: {},\n\t\t\t\tstart: null,\n\t\t\t\tend: null\n\t\t\t};\n\n\t\t\tif (typeof base === \"string\") {\n\t\t\t\tcfi.base = this.parseComponent(base);\n\t\t\t\tcfi.spinePos = cfi.base.steps[1].index;\n\t\t\t} else if (typeof base === \"object\") {\n\t\t\t\tcfi.base = base;\n\t\t\t}\n\n\t\t\tcfi.path = this.pathTo(anchor, null, ignoreClass);\n\n\t\t\treturn cfi;\n\t\t}\n\n\t\tfilter(anchor, ignoreClass) {\n\t\t\tvar needsIgnoring;\n\t\t\tvar sibling; // to join with\n\t\t\tvar parent, previousSibling, nextSibling;\n\t\t\tvar isText = false;\n\n\t\t\tif (anchor.nodeType === TEXT_NODE$1) {\n\t\t\t\tisText = true;\n\t\t\t\tparent = anchor.parentNode;\n\t\t\t\tneedsIgnoring = anchor.parentNode.classList.contains(ignoreClass);\n\t\t\t} else {\n\t\t\t\tisText = false;\n\t\t\t\tneedsIgnoring = anchor.classList.contains(ignoreClass);\n\t\t\t}\n\n\t\t\tif (needsIgnoring && isText) {\n\t\t\t\tpreviousSibling = parent.previousSibling;\n\t\t\t\tnextSibling = parent.nextSibling;\n\n\t\t\t\t// If the sibling is a text node, join the nodes\n\t\t\t\tif (previousSibling && previousSibling.nodeType === TEXT_NODE$1) {\n\t\t\t\t\tsibling = previousSibling;\n\t\t\t\t} else if (nextSibling && nextSibling.nodeType === TEXT_NODE$1) {\n\t\t\t\t\tsibling = nextSibling;\n\t\t\t\t}\n\n\t\t\t\tif (sibling) {\n\t\t\t\t\treturn sibling;\n\t\t\t\t} else {\n\t\t\t\t\t// Parent will be ignored on next step\n\t\t\t\t\treturn anchor;\n\t\t\t\t}\n\n\t\t\t} else if (needsIgnoring && !isText) {\n\t\t\t\t// Otherwise just skip the element node\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\t// No need to filter\n\t\t\t\treturn anchor;\n\t\t\t}\n\n\t\t}\n\n\t\tpatchOffset(anchor, offset, ignoreClass) {\n\t\t\tif (anchor.nodeType != TEXT_NODE$1) {\n\t\t\t\tthrow new Error(\"Anchor must be a text node\");\n\t\t\t}\n\n\t\t\tvar curr = anchor;\n\t\t\tvar totalOffset = offset;\n\n\t\t\t// If the parent is a ignored node, get offset from it's start\n\t\t\tif (anchor.parentNode.classList.contains(ignoreClass)) {\n\t\t\t\tcurr = anchor.parentNode;\n\t\t\t}\n\n\t\t\twhile (curr.previousSibling) {\n\t\t\t\tif(curr.previousSibling.nodeType === ELEMENT_NODE$1) {\n\t\t\t\t\t// Originally a text node, so join\n\t\t\t\t\tif(curr.previousSibling.classList.contains(ignoreClass)){\n\t\t\t\t\t\ttotalOffset += curr.previousSibling.textContent.length;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak; // Normal node, dont join\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// If the previous sibling is a text node, join the nodes\n\t\t\t\t\ttotalOffset += curr.previousSibling.textContent.length;\n\t\t\t\t}\n\n\t\t\t\tcurr = curr.previousSibling;\n\t\t\t}\n\n\t\t\treturn totalOffset;\n\n\t\t}\n\n\t\tnormalizedMap(children, nodeType, ignoreClass) {\n\t\t\tvar output = {};\n\t\t\tvar prevIndex = -1;\n\t\t\tvar i, len = children.length;\n\t\t\tvar currNodeType;\n\t\t\tvar prevNodeType;\n\n\t\t\tfor (i = 0; i < len; i++) {\n\n\t\t\t\tcurrNodeType = children[i].nodeType;\n\n\t\t\t\t// Check if needs ignoring\n\t\t\t\tif (currNodeType === ELEMENT_NODE$1 &&\n\t\t\t\t\t\tchildren[i].classList.contains(ignoreClass)) {\n\t\t\t\t\tcurrNodeType = TEXT_NODE$1;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0 &&\n\t\t\t\t\t\tcurrNodeType === TEXT_NODE$1 &&\n\t\t\t\t\t\tprevNodeType === TEXT_NODE$1) {\n\t\t\t\t\t// join text nodes\n\t\t\t\t\toutput[i] = prevIndex;\n\t\t\t\t} else if (nodeType === currNodeType){\n\t\t\t\t\tprevIndex = prevIndex + 1;\n\t\t\t\t\toutput[i] = prevIndex;\n\t\t\t\t}\n\n\t\t\t\tprevNodeType = currNodeType;\n\n\t\t\t}\n\n\t\t\treturn output;\n\t\t}\n\n\t\tposition(anchor) {\n\t\t\tvar children, index;\n\t\t\tif (anchor.nodeType === ELEMENT_NODE$1) {\n\t\t\t\tchildren = anchor.parentNode.children;\n\t\t\t\tif (!children) {\n\t\t\t\t\tchildren = findChildren(anchor.parentNode);\n\t\t\t\t}\n\t\t\t\tindex = Array.prototype.indexOf.call(children, anchor);\n\t\t\t} else {\n\t\t\t\tchildren = this.textNodes(anchor.parentNode);\n\t\t\t\tindex = children.indexOf(anchor);\n\t\t\t}\n\n\t\t\treturn index;\n\t\t}\n\n\t\tfilteredPosition(anchor, ignoreClass) {\n\t\t\tvar children, index, map;\n\n\t\t\tif (anchor.nodeType === ELEMENT_NODE$1) {\n\t\t\t\tchildren = anchor.parentNode.children;\n\t\t\t\tmap = this.normalizedMap(children, ELEMENT_NODE$1, ignoreClass);\n\t\t\t} else {\n\t\t\t\tchildren = anchor.parentNode.childNodes;\n\t\t\t\t// Inside an ignored node\n\t\t\t\tif(anchor.parentNode.classList.contains(ignoreClass)) {\n\t\t\t\t\tanchor = anchor.parentNode;\n\t\t\t\t\tchildren = anchor.parentNode.childNodes;\n\t\t\t\t}\n\t\t\t\tmap = this.normalizedMap(children, TEXT_NODE$1, ignoreClass);\n\t\t\t}\n\n\n\t\t\tindex = Array.prototype.indexOf.call(children, anchor);\n\n\t\t\treturn map[index];\n\t\t}\n\n\t\tstepsToXpath(steps) {\n\t\t\tvar xpath = [\".\", \"*\"];\n\n\t\t\tsteps.forEach(function(step){\n\t\t\t\tvar position = step.index + 1;\n\n\t\t\t\tif(step.id){\n\t\t\t\t\txpath.push(\"*[position()=\" + position + \" and @id='\" + step.id + \"']\");\n\t\t\t\t} else if(step.type === \"text\") {\n\t\t\t\t\txpath.push(\"text()[\" + position + \"]\");\n\t\t\t\t} else {\n\t\t\t\t\txpath.push(\"*[\" + position + \"]\");\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn xpath.join(\"/\");\n\t\t}\n\n\n\t\t/*\n\n\t\tTo get the last step if needed:\n\n\t\t// Get the terminal step\n\t\tlastStep = steps[steps.length-1];\n\t\t// Get the query string\n\t\tquery = this.stepsToQuery(steps);\n\t\t// Find the containing element\n\t\tstartContainerParent = doc.querySelector(query);\n\t\t// Find the text node within that element\n\t\tif(startContainerParent && lastStep.type == \"text\") {\n\t\t\tcontainer = startContainerParent.childNodes[lastStep.index];\n\t\t}\n\t\t*/\n\t\tstepsToQuerySelector(steps) {\n\t\t\tvar query = [\"html\"];\n\n\t\t\tsteps.forEach(function(step){\n\t\t\t\tvar position = step.index + 1;\n\n\t\t\t\tif(step.id){\n\t\t\t\t\tquery.push(\"#\" + step.id);\n\t\t\t\t} else if(step.type === \"text\") {\n\t\t\t\t\t// unsupported in querySelector\n\t\t\t\t\t// query.push(\"text()[\" + position + \"]\");\n\t\t\t\t} else {\n\t\t\t\t\tquery.push(\"*:nth-child(\" + position + \")\");\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn query.join(\">\");\n\n\t\t}\n\n\t\ttextNodes(container, ignoreClass) {\n\t\t\treturn Array.prototype.slice.call(container.childNodes).\n\t\t\t\tfilter(function (node) {\n\t\t\t\t\tif (node.nodeType === TEXT_NODE$1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if (ignoreClass && node.classList.contains(ignoreClass)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t}\n\n\t\twalkToNode(steps, _doc, ignoreClass) {\n\t\t\tvar doc = _doc || document;\n\t\t\tvar container = doc.documentElement;\n\t\t\tvar children;\n\t\t\tvar step;\n\t\t\tvar len = steps.length;\n\t\t\tvar i;\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tstep = steps[i];\n\n\t\t\t\tif(step.type === \"element\") {\n\t\t\t\t\t//better to get a container using id as some times step.index may not be correct\n\t\t\t\t\t//For ex.https://github.com/futurepress/epub.js/issues/561\n\t\t\t\t\tif(step.id) {\n\t\t\t\t\t\tcontainer = doc.getElementById(step.id);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tchildren = container.children || findChildren(container);\n\t\t\t\t\t\tcontainer = children[step.index];\n\t\t\t\t\t}\n\t\t\t\t} else if(step.type === \"text\") {\n\t\t\t\t\tcontainer = this.textNodes(container, ignoreClass)[step.index];\n\t\t\t\t}\n\t\t\t\tif(!container) {\n\t\t\t\t\t//Break the for loop as due to incorrect index we can get error if\n\t\t\t\t\t//container is undefined so that other functionailties works fine\n\t\t\t\t\t//like navigation\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn container;\n\t\t}\n\n\t\tfindNode(steps, _doc, ignoreClass) {\n\t\t\tvar doc = _doc || document;\n\t\t\tvar container;\n\t\t\tvar xpath;\n\n\t\t\tif(!ignoreClass && typeof doc.evaluate != \"undefined\") {\n\t\t\t\txpath = this.stepsToXpath(steps);\n\t\t\t\tcontainer = doc.evaluate(xpath, doc, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n\t\t\t} else if(ignoreClass) {\n\t\t\t\tcontainer = this.walkToNode(steps, doc, ignoreClass);\n\t\t\t} else {\n\t\t\t\tcontainer = this.walkToNode(steps, doc);\n\t\t\t}\n\n\t\t\treturn container;\n\t\t}\n\n\t\tfixMiss(steps, offset, _doc, ignoreClass) {\n\t\t\tvar container = this.findNode(steps.slice(0,-1), _doc, ignoreClass);\n\t\t\tvar children = container.childNodes;\n\t\t\tvar map = this.normalizedMap(children, TEXT_NODE$1, ignoreClass);\n\t\t\tvar child;\n\t\t\tvar len;\n\t\t\tvar lastStepIndex = steps[steps.length-1].index;\n\n\t\t\tfor (let childIndex in map) {\n\t\t\t\tif (!map.hasOwnProperty(childIndex)) return;\n\n\t\t\t\tif(map[childIndex] === lastStepIndex) {\n\t\t\t\t\tchild = children[childIndex];\n\t\t\t\t\tlen = child.textContent.length;\n\t\t\t\t\tif(offset > len) {\n\t\t\t\t\t\toffset = offset - len;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (child.nodeType === ELEMENT_NODE$1) {\n\t\t\t\t\t\t\tcontainer = child.childNodes[0];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontainer = child;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tcontainer: container,\n\t\t\t\toffset: offset\n\t\t\t};\n\n\t\t}\n\n\t\t/**\n\t\t * Creates a DOM range representing a CFI\n\t\t * @param {document} _doc document referenced in the base\n\t\t * @param {string} [ignoreClass]\n\t\t * @return {Range}\n\t\t */\n\t\ttoRange(_doc, ignoreClass) {\n\t\t\tvar doc = _doc || document;\n\t\t\tvar range;\n\t\t\tvar start, end, startContainer, endContainer;\n\t\t\tvar cfi = this;\n\t\t\tvar startSteps, endSteps;\n\t\t\tvar needsIgnoring = ignoreClass ? (doc.querySelector(\".\" + ignoreClass) != null) : false;\n\t\t\tvar missed;\n\n\t\t\tif (typeof(doc.createRange) !== \"undefined\") {\n\t\t\t\trange = doc.createRange();\n\t\t\t} else {\n\t\t\t\trange = new RangeObject();\n\t\t\t}\n\n\t\t\tif (cfi.range) {\n\t\t\t\tstart = cfi.start;\n\t\t\t\tstartSteps = cfi.path.steps.concat(start.steps);\n\t\t\t\tstartContainer = this.findNode(startSteps, doc, needsIgnoring ? ignoreClass : null);\n\t\t\t\tend = cfi.end;\n\t\t\t\tendSteps = cfi.path.steps.concat(end.steps);\n\t\t\t\tendContainer = this.findNode(endSteps, doc, needsIgnoring ? ignoreClass : null);\n\t\t\t} else {\n\t\t\t\tstart = cfi.path;\n\t\t\t\tstartSteps = cfi.path.steps;\n\t\t\t\tstartContainer = this.findNode(cfi.path.steps, doc, needsIgnoring ? ignoreClass : null);\n\t\t\t}\n\n\t\t\tif(startContainer) {\n\t\t\t\ttry {\n\n\t\t\t\t\tif(start.terminal.offset != null) {\n\t\t\t\t\t\trange.setStart(startContainer, start.terminal.offset);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trange.setStart(startContainer, 0);\n\t\t\t\t\t}\n\n\t\t\t\t} catch (e) {\n\t\t\t\t\tmissed = this.fixMiss(startSteps, start.terminal.offset, doc, needsIgnoring ? ignoreClass : null);\n\t\t\t\t\trange.setStart(missed.container, missed.offset);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.log(\"No startContainer found for\", this.toString());\n\t\t\t\t// No start found\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (endContainer) {\n\t\t\t\ttry {\n\n\t\t\t\t\tif(end.terminal.offset != null) {\n\t\t\t\t\t\trange.setEnd(endContainer, end.terminal.offset);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trange.setEnd(endContainer, 0);\n\t\t\t\t\t}\n\n\t\t\t\t} catch (e) {\n\t\t\t\t\tmissed = this.fixMiss(endSteps, cfi.end.terminal.offset, doc, needsIgnoring ? ignoreClass : null);\n\t\t\t\t\trange.setEnd(missed.container, missed.offset);\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t// doc.defaultView.getSelection().addRange(range);\n\t\t\treturn range;\n\t\t}\n\n\t\t/**\n\t\t * Check if a string is wrapped with \"epubcfi()\"\n\t\t * @param {string} str\n\t\t * @returns {boolean}\n\t\t */\n\t\tisCfiString(str) {\n\t\t\tif(typeof str === \"string\" &&\n\t\t\t\tstr.indexOf(\"epubcfi(\") === 0 &&\n\t\t\t\tstr[str.length-1] === \")\") {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tgenerateChapterComponent(_spineNodeIndex, _pos, id) {\n\t\t\tvar pos = parseInt(_pos),\n\t\t\t\t\tspineNodeIndex = (_spineNodeIndex + 1) * 2,\n\t\t\t\t\tcfi = \"/\"+spineNodeIndex+\"/\";\n\n\t\t\tcfi += (pos + 1) * 2;\n\n\t\t\tif(id) {\n\t\t\t\tcfi += \"[\" + id + \"]\";\n\t\t\t}\n\n\t\t\treturn cfi;\n\t\t}\n\n\t\t/**\n\t\t * Collapse a CFI Range to a single CFI Position\n\t\t * @param {boolean} [toStart=false]\n\t\t */\n\t\tcollapse(toStart) {\n\t\t\tif (!this.range) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.range = false;\n\n\t\t\tif (toStart) {\n\t\t\t\tthis.path.steps = this.path.steps.concat(this.start.steps);\n\t\t\t\tthis.path.terminal = this.start.terminal;\n\t\t\t} else {\n\t\t\t\tthis.path.steps = this.path.steps.concat(this.end.steps);\n\t\t\t\tthis.path.terminal = this.end.terminal;\n\t\t\t}\n\n\t\t}\n\t}\n\n\t/**\n\t * Hooks allow for injecting functions that must all complete in order before finishing\n\t * They will execute in parallel but all must finish before continuing\n\t * Functions may return a promise if they are asycn.\n\t * @param {any} context scope of this\n\t * @example this.content = new EPUBJS.Hook(this);\n\t */\n\tclass Hook {\n\t\tconstructor(context){\n\t\t\tthis.context = context || this;\n\t\t\tthis.hooks = [];\n\t\t}\n\n\t\t/**\n\t\t * Adds a function to be run before a hook completes\n\t\t * @example this.content.register(function(){...});\n\t\t */\n\t\tregister(){\n\t\t\tfor(var i = 0; i < arguments.length; ++i) {\n\t\t\t\tif (typeof arguments[i]  === \"function\") {\n\t\t\t\t\tthis.hooks.push(arguments[i]);\n\t\t\t\t} else {\n\t\t\t\t\t// unpack array\n\t\t\t\t\tfor(var j = 0; j < arguments[i].length; ++j) {\n\t\t\t\t\t\tthis.hooks.push(arguments[i][j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Triggers a hook to run all functions\n\t\t * @example this.content.trigger(args).then(function(){...});\n\t\t */\n\t\ttrigger(){\n\t\t\tvar args = arguments;\n\t\t\tvar context = this.context;\n\t\t\tvar promises = [];\n\n\t\t\tthis.hooks.forEach(function(task) {\n\t\t\t\tvar executing = task.apply(context, args);\n\n\t\t\t\tif(executing && typeof executing[\"then\"] === \"function\") {\n\t\t\t\t\t// Task is a function that returns a promise\n\t\t\t\t\tpromises.push(executing);\n\t\t\t\t}\n\t\t\t\t// Otherwise Task resolves immediately, continue\n\t\t\t});\n\n\n\t\t\treturn Promise.all(promises);\n\t\t}\n\n\t\t// Adds a function to be run before a hook completes\n\t\tlist(){\n\t\t\treturn this.hooks;\n\t\t}\n\n\t\tclear(){\n\t\t\treturn this.hooks = [];\n\t\t}\n\t}\n\n\tfunction replaceBase(doc, section){\n\t\tvar base;\n\t\tvar head;\n\t\tvar url = section.href;\n\t\tvar absolute = (url.indexOf(\"://\") > -1);\n\n\t\tif(!doc){\n\t\t\treturn;\n\t\t}\n\n\t\thead = qs(doc, \"head\");\n\t\tbase = qs(head, \"base\");\n\n\t\tif(!base) {\n\t\t\tbase = doc.createElement(\"base\");\n\t\t\thead.insertBefore(base, head.firstChild);\n\t\t}\n\n\t\t// Fix for Safari crashing if the url doesn't have an origin\n\t\tif (!absolute && (typeof(window) !== \"undefined\" && window.location)) {\n\t\t\tlet parts = window.location.href.split(\"/\");\n\t\t\tlet directory = \"\";\n\n\t\t\tparts.pop();\n\t\t\tdirectory = parts.join(\"/\");\n\n\t\t\turl = directory + url;\n\t\t}\n\n\t\tbase.setAttribute(\"href\", url);\n\t}\n\n\tfunction replaceCanonical(doc, section){\n\t\tvar head;\n\t\tvar link;\n\t\tvar url = section.canonical || section.href;\n\n\t\tif(!doc){\n\t\t\treturn;\n\t\t}\n\n\t\thead = qs(doc, \"head\");\n\t\tlink = qs(head, \"link[rel='canonical']\");\n\n\t\tif (link) {\n\t\t\tlink.setAttribute(\"href\", url);\n\t\t} else {\n\t\t\tlink = doc.createElement(\"link\");\n\t\t\tlink.setAttribute(\"rel\", \"canonical\");\n\t\t\tlink.setAttribute(\"href\", url);\n\t\t\thead.appendChild(link);\n\t\t}\n\t}\n\n\tfunction replaceMeta(doc, section){\n\t\tvar head;\n\t\tvar meta;\n\t\tvar id = section.idref || section.href;\n\t\tif(!doc){\n\t\t\treturn;\n\t\t}\n\n\t\thead = qs(doc, \"head\");\n\t\tmeta = qs(head, \"link[property='dc.identifier']\");\n\n\t\tif (meta) {\n\t\t\tmeta.setAttribute(\"content\", id);\n\t\t} else {\n\t\t\tmeta = doc.createElement(\"meta\");\n\t\t\tmeta.setAttribute(\"name\", \"dc.identifier\");\n\t\t\tmeta.setAttribute(\"content\", id);\n\t\t\thead.appendChild(meta);\n\t\t}\n\t}\n\n\t// TODO: move me to Contents\n\tfunction replaceLinks(contents, fn) {\n\n\t\tvar links = contents.querySelectorAll(\"a[href]\");\n\n\t\tif (!links.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar base = qs(contents.ownerDocument, \"base\");\n\t\tvar location = base ? base.getAttribute(\"href\") : contents.ownerDocument.defaultView.location.href;\n\t\tvar replaceLink = function(link){\n\t\t\tvar href = link.getAttribute(\"href\");\n\n\t\t\tif(href.indexOf(\"mailto:\") === 0){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar absolute = (href.indexOf(\"://\") > -1);\n\t\t\tvar linkUrl = new Url(href, location);\n\n\t\t\tif(absolute){\n\n\t\t\t\tlink.setAttribute(\"target\", \"_blank\");\n\n\t\t\t}else{\n\t\t\t\tlink.onclick = function(){\n\n\t\t\t\t\tif(linkUrl && linkUrl.hash) {\n\t\t\t\t\t\tfn(linkUrl.Path.path + linkUrl.hash);\n\t\t\t\t\t} else if(linkUrl){\n\t\t\t\t\t\tfn(linkUrl.Path.path);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfn(href);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\t\t\t}\n\t\t}.bind(this);\n\n\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\treplaceLink(links[i]);\n\t\t}\n\n\n\t}\n\n\tfunction request(url, type$$1, withCredentials, headers) {\n\t\tvar supportsURL = (typeof window != \"undefined\") ? window.URL : false; // TODO: fallback for url if window isn't defined\n\t\tvar BLOB_RESPONSE = supportsURL ? \"blob\" : \"arraybuffer\";\n\n\t\tvar deferred = new defer();\n\n\t\tvar xhr = new XMLHttpRequest();\n\n\t\t//-- Check from PDF.js:\n\t\t//   https://github.com/mozilla/pdf.js/blob/master/web/compatibility.js\n\t\tvar xhrPrototype = XMLHttpRequest.prototype;\n\n\t\tvar header;\n\n\t\tif (!(\"overrideMimeType\" in xhrPrototype)) {\n\t\t\t// IE10 might have response, but not overrideMimeType\n\t\t\tObject.defineProperty(xhrPrototype, \"overrideMimeType\", {\n\t\t\t\tvalue: function xmlHttpRequestOverrideMimeType() {}\n\t\t\t});\n\t\t}\n\n\t\tif(withCredentials) {\n\t\t\txhr.withCredentials = true;\n\t\t}\n\n\t\txhr.onreadystatechange = handler;\n\t\txhr.onerror = err;\n\n\t\txhr.open(\"GET\", url, true);\n\n\t\tfor(header in headers) {\n\t\t\txhr.setRequestHeader(header, headers[header]);\n\t\t}\n\n\t\tif(type$$1 == \"json\") {\n\t\t\txhr.setRequestHeader(\"Accept\", \"application/json\");\n\t\t}\n\n\t\t// If type isn\"t set, determine it from the file extension\n\t\tif(!type$$1) {\n\t\t\ttype$$1 = new Path(url).extension;\n\t\t}\n\n\t\tif(type$$1 == \"blob\"){\n\t\t\txhr.responseType = BLOB_RESPONSE;\n\t\t}\n\n\n\t\tif(isXml(type$$1)) {\n\t\t\t// xhr.responseType = \"document\";\n\t\t\txhr.overrideMimeType(\"text/xml\"); // for OPF parsing\n\t\t}\n\n\t\tif(type$$1 == \"binary\") {\n\t\t\txhr.responseType = \"arraybuffer\";\n\t\t}\n\n\t\txhr.send();\n\n\t\tfunction err(e) {\n\t\t\tdeferred.reject(e);\n\t\t}\n\n\t\tfunction handler() {\n\t\t\tif (this.readyState === XMLHttpRequest.DONE) {\n\t\t\t\tvar responseXML = false;\n\n\t\t\t\tif(this.responseType === \"\" || this.responseType === \"document\") {\n\t\t\t\t\tresponseXML = this.responseXML;\n\t\t\t\t}\n\n\t\t\t\tif (this.status === 200 || this.status === 0 || responseXML) { //-- Firefox is reporting 0 for blob urls\n\t\t\t\t\tvar r;\n\n\t\t\t\t\tif (!this.response && !responseXML) {\n\t\t\t\t\t\tdeferred.reject({\n\t\t\t\t\t\t\tstatus: this.status,\n\t\t\t\t\t\t\tmessage : \"Empty Response\",\n\t\t\t\t\t\t\tstack : new Error().stack\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn deferred.promise;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.status === 403) {\n\t\t\t\t\t\tdeferred.reject({\n\t\t\t\t\t\t\tstatus: this.status,\n\t\t\t\t\t\t\tresponse: this.response,\n\t\t\t\t\t\t\tmessage : \"Forbidden\",\n\t\t\t\t\t\t\tstack : new Error().stack\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn deferred.promise;\n\t\t\t\t\t}\n\t\t\t\t\tif(responseXML){\n\t\t\t\t\t\tr = this.responseXML;\n\t\t\t\t\t} else\n\t\t\t\t\tif(isXml(type$$1)){\n\t\t\t\t\t\t// xhr.overrideMimeType(\"text/xml\"); // for OPF parsing\n\t\t\t\t\t\t// If this.responseXML wasn't set, try to parse using a DOMParser from text\n\t\t\t\t\t\tr = parse(this.response, \"text/xml\");\n\t\t\t\t\t}else\n\t\t\t\t\tif(type$$1 == \"xhtml\"){\n\t\t\t\t\t\tr = parse(this.response, \"application/xhtml+xml\");\n\t\t\t\t\t}else\n\t\t\t\t\tif(type$$1 == \"html\" || type$$1 == \"htm\"){\n\t\t\t\t\t\tr = parse(this.response, \"text/html\");\n\t\t\t\t\t}else\n\t\t\t\t\tif(type$$1 == \"json\"){\n\t\t\t\t\t\tr = JSON.parse(this.response);\n\t\t\t\t\t}else\n\t\t\t\t\tif(type$$1 == \"blob\"){\n\n\t\t\t\t\t\tif(supportsURL) {\n\t\t\t\t\t\t\tr = this.response;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//-- Safari doesn't support responseType blob, so create a blob from arraybuffer\n\t\t\t\t\t\t\tr = new Blob([this.response]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}else{\n\t\t\t\t\t\tr = this.response;\n\t\t\t\t\t}\n\n\t\t\t\t\tdeferred.resolve(r);\n\t\t\t\t} else {\n\n\t\t\t\t\tdeferred.reject({\n\t\t\t\t\t\tstatus: this.status,\n\t\t\t\t\t\tmessage : this.response,\n\t\t\t\t\t\tstack : new Error().stack\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn deferred.promise;\n\t}\n\n\t/**\n\t * Represents a Section of the Book\n\t *\n\t * In most books this is equivelent to a Chapter\n\t * @param {object} item  The spine item representing the section\n\t * @param {object} hooks hooks for serialize and content\n\t * @param {object} settings\n\t * @param {object} settings.replacements\n\t */\n\tclass Section {\n\t\tconstructor(item, hooks, settings){\n\t\t\tthis.item = item;\n\t\t\tthis.idref = item.idref;\n\t\t\tthis.linear = item.linear === \"yes\";\n\t\t\tthis.properties = item.properties;\n\t\t\tthis.index = item.index;\n\t\t\tthis.href = item.href;\n\t\t\tthis.source = item.source;\n\t\t\tthis.canonical = item.canonical;\n\t\t\tthis.type = item.type;\n\t\t\tthis.next = item.next;\n\t\t\tthis.prev = item.prev;\n\n\t\t\tthis.cfiBase = item.cfiBase;\n\n\t\t\tif (hooks) {\n\t\t\t\tthis.hooks = hooks;\n\t\t\t} else {\n\t\t\t\tthis.hooks = {};\n\t\t\t\tthis.hooks.serialize = new Hook(this);\n\t\t\t\tthis.hooks.content = new Hook(this);\n\t\t\t}\n\n\t\t\tthis.document = undefined;\n\t\t\tthis.contents = undefined;\n\t\t\tthis.output = undefined;\n\n\t\t\tthis.originalHref = undefined;\n\n\t\t\tthis.settings = settings || {};\n\t\t}\n\n\t\t/**\n\t\t * Load the section from its url\n\t\t * @param  {method} _request a request method to use for loading\n\t\t * @return {document} a promise with the xml document\n\t\t */\n\t\tload(_request){\n\t\t\tvar request$$1 = _request || this.request || request;\n\t\t\tvar loading = new defer();\n\t\t\tvar loaded = loading.promise;\n\n\t\t\tif(this.contents) {\n\t\t\t\tloading.resolve(this.contents);\n\t\t\t} else {\n\t\t\t\tlet type$$1 = this.type === \"application/xhtml+xml\" ? \"xhtml\" : \"html\";\n\t\t\t\trequest$$1(this.href, type$$1)\n\t\t\t\t\t.then(function(xml){\n\t\t\t\t\t\tthis.document = xml;\n\t\t\t\t\t\tthis.contents = xml.documentElement;\n\n\t\t\t\t\t\treturn this.hooks.content.trigger(this.document, this);\n\t\t\t\t\t}.bind(this))\n\t\t\t\t\t.then(function(){\n\t\t\t\t\t\tloading.resolve(this.contents);\n\t\t\t\t\t}.bind(this))\n\t\t\t\t\t.catch(function(error){\n\t\t\t\t\t\tloading.reject(error);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn loaded;\n\t\t}\n\n\t\t/**\n\t\t * Adds a base tag for resolving urls in the section\n\t\t * @private\n\t\t */\n\t\tbase(){\n\t\t\treturn replaceBase(this.document, this);\n\t\t}\n\n\t\t/**\n\t\t * Render the contents of a section\n\t\t * @param  {method} _request a request method to use for loading\n\t\t * @return {string} output a serialized XML Document\n\t\t */\n\t\trender(_request){\n\t\t\tvar rendering = new defer();\n\t\t\tvar rendered = rendering.promise;\n\t\t\tthis.output; // TODO: better way to return this from hooks?\n\n\t\t\tthis.load(_request).\n\t\t\t\tthen(function(contents){\n\t\t\t\t\tvar userAgent = (typeof navigator !== \"undefined\" && navigator.userAgent) || \"\";\n\t\t\t\t\tvar isIE = userAgent.indexOf(\"Trident\") >= 0;\n\t\t\t\t\tvar Serializer;\n\t\t\t\t\tif (typeof XMLSerializer === \"undefined\" || isIE) {\n\t\t\t\t\t\tSerializer = XMLDom.XMLSerializer;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tSerializer = XMLSerializer;\n\t\t\t\t\t}\n\t\t\t\t\tvar serializer = new Serializer();\n\t\t\t\t\tthis.output = serializer.serializeToString(contents);\n\t\t\t\t\treturn this.output;\n\t\t\t\t}.bind(this)).\n\t\t\t\tthen(function(){\n\t\t\t\t\treturn this.hooks.serialize.trigger(this.output, this);\n\t\t\t\t}.bind(this)).\n\t\t\t\tthen(function(){\n\t\t\t\t\trendering.resolve(this.output);\n\t\t\t\t}.bind(this))\n\t\t\t\t.catch(function(error){\n\t\t\t\t\trendering.reject(error);\n\t\t\t\t});\n\n\t\t\treturn rendered;\n\t\t}\n\n\t\t/**\n\t\t * Find a string in a section\n\t\t * @param  {string} _query The query string to find\n\t\t * @return {object[]} A list of matches, with form {cfi, excerpt}\n\t\t */\n\t\tfind(_query){\n\t\t\tvar section = this;\n\t\t\tvar matches = [];\n\t\t\tvar query = _query.toLowerCase();\n\t\t\tvar find = function(node){\n\t\t\t\tvar text = node.textContent.toLowerCase();\n\t\t\t\tvar range = section.document.createRange();\n\t\t\t\tvar cfi;\n\t\t\t\tvar pos;\n\t\t\t\tvar last = -1;\n\t\t\t\tvar excerpt;\n\t\t\t\tvar limit = 150;\n\n\t\t\t\twhile (pos != -1) {\n\t\t\t\t\t// Search for the query\n\t\t\t\t\tpos = text.indexOf(query, last + 1);\n\n\t\t\t\t\tif (pos != -1) {\n\t\t\t\t\t\t// We found it! Generate a CFI\n\t\t\t\t\t\trange = section.document.createRange();\n\t\t\t\t\t\trange.setStart(node, pos);\n\t\t\t\t\t\trange.setEnd(node, pos + query.length);\n\n\t\t\t\t\t\tcfi = section.cfiFromRange(range);\n\n\t\t\t\t\t\t// Generate the excerpt\n\t\t\t\t\t\tif (node.textContent.length < limit) {\n\t\t\t\t\t\t\texcerpt = node.textContent;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\texcerpt = node.textContent.substring(pos - limit/2, pos + limit/2);\n\t\t\t\t\t\t\texcerpt = \"...\" + excerpt + \"...\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Add the CFI to the matches list\n\t\t\t\t\t\tmatches.push({\n\t\t\t\t\t\t\tcfi: cfi,\n\t\t\t\t\t\t\texcerpt: excerpt\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tlast = pos;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tsprint(section.document, function(node) {\n\t\t\t\tfind(node);\n\t\t\t});\n\n\t\t\treturn matches;\n\t\t}\n\n\t\t/**\n\t\t* Reconciles the current chapters layout properties with\n\t\t* the global layout properties.\n\t\t* @param {object} global  The globa layout settings object, chapter properties string\n\t\t* @return {object} layoutProperties Object with layout properties\n\t\t*/\n\t\treconcileLayoutSettings(global){\n\t\t\t//-- Get the global defaults\n\t\t\tvar settings = {\n\t\t\t\tlayout : global.layout,\n\t\t\t\tspread : global.spread,\n\t\t\t\torientation : global.orientation\n\t\t\t};\n\n\t\t\t//-- Get the chapter's display type\n\t\t\tthis.properties.forEach(function(prop){\n\t\t\t\tvar rendition = prop.replace(\"rendition:\", \"\");\n\t\t\t\tvar split = rendition.indexOf(\"-\");\n\t\t\t\tvar property, value;\n\n\t\t\t\tif(split != -1){\n\t\t\t\t\tproperty = rendition.slice(0, split);\n\t\t\t\t\tvalue = rendition.slice(split+1);\n\n\t\t\t\t\tsettings[property] = value;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn settings;\n\t\t}\n\n\t\t/**\n\t\t * Get a CFI from a Range in the Section\n\t\t * @param  {range} _range\n\t\t * @return {string} cfi an EpubCFI string\n\t\t */\n\t\tcfiFromRange(_range) {\n\t\t\treturn new EpubCFI(_range, this.cfiBase).toString();\n\t\t}\n\n\t\t/**\n\t\t * Get a CFI from an Element in the Section\n\t\t * @param  {element} el\n\t\t * @return {string} cfi an EpubCFI string\n\t\t */\n\t\tcfiFromElement(el) {\n\t\t\treturn new EpubCFI(el, this.cfiBase).toString();\n\t\t}\n\n\t\t/**\n\t\t * Unload the section document\n\t\t */\n\t\tunload() {\n\t\t\tthis.document = undefined;\n\t\t\tthis.contents = undefined;\n\t\t\tthis.output = undefined;\n\t\t}\n\n\t\t/**\n\t\t * Return an object representation of the item\n\t\t * @return {object}\n\t\t */\n\t\ttoObject() {\n\t\t\treturn {\n\t\t\t\tidref : this.idref,\n\t\t\t\tlinear : this.linear ? \"yes\" : \"no\",\n\t\t\t\thref : this.href,\n\t\t\t\tsource : this.source,\n\t\t\t\ttype : this.type,\n\t\t\t\tcanonical : this.canonical,\n\t\t\t\tcfiBase : this.cfiBase\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Create a url from the content\n\t\t */\n\t\tcreateUrl(request$$1) {\n\t\t\t//var parsedUrl = new Url(url);\n\t\t\t//var mimeType = mime.lookup(parsedUrl.filename);\n\t\t\tlet mimeType = this.type;\n\n\t\t\treturn this.render(request$$1)\n\t\t\t\t.then((text) => {\n\t\t\t\t\treturn new Blob([text], {type : mimeType});\n\t\t\t\t})\n\t\t\t\t.then((blob) => {\n\t\t\t\t\tif (this.settings.replacements && this.settings.replacements === \"base64\") {\n\t\t\t\t\t\treturn blob2base64(blob)\n\t\t\t\t\t\t\t.then((blob) => {\n\t\t\t\t\t\t\t\treturn createBase64Url(blob, mimeType);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn createBlobUrl(blob, mimeType);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then((url) => {\n\t\t\t\t\tthis.originalHref = this.href;\n\t\t\t\t\tthis.href = url;\n\n\t\t\t\t\tthis.unload();\n\n\t\t\t\t\treturn url;\n\t\t\t\t})\n\t\t}\n\n\t\tdestroy() {\n\t\t\tthis.unload();\n\t\t\tthis.hooks.serialize.clear();\n\t\t\tthis.hooks.content.clear();\n\n\t\t\tif (this.originalHref) {\n\t\t\t\trevokeBlobUrl(this.href);\n\t\t\t}\n\n\t\t\tthis.hooks = undefined;\n\t\t\tthis.idref = undefined;\n\t\t\tthis.linear = undefined;\n\t\t\tthis.properties = undefined;\n\t\t\tthis.index = undefined;\n\t\t\tthis.href = undefined;\n\t\t\tthis.source = undefined;\n\t\t\tthis.next = undefined;\n\t\t\tthis.prev = undefined;\n\n\t\t\tthis.cfiBase = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * A collection of Spine Items\n\t */\n\tclass Spine {\n\t\tconstructor(items) {\n\t\t\tthis.spineItems = [];\n\t\t\tthis.spineByHref = {};\n\t\t\tthis.spineById = {};\n\n\t\t\tthis.hooks = {};\n\t\t\tthis.hooks.serialize = new Hook();\n\t\t\tthis.hooks.content = new Hook();\n\n\t\t\t// Register replacements\n\t\t\tthis.hooks.content.register(replaceBase);\n\t\t\tthis.hooks.content.register(replaceCanonical);\n\t\t\tthis.hooks.content.register(replaceMeta);\n\n\t\t\tthis.epubcfi = new EpubCFI();\n\n\t\t\tthis.loaded = false;\n\n\t\t\tthis.items = undefined;\n\t\t\tthis.manifest = undefined;\n\t\t\tthis.spineNodeIndex = undefined;\n\t\t\tthis.baseUrl = undefined;\n\t\t\tthis.length = undefined;\n\n\t\t\tif (items) {\n\t\t\t\tthis.unpack(items);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Unpack items from a opf into spine items\n\t\t * @param  {items} items\n\t\t */\n\t\tunpack(items) {\n\n\t\t\tthis.items = items;\n\t\t\tthis.length = this.items.length;\n\n\t\t\tthis.items.forEach( (item, index) => {\n\n\t\t\t\tif (item.linear === \"yes\") {\n\t\t\t\t\titem.prev = function() {\n\t\t\t\t\t\tlet prevIndex = item.index;\n\t\t\t\t\t\twhile (prevIndex > 0) {\n\t\t\t\t\t\t\tlet prev = this.get(prevIndex-1);\n\t\t\t\t\t\t\tif (prev && prev.linear) {\n\t\t\t\t\t\t\t\treturn prev;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprevIndex -= 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}.bind(this);\n\t\t\t\t\titem.next = function() {\n\t\t\t\t\t\tlet nextIndex = item.index;\n\t\t\t\t\t\twhile (nextIndex < this.spineItems.length-1) {\n\t\t\t\t\t\t\tlet next = this.get(nextIndex+1);\n\t\t\t\t\t\t\tif (next && next.linear) {\n\t\t\t\t\t\t\t\treturn next;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnextIndex += 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}.bind(this);\n\t\t\t\t} else {\n\t\t\t\t\titem.prev = function() {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t};\n\t\t\t\t\titem.next = function() {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tlet spineItem = new Section(item, this.hooks);\n\n\t\t\t\tthis.append(spineItem);\n\n\n\t\t\t});\n\n\t\t\tthis.loaded = true;\n\t\t}\n\n\t\t/**\n\t\t * Get an item from the spine\n\t\t * @param  {string|int} [target]\n\t\t * @return {Section} section\n\t\t * @example spine.get();\n\t\t * @example spine.get(1);\n\t\t * @example spine.get(\"chap1.html\");\n\t\t * @example spine.get(\"id1234\");\n\t\t */\n\t\tget(target) {\n\t\t\tlet index;\n\n\t\t\tif (typeof target === \"undefined\") {\n\t\t\t\twhile (index < this.spineItems.length) {\n\t\t\t\t\tlet next = this.spineItems[index];\n\t\t\t\t\tif (next && next.linear) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tindex += 1;\n\t\t\t\t}\n\t\t\t} else if(this.epubcfi.isCfiString(target)) {\n\t\t\t\tlet cfi = new EpubCFI(target);\n\t\t\t\tindex = cfi.spinePos;\n\t\t\t} else if(typeof target === \"number\" || isNaN(target) === false){\n\t\t\t\tindex = target;\n\t\t\t} else if(typeof target === \"string\" && target.indexOf(\"#\") === 0) {\n\t\t\t\tindex = this.spineById[target.substring(1)];\n\t\t\t} else if(typeof target === \"string\") {\n\t\t\t\t// Remove fragments\n\t\t\t\ttarget = target.split(\"#\")[0];\n\n\t\t\t\tif (this.spineById[target] !== undefined) {\n\t\t\t\t\tindex = this.spineById[target];\n\t\t\t\t} else if (this.spineById[target] !== undefined) {\n\t\t\t\t\tindex = this.spineByHref[target];\n\t\t\t\t} else {\n\t\t\t\t\tindex = this.spineByHref[encodeURI(target)];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (index != undefined) {\n\t\t\t\treturn this.spineItems[index];\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Append a Section to the Spine\n\t\t * @private\n\t\t * @param  {Section} section\n\t\t */\n\t\tappend(section) {\n\t\t\tvar index = this.spineItems.length;\n\t\t\tsection.index = index;\n\n\t\t\tthis.spineItems.push(section);\n\n\t\t\t// Encode and Decode href lookups\n\t\t\t// see pr for details: https://github.com/futurepress/epub.js/pull/358\n\t\t\tthis.spineByHref[decodeURI(section.href)] = index;\n\t\t\tthis.spineByHref[encodeURI(section.href)] = index;\n\t\t\tthis.spineByHref[section.href] = index;\n\n\t\t\tif (section.source) {\n\t\t\t\tthis.spineByHref[section.source] = index;\n\t\t\t}\n\n\t\t\tthis.spineById[section.idref] = index;\n\n\t\t\treturn index;\n\t\t}\n\n\t\t/**\n\t\t * Prepend a Section to the Spine\n\t\t * @private\n\t\t * @param  {Section} section\n\t\t */\n\t\tprepend(section) {\n\t\t\t// var index = this.spineItems.unshift(section);\n\t\t\tthis.spineByHref[section.href] = 0;\n\t\t\tthis.spineById[section.idref] = 0;\n\n\t\t\t// Re-index\n\t\t\tthis.spineItems.forEach(function(item, index){\n\t\t\t\titem.index = index;\n\t\t\t});\n\n\t\t\treturn 0;\n\t\t}\n\n\t\t// insert(section, index) {\n\t\t//\n\t\t// };\n\n\t\t/**\n\t\t * Remove a Section from the Spine\n\t\t * @private\n\t\t * @param  {Section} section\n\t\t */\n\t\tremove(section) {\n\t\t\tvar index = this.spineItems.indexOf(section);\n\n\t\t\tif(index > -1) {\n\t\t\t\tdelete this.spineByHref[section.href];\n\t\t\t\tdelete this.spineById[section.idref];\n\n\t\t\t\treturn this.spineItems.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Loop over the Sections in the Spine\n\t\t * @return {method} forEach\n\t\t */\n\t\teach() {\n\t\t\treturn this.spineItems.forEach.apply(this.spineItems, arguments);\n\t\t}\n\n\t\t/**\n\t\t * Map the Sections in the Spine\n\t\t * @return {method} map\n\t\t */\n\t\tmap() {\n\t\t\treturn this.spineItems.map.apply(this.spineItems, arguments);\n\t\t}\n\n\t\tfirst() {\n\t\t\tlet index = 0;\n\n\t\t\tdo {\n\t\t\t\tlet next = this.get(index);\n\n\t\t\t\tif (next && next.linear) {\n\t\t\t\t\treturn next;\n\t\t\t\t}\n\t\t\t\tindex += 1;\n\t\t\t} while (index < this.spineItems.length) ;\n\t\t}\n\n\t\tlast() {\n\t\t\tlet index = this.spineItems.length-1;\n\n\t\t\tdo {\n\t\t\t\tlet prev = this.get(index);\n\t\t\t\tif (prev && prev.linear) {\n\t\t\t\t\treturn prev;\n\t\t\t\t}\n\t\t\t\tindex -= 1;\n\t\t\t} while (index >= 0);\n\t\t}\n\n\t\t/**\n\t\t * Export an Array of all Spine Items\n\t\t * @return {array}\n\t\t */\n\t\ttoArray() {\n\t\t\treturn this.spineItems.map(function(item, index){\n\t\t\t\treturn item.toObject();\n\t\t\t});\n\t\t}\n\n\t\ttoJSON() {\n\t\t\treturn JSON.stringify(this.toArray());\n\t\t}\n\n\t\tdestroy() {\n\t\t\tthis.each((section) => section.destroy());\n\n\t\t\tthis.spineItems = undefined;\n\t\t\tthis.spineByHref = undefined;\n\t\t\tthis.spineById = undefined;\n\n\t\t\tthis.hooks.serialize.clear();\n\t\t\tthis.hooks.content.clear();\n\t\t\tthis.hooks = undefined;\n\n\t\t\tthis.epubcfi = undefined;\n\n\t\t\tthis.loaded = false;\n\n\t\t\tthis.items = undefined;\n\t\t\tthis.manifest = undefined;\n\t\t\tthis.spineNodeIndex = undefined;\n\t\t\tthis.baseUrl = undefined;\n\t\t\tthis.length = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Queue for handling tasks one at a time\n\t * @class\n\t * @param {scope} context what this will resolve to in the tasks\n\t */\n\tclass Queue {\n\t\tconstructor(context){\n\t\t\tthis._q = [];\n\t\t\tthis.context = context;\n\t\t\tthis.tick = requestAnimationFrame$1;\n\t\t\tthis.running = false;\n\t\t\tthis.paused = false;\n\t\t}\n\n\t\t/**\n\t\t * Add an item to the queue\n\t\t * @return {Promise}\n\t\t */\n\t\tenqueue() {\n\t\t\tvar deferred, promise;\n\t\t\tvar queued;\n\t\t\tvar task = [].shift.call(arguments);\n\t\t\tvar args = arguments;\n\n\t\t\t// Handle single args without context\n\t\t\t// if(args && !Array.isArray(args)) {\n\t\t\t//   args = [args];\n\t\t\t// }\n\t\t\tif(!task) {\n\t\t\t\tthrow new Error(\"No Task Provided\");\n\t\t\t}\n\n\t\t\tif(typeof task === \"function\"){\n\n\t\t\t\tdeferred = new defer();\n\t\t\t\tpromise = deferred.promise;\n\n\t\t\t\tqueued = {\n\t\t\t\t\t\"task\" : task,\n\t\t\t\t\t\"args\"     : args,\n\t\t\t\t\t//\"context\"  : context,\n\t\t\t\t\t\"deferred\" : deferred,\n\t\t\t\t\t\"promise\" : promise\n\t\t\t\t};\n\n\t\t\t} else {\n\t\t\t\t// Task is a promise\n\t\t\t\tqueued = {\n\t\t\t\t\t\"promise\" : task\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis._q.push(queued);\n\n\t\t\t// Wait to start queue flush\n\t\t\tif (this.paused == false && !this.running) {\n\t\t\t\t// setTimeout(this.flush.bind(this), 0);\n\t\t\t\t// this.tick.call(window, this.run.bind(this));\n\t\t\t\tthis.run();\n\t\t\t}\n\n\t\t\treturn queued.promise;\n\t\t}\n\n\t\t/**\n\t\t * Run one item\n\t\t * @return {Promise}\n\t\t */\n\t\tdequeue(){\n\t\t\tvar inwait, task, result;\n\n\t\t\tif(this._q.length && !this.paused) {\n\t\t\t\tinwait = this._q.shift();\n\t\t\t\ttask = inwait.task;\n\t\t\t\tif(task){\n\t\t\t\t\t// console.log(task)\n\n\t\t\t\t\tresult = task.apply(this.context, inwait.args);\n\n\t\t\t\t\tif(result && typeof result[\"then\"] === \"function\") {\n\t\t\t\t\t\t// Task is a function that returns a promise\n\t\t\t\t\t\treturn result.then(function(){\n\t\t\t\t\t\t\tinwait.deferred.resolve.apply(this.context, arguments);\n\t\t\t\t\t\t}.bind(this), function() {\n\t\t\t\t\t\t\tinwait.deferred.reject.apply(this.context, arguments);\n\t\t\t\t\t\t}.bind(this));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Task resolves immediately\n\t\t\t\t\t\tinwait.deferred.resolve.apply(this.context, result);\n\t\t\t\t\t\treturn inwait.promise;\n\t\t\t\t\t}\n\n\n\n\t\t\t\t} else if(inwait.promise) {\n\t\t\t\t\t// Task is a promise\n\t\t\t\t\treturn inwait.promise;\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tinwait = new defer();\n\t\t\t\tinwait.deferred.resolve();\n\t\t\t\treturn inwait.promise;\n\t\t\t}\n\n\t\t}\n\n\t\t// Run All Immediately\n\t\tdump(){\n\t\t\twhile(this._q.length) {\n\t\t\t\tthis.dequeue();\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Run all tasks sequentially, at convince\n\t\t * @return {Promise}\n\t\t */\n\t\trun(){\n\n\t\t\tif(!this.running){\n\t\t\t\tthis.running = true;\n\t\t\t\tthis.defered = new defer();\n\t\t\t}\n\n\t\t\tthis.tick.call(window, () => {\n\n\t\t\t\tif(this._q.length) {\n\n\t\t\t\t\tthis.dequeue()\n\t\t\t\t\t\t.then(function(){\n\t\t\t\t\t\t\tthis.run();\n\t\t\t\t\t\t}.bind(this));\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.defered.resolve();\n\t\t\t\t\tthis.running = undefined;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\t// Unpause\n\t\t\tif(this.paused == true) {\n\t\t\t\tthis.paused = false;\n\t\t\t}\n\n\t\t\treturn this.defered.promise;\n\t\t}\n\n\t\t/**\n\t\t * Flush all, as quickly as possible\n\t\t * @return {Promise}\n\t\t */\n\t\tflush(){\n\n\t\t\tif(this.running){\n\t\t\t\treturn this.running;\n\t\t\t}\n\n\t\t\tif(this._q.length) {\n\t\t\t\tthis.running = this.dequeue()\n\t\t\t\t\t.then(function(){\n\t\t\t\t\t\tthis.running = undefined;\n\t\t\t\t\t\treturn this.flush();\n\t\t\t\t\t}.bind(this));\n\n\t\t\t\treturn this.running;\n\t\t\t}\n\n\t\t}\n\n\t\t/**\n\t\t * Clear all items in wait\n\t\t */\n\t\tclear(){\n\t\t\tthis._q = [];\n\t\t}\n\n\t\t/**\n\t\t * Get the number of tasks in the queue\n\t\t * @return {int} tasks\n\t\t */\n\t\tlength(){\n\t\t\treturn this._q.length;\n\t\t}\n\n\t\t/**\n\t\t * Pause a running queue\n\t\t */\n\t\tpause(){\n\t\t\tthis.paused = true;\n\t\t}\n\n\t\t/**\n\t\t * End the queue\n\t\t */\n\t\tstop(){\n\t\t\tthis._q = [];\n\t\t\tthis.running = false;\n\t\t\tthis.paused = true;\n\t\t}\n\t}\n\n\tconst EPUBJS_VERSION = \"0.4\";\n\n\t// Dom events to listen for\n\tconst DOM_EVENTS = [\"keydown\", \"keyup\", \"keypressed\", \"mouseup\", \"mousedown\", \"click\", \"touchend\", \"touchstart\"];\n\n\tconst EVENTS = {\n\t\tBOOK : {\n\t\t\tOPEN_FAILED : \"openFailed\",\n\t\t\tREADY : \"ready\"\n\t\t},\n\t\tCONTENTS : {\n\t\t\tEXPAND : \"expand\",\n\t\t\tRESIZE : \"resize\",\n\t\t\tSELECTED : \"selected\",\n\t\t\tSELECTED_RANGE : \"selectedRange\",\n\t\t\tLINK_CLICKED : \"linkClicked\"\n\t\t},\n\t\tLOCATIONS : {\n\t\t\tCHANGED : \"changed\"\n\t\t},\n\t\tMANAGERS : {\n\t\t\tRESIZE : \"resize\",\n\t\t\tRESIZED : \"resized\",\n\t\t\tORIENTATION_CHANGE : \"orientationchange\",\n\t\t\tADDED : \"added\",\n\t\t\tSCROLL : \"scroll\",\n\t\t\tSCROLLED : \"scrolled\"\n\t\t},\n\t\tVIEWS : {\n\t\t\tAXIS : \"axis\",\n\t\t\tLOAD_ERROR : \"loaderror\",\n\t\t\tRENDERED : \"rendered\",\n\t\t\tRESIZED : \"resized\",\n\t\t\tDISPLAYED : \"displayed\",\n\t\t\tSHOWN : \"shown\",\n\t\t\tHIDDEN : \"hidden\",\n\t\t\tMARK_CLICKED : \"markClicked\"\n\t\t},\n\t\tRENDITION : {\n\t\t\tSTARTED : \"started\",\n\t\t\tATTACHED : \"attached\",\n\t\t\tDISPLAYED : \"displayed\",\n\t\t\tDISPLAY_ERROR : \"displayerror\",\n\t\t\tRENDERED : \"rendered\",\n\t\t\tREMOVED : \"removed\",\n\t\t\tRESIZED : \"resized\",\n\t\t\tORIENTATION_CHANGE : \"orientationchange\",\n\t\t\tLOCATION_CHANGED : \"locationChanged\",\n\t\t\tRELOCATED : \"relocated\",\n\t\t\tMARK_CLICKED : \"markClicked\",\n\t\t\tSELECTED : \"selected\",\n\t\t\tLAYOUT: \"layout\",\n\t\t\tWORKER_FAILED: \"workerFailed\",\n\t\t\tWORKER_INACTIVE: \"workerInactive\"\n\t\t},\n\t\tLAYOUT : {\n\t\t\tUPDATED : \"updated\"\n\t\t}\n\t};\n\n\t/**\n\t * Locators\n\t * @param {object} [manifest]\n\t */\n\tclass Locators {\n\t\tconstructor(manifest) {\n\t\t\tif (manifest) {\n\t\t\t\tthis.unpack(manifest);\n\t\t\t}\n\t\t}\n\n\t\tunpack(manifest) {\n\t\t\tif (manifest.locations) {\n\t\t\t\tthis.unpackLocations(manifest.locations);\n\t\t\t}\n\n\t\t\tif (manifest.pages) {\n\t\t\t\tthis.unpackPages(manifest.page);\n\t\t\t}\n\t\t}\n\n\t\tunpackLocations(locations) {\n\t\t\tthis.locations = locations;\n\t\t\tthis.totalLocations = this.locations.length - 1;\n\t\t}\n\n\t\tunpackPages(pages) {\n\t\t\tthis.pages = pages;\n\t\t\tthis.firstPage = parseInt(this.pages[0]);\n\t\t\tthis.lastPage = parseInt(this.pages[this.pages.length-1]);\n\t\t\tthis.totalPages = this.lastPage - this.firstPage;\n\n\t\t\tpages.forEach((item) => {\n\t\t\t\tif (item.cfi) {\n\t\t\t\t\tthis.pageLocations.push(item.cfi);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Get a location from an EpubCFI\n\t\t * @param {EpubCFI} cfi\n\t\t * @return {number}\n\t\t */\n\t\tlocationFromCfi(cfi){\n\t\t\tlet loc;\n\t\t\tif (EpubCFI.prototype.isCfiString(cfi)) {\n\t\t\t\tcfi = new EpubCFI(cfi);\n\t\t\t}\n\t\t\t// Check if the location has not been set yet\n\t\t\tif(this.locations.length === 0) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tloc = locationOf(cfi, this.locations, EpubCFI.prototype.compare);\n\n\t\t\tif (loc > this.totalLocations) {\n\t\t\t\treturn this.totalLocations;\n\t\t\t}\n\n\t\t\treturn loc;\n\t\t}\n\n\t\t/**\n\t\t * Get a percentage position in locations from an EpubCFI\n\t\t * @param {EpubCFI} cfi\n\t\t * @return {number}\n\t\t */\n\t\tpercentageFromCfi(cfi) {\n\t\t\tif(this.locations.length === 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// Find closest cfi\n\t\t\tvar loc = this.locationFromCfi(cfi);\n\t\t\t// Get percentage in total\n\t\t\treturn this.percentageFromLocation(loc);\n\t\t}\n\n\t\t/**\n\t\t * Get a percentage position from a location index\n\t\t * @param {number} location\n\t\t * @return {number}\n\t\t */\n\t\tpercentageFromLocation(loc) {\n\t\t\tif (!loc || !this.totalLocations) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\treturn (loc / this.totalLocations);\n\t\t}\n\n\t\t/**\n\t\t * Get an EpubCFI from location index\n\t\t * @param {number} loc\n\t\t * @return {EpubCFI} cfi\n\t\t */\n\t\tcfiFromLocation(loc){\n\t\t\tvar cfi = -1;\n\t\t\t// check that pg is an int\n\t\t\tif(typeof loc != \"number\"){\n\t\t\t\tloc = parseInt(loc);\n\t\t\t}\n\n\t\t\tif(loc >= 0 && loc < this.locations.length) {\n\t\t\t\tcfi = this.locations[loc];\n\t\t\t}\n\n\t\t\treturn cfi;\n\t\t}\n\n\t\t/**\n\t\t * Get an EpubCFI from location percentage\n\t\t * @param {number} percentage\n\t\t * @return {EpubCFI} cfi\n\t\t */\n\t\tcfiFromPercentage(percentage){\n\t\t\tlet loc;\n\t\t\tif (percentage > 1) {\n\t\t\t\tconsole.warn(\"Normalize cfiFromPercentage value to between 0 - 1\");\n\t\t\t}\n\n\t\t\t// Make sure 1 goes to very end\n\t\t\tif (percentage >= 1) {\n\t\t\t\tlet cfi = new EpubCFI(this.locations[this.totalLocations]);\n\t\t\t\tcfi.collapse();\n\t\t\t\treturn cfi.toString();\n\t\t\t}\n\n\t\t\tloc = Math.ceil(this.totalLocations * percentage);\n\t\t\treturn this.cfiFromLocation(loc);\n\t\t}\n\n\t\t/**\n\t\t * Get a PageList result from a EpubCFI\n\t\t * @param  {string} cfi EpubCFI String\n\t\t * @return {string} page\n\t\t */\n\t\tpageFromCfi(cfi){\n\t\t\tvar pg = -1;\n\n\t\t\t// Check if the pageList has not been set yet\n\t\t\tif(!this.pageLocations || this.pageLocations.length === 0) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// check if the cfi is in the location list\n\t\t\tvar index = indexOfSorted(cfi, this.pageLocations, EpubCFI.prototype.compare);\n\t\t\tif(index != -1) {\n\t\t\t\tpg = this.pages[index];\n\t\t\t} else {\n\t\t\t\t// Otherwise add it to the list of locations\n\t\t\t\t// Insert it in the correct position in the locations page\n\t\t\t\tindex = locationOf(cfi, this.pageLocations, EpubCFI.prototype.compare);\n\t\t\t\t// Get the page at the location just before the new one, or return the first\n\t\t\t\tpg = index-1 >= 0 ? this.pages[index-1] : this.pages[0];\n\t\t\t\tif(pg !== undefined) {\n\t\t\t\t\t// Add the new page in so that the locations and page array match up\n\t\t\t\t\t//this.pages.splice(index, 0, pg);\n\t\t\t\t} else {\n\t\t\t\t\tpg = -1;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\treturn pg;\n\t\t}\n\n\t\t/**\n\t\t * Get an EpubCFI from a Page List Item\n\t\t * @param  {string} pg\n\t\t * @return {string} cfi\n\t\t */\n\t\tcfiFromPage(pg){\n\t\t\tvar cfi = -1;\n\t\t\t// check that pg is an int\n\t\t\tif(typeof pg != \"number\"){\n\t\t\t\tpg = parseInt(pg);\n\t\t\t}\n\n\t\t\t// check if the cfi is in the page list\n\t\t\t// Pages could be unsorted.\n\t\t\tvar index = this.pages.indexOf(pg);\n\t\t\tif(index != -1) {\n\t\t\t\tcfi = this.pageLocations[index];\n\t\t\t}\n\t\t\t// TODO: handle pages not in the list\n\t\t\treturn cfi;\n\t\t}\n\n\t\t/**\n\t\t * Get a Page from Book percentage\n\t\t * @param  {number} percent\n\t\t * @return {string} page\n\t\t */\n\t\tpageFromPercentage(percent){\n\t\t\tvar pg = Math.round(this.totalPages * percent);\n\t\t\treturn pg;\n\t\t}\n\n\t\t/**\n\t\t * Returns a value between 0 - 1 corresponding to the location of a page\n\t\t * @param  {int} pg the page\n\t\t * @return {number} percentage\n\t\t */\n\t\tpercentageFromPage(pg){\n\t\t\tvar percentage = (pg - this.firstPage) / this.totalPages;\n\t\t\treturn Math.round(percentage * 1000) / 1000;\n\t\t}\n\n\t\t/**\n\t\t * Returns a value between 0 - 1 corresponding to the location of a cfi\n\t\t * @param  {string} cfi EpubCFI String\n\t\t * @return {number} percentage\n\t\t */\n\t\tpercentagePageFromCfi(cfi){\n\t\t\tvar pg = this.pageFromCfi(cfi);\n\t\t\tvar percentage = this.percentageFromPage(pg);\n\t\t\treturn percentage;\n\t\t}\n\n\t\tdestroy () {\n\n\t\t}\n\t}\n\n\teventEmitter(Locators.prototype);\n\n\t/**\n\t * Navigation wrapper\n\t * @param {[object]} manifest\n\t */\n\tclass Navigation {\n\t\tconstructor(manifest) {\n\t\t\tthis.toc = [];\n\t\t\tthis.tocByHref = {};\n\t\t\tthis.tocById = {};\n\n\t\t\tthis.landmarks = [];\n\t\t\tthis.landmarksByType = {};\n\n\n\t\t\tif (manifest) {\n\t\t\t\tthis.unpack(manifest);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Get an item from the navigation\n\t\t * @param  {string} target\n\t\t * @return {object} navItems\n\t\t */\n\t\tget(target) {\n\t\t\tvar index;\n\n\t\t\tif(!target) {\n\t\t\t\treturn this.toc;\n\t\t\t}\n\n\t\t\tif(target.indexOf(\"#\") === 0) {\n\t\t\t\tindex = this.tocById[target.substring(1)];\n\t\t\t} else if(target in this.tocByHref){\n\t\t\t\tindex = this.tocByHref[target];\n\t\t\t}\n\n\t\t\treturn this.toc[index];\n\t\t}\n\n\t\t/**\n\t\t * Get a landmark by type\n\t\t * List of types: https://idpf.github.io/epub-vocabs/structure/\n\t\t * @param  {string} type\n\t\t * @return {object} landmarkItems\n\t\t */\n\t\tlandmark(type$$1) {\n\t\t\tlet index;\n\n\t\t\tindex = this.landmarksByType[type$$1];\n\n\t\t\treturn this.landmarks[index];\n\t\t}\n\n\t\t/**\n\t\t * Unpack manifest object\n\t\t */\n\t\tunpack(manifest) {\n\t\t\tif (manifest.toc) {\n\t\t\t\tthis.unpackToc(manifest.toc);\n\t\t\t}\n\n\t\t\tif (manifest.landmarks) {\n\t\t\t\tthis.unpackLandmarks(manifest.landmarks);\n\t\t\t}\n\t\t}\n\n\t\tunpackToc(toc) {\n\t\t\tthis.toc = toc;\n\t\t\ttoc.forEach((item, index) => {\n\t\t\t\tthis.tocByHref[item.href] = index;\n\t\t\t\tif (item.source) {\n\t\t\t\t\tthis.tocByHref[item.href] = index;\n\t\t\t\t}\n\t\t\t\tif (item.id) {\n\t\t\t\t\tthis.tocId[item.id] = index;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tunpackLandmarks(landmarks) {\n\t\t\tthis.landmarks = landmarks;\n\t\t\tlandmarks.forEach((item, index) => {\n\t\t\t\tthis.landmarksByType[item.type] = index;\n\t\t\t});\n\t\t}\n\n\t\tdestroy() {\n\t\t\tthis.toc = undefined;\n\t\t\tthis.tocByHref = undefined;\n\t\t\tthis.tocById = undefined;\n\n\t\t\tthis.landmarks = undefined;\n\t\t\tthis.landmarksByType = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * An Epub Book representation with methods for the loading and manipulation\n\t * of its contents.\n\t * @class\n\t * @param {json | object} [manifest]\n\t * @returns {Book}\n\t * @example new Book(manifest)\n\t */\n\tclass Book {\n\t\tconstructor(manifest) {\n\n\t\t\t/**\n\t\t\t * @member {Spine} sections\n\t\t\t * @memberof Book\n\t\t\t */\n\t\t\tthis.sections = new Spine();\n\n\n\t\t\t/**\n\t\t\t * @member {Navigation} navigation\n\t\t\t * @memberof Book\n\t\t\t */\n\t\t\tthis.navigation = new Navigation();\n\n\t\t\t/**\n\t\t\t * @member {Locators} locators\n\t\t\t * @memberof Book\n\t\t\t */\n\t\t\tthis.locators = new Locators();\n\n\t\t\t/**\n\t\t\t * @member {object} manifest\n\t\t\t * @memberof Book\n\t\t\t */\n\t\t\tthis.manifest = {\n\t\t\t\t\"@context\" : \"http://readium.org/webpub/default.jsonld\",\n\t\t\t\tmetadata: {\n\t\t\t\t\t\"@type\" : \"http://schema.org/Book\"\n\t\t\t\t},\n\t\t\t\tresources: [],\n\t\t\t\ttoc: [],\n\t\t\t\tlandmarks: [],\n\t\t\t\tlocations: [],\n\t\t\t\tpages: [],\n\t\t\t\tspine: [],\n\t\t\t\tlinks: []\n\t\t\t};\n\n\n\t\t\tif (manifest) {\n\t\t\t\tthis.parse(manifest);\n\t\t\t}\n\t\t}\n\n\t\tparse(manifest) {\n\t\t\tif (!manifest) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof manifest === \"string\") {\n\t\t\t\tmanifest = JSON.parse(manifest);\n\t\t\t}\n\n\t\t\tlet {\n\t\t\t\tmetadata,\n\t\t\t\tresources,\n\t\t\t\ttoc,\n\t\t\t\tlandmarks,\n\t\t\t\tlocations,\n\t\t\t\tpages,\n\t\t\t\tspine,\n\t\t\t\tlinks\n\t\t\t} = manifest;\n\n\t\t\tthis.metadata = metadata;\n\t\t\tthis.resources = resources;\n\t\t\tthis.spine = spine;\n\t\t\tthis.toc = toc;\n\t\t\tthis.landmarks = landmarks;\n\t\t\tthis.locations = locations;\n\t\t\tthis.pages = pages;\n\t\t\tthis.links = links;\n\t\t}\n\n\n\t\t/**\n\t\t * Get or set the Url\n\t\t * @param {string} [url]\n\t\t * @return {string} href\n\t\t */\n\t\tget url() {\n\t\t\tlet selfLink = this.manifest.links.find((link) => {\n\t\t\t\treturn link.rel === \"self\";\n\t\t\t});\n\t\t\treturn selfLink && selfLink.href;\n\t\t}\n\n\t\tset url(url) {\n\t\t\tlet selfLink = this.manifest.links.find((link) => {\n\t\t\t\treturn link.rel === \"self\";\n\t\t\t});\n\n\t\t\tif (selfLink) {\n\t\t\t\tselfLink.href = url;\n\t\t\t} else {\n\t\t\t\tselfLink = {\n\t\t\t\t\trel: \"self\",\n\t\t\t\t\thref: url,\n\t\t\t\t\ttype: \"application/webpub+json\"\n\t\t\t\t};\n\t\t\t\tthis.manifest.links.push(selfLink);\n\t\t\t}\n\n\t\t\t// Set the Path object for resolving links\n\t\t\tthis.path = selfLink.href;\n\n\t\t\treturn selfLink && selfLink.href;\n\t\t}\n\n\t\t/**\n\t\t * Get or set the Path to resolve content\n\t\t * @param {string} [url]\n\t\t * @return {string} Path\n\t\t */\n\t\tget path() {\n\t\t\treturn this._path;\n\t\t}\n\n\t\tset path(url) {\n\t\t\tlet uri = new Url(url);\n\t\t\tthis._path = uri.Path;\n\t\t\treturn this._path;\n\t\t}\n\n\t\t/**\n\t\t * Get or set the Spine\n\t\t * @param {array} [spineItems]\n\t\t * @return {array} spineItems\n\t\t */\n\t\tget spine() {\n\t\t\treturn this.manifest.spine;\n\t\t}\n\n\t\tset spine(items) {\n\t\t\tif (!items) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.sections.unpack(items);\n\n\t\t\tthis.manifest.spine = items;\n\n\t\t\treturn this.manifest.spine;\n\t\t}\n\n\t\t/**\n\t\t * Gets a Section of the Book from the Spine\n\t\t * Alias for `book.spine.get`\n\t\t * @param {string} target\n\t\t * @return {Section}\n\t\t */\n\t\tsection(target) {\n\t\t\treturn this.sections.get(target);\n\t\t}\n\n\t\t/**\n\t\t * Get or set the cover url\n\t\t * @param {string} [coverUrl]\n\t\t * @return {string} coverUrl\n\t\t */\n\t\t get cover() {\n\t\t\t let coverLink = this.manifest.links.find((link) => {\n\t\t\t\t return link.rel === \"cover\";\n\t\t\t });\n\t\t\t return coverLink && coverLink.href;\n\t\t }\n\n\t\t set cover(url) {\n\t\t\t let coverLink = this.manifest.links.find((link) => {\n\t\t\t\t return link.rel === \"cover\";\n\t\t\t });\n\n\t\t\t if (coverLink) {\n\t\t\t\t coverLink.href = url;\n\t\t\t } else {\n\t\t\t\t coverLink = {\n\t\t\t\t\t rel: \"cover\",\n\t\t\t\t\t href: url\n\t\t\t\t };\n\t\t\t\t this.manifest.links.push(coverLink);\n\t\t\t }\n\t\t\t return coverLink && coverLink.href;\n\t\t }\n\n\t\t/**\n\t\t * Get or set the metadata\n\t\t * @param {object} [metadata]\n\t\t * @return {object} metadata\n\t\t */\n\t\tget metadata() {\n\t\t\treturn this.manifest.metadata;\n\t\t}\n\n\t\tset metadata(metadata) {\n\t\t\tif (!metadata) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.manifest.metadata = metadata;\n\n\t\t\t// Set metadata type\n\t\t\tif (!metadata[\"@type\"]) {\n\t\t\t\tthis.manifest.metadata[\"@type\"] = \"http://schema.org/Book\";\n\t\t\t}\n\n\t\t\treturn this.manifest.metadata;\n\t\t}\n\n\t\t/**\n\t\t * Get or set the resources\n\t\t * @param {object} [resources]\n\t\t * @return {object} resources\n\t\t */\n\t\tget resources() {\n\t\t\treturn this.manifest.resources;\n\t\t}\n\n\t\tset resources(resources) {\n\t\t\tif (!resources) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.manifest.resources = resources.map((item) => {\n\n\t\t\t\t// Add Cover Rel\n\t\t\t\tif (item.properties && item.properties.length) {\n\n\t\t\t\t\tif (item.properties.indexOf(\"cover-image\") > -1) {\n\t\t\t\t\t\titem.rel = \"cover\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// Add Contents Rel\n\t\t\t\t\tif (item.properties.indexOf(\"nav\") > -1) {\n\t\t\t\t\t\titem.rel = \"contents\";\n\t\t\t\t\t}\n\n\t\t\t\t\tif (item.rel && item.rel === \"cover\") {\n\t\t\t\t\t\tthis.cover = item.href;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t});\n\n\t\t\treturn this.manifest.resources;\n\t\t}\n\n\t\t/**\n\t\t * Get or set the toc\n\t\t * @param {array} [toc]\n\t\t * @return {array} toc\n\t\t */\n\t\tget toc() {\n\t\t\treturn this.manifest.toc;\n\t\t}\n\n\t\tset toc(toc) {\n\t\t\tif (!toc) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.navigation.unpackToc(toc);\n\t\t\treturn this.manifest.toc = toc;\n\t\t}\n\n\t\t/**\n\t\t * Get or set the landmarks\n\t\t * @param {array} [landmarks]\n\t\t * @return {array} landmarks\n\t\t */\n\t\tget landmarks() {\n\t\t\treturn this.manifest.landmarks;\n\t\t}\n\n\t\tset landmarks(landmarks) {\n\t\t\tif (!landmarks) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.navigation.unpackLandmarks(landmarks);\n\t\t\treturn this.manifest.landmarks = landmarks;\n\t\t}\n\n\t\t/**\n\t\t * Get or set the locations\n\t\t * @param {array} [locations]\n\t\t * @return {array} locations\n\t\t */\n\t\tget locations() {\n\t\t\treturn this.manifest.locations;\n\t\t}\n\n\t\tset locations(locations) {\n\t\t\tif (!locations) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.locators.unpackLocations(locations);\n\t\t\treturn this.manifest.locations = locations;\n\t\t}\n\n\t\t/**\n\t\t * Get or set the pages\n\t\t * @param {array} [pageList]\n\t\t * @return {array} pageList\n\t\t */\n\t\tget pages() {\n\t\t\treturn this.manifest.pages;\n\t\t}\n\n\t\tset pages(pageList) {\n\t\t\tif (!pageList) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.locators.unpackPages(pageList);\n\t\t\treturn this.manifest.pages = pageList;\n\t\t}\n\n\t\t/**\n\t\t * Get or set links\n\t\t * @param {array} [links]\n\t\t * @return {array} links\n\t\t */\n\t\tget links() {\n\t\t\treturn this.manifest.links;\n\t\t}\n\n\t\tset links(links) {\n\t\t\tif (!links) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlinks.forEach((link) => {\n\t\t\t\tif (link.rel === \"cover\") {\n\t\t\t\t\tthis.cover = link.href;\n\t\t\t\t}\n\t\t\t\tif (link.rel === \"self\") {\n\t\t\t\t\tthis.path = link.href;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn this.manifest.links = links;\n\t\t}\n\n\t\t/**\n\t\t * Get or set the source of the book.\n\t\t * If returns with an object, the links in the books have been replaced\n\t\t * with service workers urls, or blob urls\n\t\t * @param {array} [links]\n\t\t * @return {array} links\n\t\t */\n\t\tget source() {\n\t\t\tlet sourceLink = this.manifest.links.find((link) => {\n\t\t\t\treturn link.rel === \"source\";\n\t\t\t});\n\t\t\treturn sourceLink;\n\t\t}\n\n\t\tset source(url) {\n\t\t\tlet sourceLink = this.manifest.links.find((link) => {\n\t\t\t\treturn link.rel === \"source\";\n\t\t\t});\n\n\t\t\tif (sourceLink) {\n\t\t\t\tsourceLink.href = url;\n\t\t\t} else {\n\t\t\t\tsourceLink = {\n\t\t\t\t\trel: \"source\",\n\t\t\t\t\thref: url,\n\t\t\t\t\ttype: \"application/epub+zip\"\n\t\t\t\t};\n\t\t\t\tthis.manifest.links.push(sourceLink);\n\t\t\t}\n\t\t\treturn sourceLink;\n\t\t}\n\n\n\t\t/**\n\t\t * Find a DOM Range for a given CFI Range\n\t\t * @param  {EpubCFI} cfiRange a epub cfi range\n\t\t * @return {Range}\n\t\t */\n\t\tgetRange(cfiRange) {\n\t\t\tvar cfi = new EpubCFI(cfiRange);\n\t\t\tvar item = this.sections.get(cfi.spinePos);\n\n\t\t\tif (!item) {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\treject(\"CFI could not be found\");\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn item.load().then(function (contents) {\n\t\t\t\tvar range = cfi.toRange(item.document);\n\t\t\t\treturn range;\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Generates the Book Key using the identifer in the manifest or other string provided\n\t\t * @param  {string} [identifier] to use instead of metadata identifier\n\t\t * @return {string} key\n\t\t */\n\t\tkey(identifier) {\n\t\t\tvar ident = identifier || this.metadata.identifier;\n\t\t\treturn `epubjs-${EPUBJS_VERSION}-${ident}`;\n\t\t}\n\n\t\t/**\n\t\t * Generates a object representation of the book structure\n\t\t * @return {object}\n\t\t */\n\t\ttoObject() {\n\t\t\treturn this.manifest;\n\t\t}\n\n\t\t/**\n\t\t * Generates a JSON output of the book structure\n\t\t */\n\t\ttoJSON(key) {\n\t\t\treturn JSON.stringify(this.manifest);\n\t\t }\n\n\t\t/**\n\t\t * Destroy the Book and all associated objects\n\t\t */\n\t\tdestroy() {\n\t\t\tthis.sections && this.sections.destroy();\n\t\t\tthis.locators && this.locators.destroy();\n\t\t\tthis.navigation && this.navigation.destroy();\n\n\t\t\tthis.sections = undefined;\n\t\t\tthis.locators = undefined;\n\t\t\tthis.navigation = undefined;\n\n\t\t\tthis.manifest = undefined;\n\t\t}\n\n\t}\n\n\t//-- Enable binding events to book\n\teventEmitter(Book.prototype);\n\n\t/**\n\t * Figures out the CSS values to apply for a layout\n\t * @class\n\t * @param {object} settings\n\t * @param {string} [settings.layout='reflowable']\n\t * @param {string} [settings.spread]\n\t * @param {int} [settings.minSpreadWidth=800]\n\t * @param {boolean} [settings.evenSpreads=false]\n\t */\n\tclass Layout {\n\t\tconstructor(settings) {\n\t\t\tthis.settings = settings;\n\t\t\tthis.name = settings.layout || \"reflowable\";\n\t\t\tthis._spread = (settings.spread === \"none\") ? false : true;\n\t\t\tthis._minSpreadWidth = settings.minSpreadWidth || 800;\n\t\t\tthis._evenSpreads = settings.evenSpreads || false;\n\n\t\t\tif (settings.flow === \"scrolled\" ||\n\t\t\t\t\tsettings.flow === \"scrolled-continuous\" ||\n\t\t\t\t\tsettings.flow === \"scrolled-doc\") {\n\t\t\t\tthis._flow = \"scrolled\";\n\t\t\t} else {\n\t\t\t\tthis._flow = \"paginated\";\n\t\t\t}\n\n\n\t\t\tthis.width = 0;\n\t\t\tthis.height = 0;\n\t\t\tthis.spreadWidth = 0;\n\t\t\tthis.delta = 0;\n\n\t\t\tthis.columnWidth = 0;\n\t\t\tthis.gap = 0;\n\t\t\tthis.divisor = 1;\n\n\t\t\tthis.props = {\n\t\t\t\tname: this.name,\n\t\t\t\tspread: this._spread,\n\t\t\t\tflow: this._flow,\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tspreadWidth: 0,\n\t\t\t\tdelta: 0,\n\t\t\t\tcolumnWidth: 0,\n\t\t\t\tgap: 0,\n\t\t\t\tdivisor: 1\n\t\t\t};\n\n\t\t}\n\n\t\t/**\n\t\t * Switch the flow between paginated and scrolled\n\t\t * @param  {string} flow paginated | scrolled\n\t\t */\n\t\tflow(flow) {\n\t\t\tif (typeof(flow) != \"undefined\") {\n\t\t\t\tif (flow === \"scrolled\" ||\n\t\t\t\t\t\tflow === \"scrolled-continuous\" ||\n\t\t\t\t\t\tflow === \"scrolled-doc\") {\n\t\t\t\t\tthis._flow = \"scrolled\";\n\t\t\t\t} else {\n\t\t\t\t\tthis._flow = \"paginated\";\n\t\t\t\t}\n\t\t\t\t// this.props.flow = this._flow;\n\t\t\t\tthis.update({flow: this._flow});\n\t\t\t}\n\t\t\treturn this._flow;\n\t\t}\n\n\t\t/**\n\t\t * Switch between using spreads or not, and set the\n\t\t * width at which they switch to single.\n\t\t * @param  {string} spread true | false\n\t\t * @param  {boolean} min integer in pixels\n\t\t */\n\t\tspread(spread, min) {\n\n\t\t\tif (spread) {\n\t\t\t\tthis._spread = (spread === \"none\") ? false : true;\n\t\t\t\t// this.props.spread = this._spread;\n\t\t\t\tthis.update({spread: this._spread});\n\t\t\t}\n\n\t\t\tif (min >= 0) {\n\t\t\t\tthis._minSpreadWidth = min;\n\t\t\t}\n\n\t\t\treturn this._spread;\n\t\t}\n\n\t\t/**\n\t\t * Calculate the dimensions of the pagination\n\t\t * @param  {number} _width  [description]\n\t\t * @param  {number} _height [description]\n\t\t * @param  {number} _gap    [description]\n\t\t */\n\t\tcalculate(_width, _height, _gap){\n\n\t\t\tvar divisor = 1;\n\t\t\tvar gap = _gap || 0;\n\n\t\t\t//-- Check the width and create even width columns\n\t\t\t// var fullWidth = Math.floor(_width);\n\t\t\tvar width = _width;\n\t\t\tvar height = _height;\n\n\t\t\tvar section = Math.floor(width / 12);\n\n\t\t\tvar columnWidth;\n\t\t\tvar spreadWidth;\n\t\t\tvar pageWidth;\n\t\t\tvar delta;\n\n\t\t\tif (this._spread && width >= this._minSpreadWidth) {\n\t\t\t\tdivisor = 2;\n\t\t\t} else {\n\t\t\t\tdivisor = 1;\n\t\t\t}\n\n\t\t\tif (this.name === \"reflowable\" && this._flow === \"paginated\" && !(_gap >= 0)) {\n\t\t\t\tgap = ((section % 2 === 0) ? section : section - 1);\n\t\t\t}\n\n\t\t\tif (this.name === \"pre-paginated\" ) {\n\t\t\t\tgap = 0;\n\t\t\t}\n\n\t\t\t//-- Double Page\n\t\t\tif(divisor > 1) {\n\t\t\t\t// width = width - gap;\n\t\t\t\t// columnWidth = (width - gap) / divisor;\n\t\t\t\t// gap = gap / divisor;\n\t\t\t\tcolumnWidth = (width / divisor) - gap;\n\t\t\t\tpageWidth = columnWidth + gap;\n\t\t\t} else {\n\t\t\t\tcolumnWidth = width;\n\t\t\t\tpageWidth = width;\n\t\t\t}\n\n\t\t\tif (this.name === \"pre-paginated\" && divisor > 1) {\n\t\t\t\twidth = columnWidth;\n\t\t\t}\n\n\t\t\tspreadWidth = (columnWidth * divisor) + gap;\n\n\t\t\tdelta = width;\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.spreadWidth = spreadWidth;\n\t\t\tthis.pageWidth = pageWidth;\n\t\t\tthis.delta = delta;\n\n\t\t\tthis.columnWidth = columnWidth;\n\t\t\tthis.gap = gap;\n\t\t\tthis.divisor = divisor;\n\n\t\t\t// this.props.width = width;\n\t\t\t// this.props.height = _height;\n\t\t\t// this.props.spreadWidth = spreadWidth;\n\t\t\t// this.props.pageWidth = pageWidth;\n\t\t\t// this.props.delta = delta;\n\t\t\t//\n\t\t\t// this.props.columnWidth = colWidth;\n\t\t\t// this.props.gap = gap;\n\t\t\t// this.props.divisor = divisor;\n\n\t\t\tthis.update({\n\t\t\t\twidth,\n\t\t\t\theight,\n\t\t\t\tspreadWidth,\n\t\t\t\tpageWidth,\n\t\t\t\tdelta,\n\t\t\t\tcolumnWidth,\n\t\t\t\tgap,\n\t\t\t\tdivisor\n\t\t\t});\n\n\t\t}\n\n\t\t/**\n\t\t * Apply Css to a Document\n\t\t * @param  {Contents} contents\n\t\t * @return {Promise}\n\t\t */\n\t\tformat(contents){\n\t\t\tvar formating;\n\n\t\t\tif (this.name === \"pre-paginated\") {\n\t\t\t\tformating = contents.fit(this.columnWidth, this.height);\n\t\t\t} else if (this._flow === \"paginated\") {\n\t\t\t\tformating = contents.columns(this.width, this.height, this.columnWidth, this.gap);\n\t\t\t} else { // scrolled\n\t\t\t\tformating = contents.size(this.width, null);\n\t\t\t}\n\n\t\t\treturn formating; // might be a promise in some View Managers\n\t\t}\n\n\t\t/**\n\t\t * Count number of pages\n\t\t * @param  {number} totalLength\n\t\t * @param  {number} pageLength\n\t\t * @return {{spreads: Number, pages: Number}}\n\t\t */\n\t\tcount(totalLength, pageLength) {\n\n\t\t\tlet spreads, pages;\n\n\t\t\tif (this.name === \"pre-paginated\") {\n\t\t\t\tspreads = 1;\n\t\t\t\tpages = 1;\n\t\t\t} else if (this._flow === \"paginated\") {\n\t\t\t\tpageLength = pageLength || this.delta;\n\t\t\t\tspreads = Math.ceil( totalLength / pageLength);\n\t\t\t\tpages = spreads * this.divisor;\n\t\t\t} else { // scrolled\n\t\t\t\tpageLength = pageLength || this.height;\n\t\t\t\tspreads = Math.ceil( totalLength / pageLength);\n\t\t\t\tpages = spreads;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tspreads,\n\t\t\t\tpages\n\t\t\t};\n\n\t\t}\n\n\t\tupdate(props) {\n\t\t\t// Remove props that haven't changed\n\t\t\tObject.keys(props).forEach((propName) => {\n\t\t\t\tif (this.props[propName] === props[propName]) {\n\t\t\t\t\tdelete props[propName];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif(Object.keys(props).length > 0) {\n\t\t\t\tlet newProps = extend(this.props, props);\n\t\t\t\tthis.emit(EVENTS.LAYOUT.UPDATED, newProps, props);\n\t\t\t}\n\t\t}\n\t}\n\n\teventEmitter(Layout.prototype);\n\n\t/**\n\t * Themes to apply to displayed content\n\t * @class\n\t * @param {Rendition} rendition\n\t */\n\tclass Themes {\n\t\tconstructor(rendition) {\n\t\t\tthis.rendition = rendition;\n\t\t\tthis._themes = {\n\t\t\t\t\"default\" : {\n\t\t\t\t\t\"rules\" : {},\n\t\t\t\t\t\"url\" : \"\",\n\t\t\t\t\t\"serialized\" : \"\"\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._overrides = {};\n\t\t\tthis._current = \"default\";\n\t\t\tthis._injected = [];\n\t\t\tthis.rendition.hooks.content.register(this.inject.bind(this));\n\t\t\tthis.rendition.hooks.content.register(this.overrides.bind(this));\n\n\t\t}\n\n\t\t/**\n\t\t * Add themes to be used by a rendition\n\t\t * @param {object | string}\n\t\t * @example themes.register(\"light\", \"http://example.com/light.css\")\n\t\t * @example themes.register(\"light\", { \"body\": { \"color\": \"purple\"}})\n\t\t * @example themes.register({ \"light\" : {...}, \"dark\" : {...}})\n\t\t */\n\t\tregister () {\n\t\t\tif (arguments.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (arguments.length === 1 && typeof(arguments[0]) === \"object\") {\n\t\t\t\treturn this.registerThemes(arguments[0]);\n\t\t\t}\n\t\t\tif (arguments.length === 1 && typeof(arguments[0]) === \"string\") {\n\t\t\t\treturn this.default(arguments[0]);\n\t\t\t}\n\t\t\tif (arguments.length === 2 && typeof(arguments[1]) === \"string\") {\n\t\t\t\treturn this.registerUrl(arguments[0], arguments[1]);\n\t\t\t}\n\t\t\tif (arguments.length === 2 && typeof(arguments[1]) === \"object\") {\n\t\t\t\treturn this.registerRules(arguments[0], arguments[1]);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Add a default theme to be used by a rendition\n\t\t * @param {object | string} theme\n\t\t * @example themes.register(\"http://example.com/default.css\")\n\t\t * @example themes.register({ \"body\": { \"color\": \"purple\"}})\n\t\t */\n\t\tdefault (theme) {\n\t\t\tif (!theme) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (typeof(theme) === \"string\") {\n\t\t\t\treturn this.registerUrl(\"default\", theme);\n\t\t\t}\n\t\t\tif (typeof(theme) === \"object\") {\n\t\t\t\treturn this.registerRules(\"default\", theme);\n\t\t\t}\n\t\t}\n\n\t\tregisterThemes (themes) {\n\t\t\tfor (var theme in themes) {\n\t\t\t\tif (themes.hasOwnProperty(theme)) {\n\t\t\t\t\tif (typeof(themes[theme]) === \"string\") {\n\t\t\t\t\t\tthis.registerUrl(theme, themes[theme]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.registerRules(theme, themes[theme]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tregisterUrl (name, input) {\n\t\t\tvar url = new Url(input);\n\t\t\tthis._themes[name] = { \"url\": url.toString() };\n\t\t\tif (this._injected[name]) {\n\t\t\t\tthis.update(name);\n\t\t\t}\n\t\t}\n\n\t\tregisterRules (name, rules) {\n\t\t\tthis._themes[name] = { \"rules\": rules };\n\t\t\t// TODO: serialize css rules\n\t\t\tif (this._injected[name]) {\n\t\t\t\tthis.update(name);\n\t\t\t}\n\t\t}\n\n\t\tselect (name) {\n\t\t\tvar prev = this._current;\n\t\t\tvar contents;\n\n\t\t\tthis._current = name;\n\t\t\tthis.update(name);\n\n\t\t\tcontents = this.rendition.getContents();\n\t\t\tcontents.forEach( (content) => {\n\t\t\t\tcontent.removeClass(prev);\n\t\t\t\tcontent.addClass(name);\n\t\t\t});\n\t\t}\n\n\t\tupdate (name) {\n\t\t\tvar contents = this.rendition.getContents();\n\t\t\tcontents.forEach( (content) => {\n\t\t\t\tthis.add(name, content);\n\t\t\t});\n\t\t}\n\n\t\tinject (contents) {\n\t\t\tvar links = [];\n\t\t\tvar themes = this._themes;\n\t\t\tvar theme;\n\n\t\t\tfor (var name in themes) {\n\t\t\t\tif (themes.hasOwnProperty(name) && (name === this._current || name === \"default\")) {\n\t\t\t\t\ttheme = themes[name];\n\t\t\t\t\tif((theme.rules && Object.keys(theme.rules).length > 0) || (theme.url && links.indexOf(theme.url) === -1)) {\n\t\t\t\t\t\tthis.add(name, contents);\n\t\t\t\t\t}\n\t\t\t\t\tthis._injected.push(name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(this._current != \"default\") {\n\t\t\t\tcontents.addClass(this._current);\n\t\t\t}\n\t\t}\n\n\t\tadd (name, contents) {\n\t\t\tvar theme = this._themes[name];\n\n\t\t\tif (!theme || !contents) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (theme.url) {\n\t\t\t\tcontents.addStylesheet(theme.url);\n\t\t\t} else if (theme.serialized) {\n\t\t\t\t// TODO: handle serialized\n\t\t\t} else if (theme.rules) {\n\t\t\t\tcontents.addStylesheetRules(theme.rules);\n\t\t\t\ttheme.injected = true;\n\t\t\t}\n\t\t}\n\n\t\toverride (name, value) {\n\t\t\tvar contents = this.rendition.getContents();\n\n\t\t\tthis._overrides[name] = value;\n\n\t\t\tcontents.forEach( (content) => {\n\t\t\t\tcontent.css(name, this._overrides[name]);\n\t\t\t});\n\t\t}\n\n\t\toverrides (contents) {\n\t\t\tvar overrides = this._overrides;\n\n\t\t\tfor (var rule in overrides) {\n\t\t\t\tif (overrides.hasOwnProperty(rule)) {\n\t\t\t\t\tcontents.css(rule, overrides[rule]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Adjust the font size of a rendition\n\t\t * @param {number} size\n\t\t */\n\t\tfontSize (size) {\n\t\t\tthis.override(\"font-size\", size);\n\t\t}\n\n\t\t/**\n\t\t * Adjust the font-family of a rendition\n\t\t * @param {string} f\n\t\t */\n\t\tfont (f) {\n\t\t\tthis.override(\"font-family\", f);\n\t\t}\n\n\t\tdestroy() {\n\t\t\tthis.rendition = undefined;\n\t\t\tthis._themes = undefined;\n\t\t\tthis._overrides = undefined;\n\t\t\tthis._current = undefined;\n\t\t\tthis._injected = undefined;\n\t\t}\n\n\t}\n\n\t/**\n\t * Map text locations to CFI ranges\n\t * @class\n\t */\n\tclass Mapping {\n\t\tconstructor(layout, direction, axis, dev) {\n\t\t\tthis.layout = layout;\n\t\t\tthis.horizontal = (axis === \"horizontal\") ? true : false;\n\t\t\tthis.direction = direction || \"ltr\";\n\t\t\tthis._dev = dev;\n\t\t}\n\n\t\t/**\n\t\t * Find CFI pairs for entire section at once\n\t\t */\n\t\tsection(view) {\n\t\t\tvar ranges = this.findRanges(view);\n\t\t\tvar map = this.rangeListToCfiList(view.section.cfiBase, ranges);\n\n\t\t\treturn map;\n\t\t}\n\n\t\t/**\n\t\t * Find CFI pairs for a page\n\t\t */\n\t\tpage(contents, cfiBase, start, end) {\n\t\t\tvar root = contents && contents.document ? contents.document.body : false;\n\t\t\tvar result;\n\n\t\t\tif (!root) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresult = this.rangePairToCfiPair(cfiBase, {\n\t\t\t\tstart: this.findStart(root, start, end),\n\t\t\t\tend: this.findEnd(root, start, end)\n\t\t\t});\n\n\t\t\tif (this._dev === true) {\n\t\t\t\tlet doc = contents.document;\n\t\t\t\tlet startRange = new EpubCFI(result.start).toRange(doc);\n\t\t\t\tlet endRange = new EpubCFI(result.end).toRange(doc);\n\n\t\t\t\tlet selection = doc.defaultView.getSelection();\n\t\t\t\tlet r = doc.createRange();\n\t\t\t\tselection.removeAllRanges();\n\t\t\t\tr.setStart(startRange.startContainer, startRange.startOffset);\n\t\t\t\tr.setEnd(endRange.endContainer, endRange.endOffset);\n\t\t\t\tselection.addRange(r);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\twalk(root, func) {\n\t\t\t// IE11 has strange issue, if root is text node IE throws exception on\n\t\t\t// calling treeWalker.nextNode(), saying\n\t\t\t// Unexpected call to method or property access instead of returing null value\n\t\t\tif(root && root.nodeType === Node.TEXT_NODE) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// safeFilter is required so that it can work in IE as filter is a function for IE\n\t\t\t// and for other browser filter is an object.\n\t\t\tvar filter = {\n\t\t\t\tacceptNode: function(node) {\n\t\t\t\t\tif (node.data.trim().length > 0) {\n\t\t\t\t\t\treturn NodeFilter.FILTER_ACCEPT;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn NodeFilter.FILTER_REJECT;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tvar safeFilter = filter.acceptNode;\n\t\t\tsafeFilter.acceptNode = filter.acceptNode;\n\n\t\t\tvar treeWalker = document.createTreeWalker(root, NodeFilter.SHOW_TEXT, safeFilter, false);\n\t\t\tvar node;\n\t\t\tvar result;\n\t\t\twhile ((node = treeWalker.nextNode())) {\n\t\t\t\tresult = func(node);\n\t\t\t\tif(result) break;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tfindRanges(view){\n\t\t\tvar columns = [];\n\t\t\tvar scrollWidth = view.contents.scrollWidth();\n\t\t\tvar spreads = Math.ceil( scrollWidth / this.layout.spreadWidth);\n\t\t\tvar count = spreads * this.layout.divisor;\n\t\t\tvar columnWidth = this.layout.columnWidth;\n\t\t\tvar gap = this.layout.gap;\n\t\t\tvar start, end;\n\n\t\t\tfor (var i = 0; i < count.pages; i++) {\n\t\t\t\tstart = (columnWidth + gap) * i;\n\t\t\t\tend = (columnWidth * (i+1)) + (gap * i);\n\t\t\t\tcolumns.push({\n\t\t\t\t\tstart: this.findStart(view.document.body, start, end),\n\t\t\t\t\tend: this.findEnd(view.document.body, start, end)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn columns;\n\t\t}\n\n\t\tfindStart(root, start, end){\n\t\t\tvar stack = [root];\n\t\t\tvar $el;\n\t\t\tvar found;\n\t\t\tvar $prev = root;\n\n\t\t\twhile (stack.length) {\n\n\t\t\t\t$el = stack.shift();\n\n\t\t\t\tfound = this.walk($el, (node) => {\n\t\t\t\t\tvar left, right, top, bottom;\n\t\t\t\t\tvar elPos;\n\n\t\t\t\t\telPos = this.getBounds(node);\n\n\t\t\t\t\tif (this.horizontal && this.direction === \"ltr\") {\n\n\t\t\t\t\t\tleft = this.horizontal ? elPos.left : elPos.top;\n\t\t\t\t\t\tright = this.horizontal ? elPos.right : elPos.bottom;\n\n\t\t\t\t\t\tif( left >= start && left <= end ) {\n\t\t\t\t\t\t\treturn node;\n\t\t\t\t\t\t} else if (right > start) {\n\t\t\t\t\t\t\treturn node;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$prev = node;\n\t\t\t\t\t\t\tstack.push(node);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if (this.horizontal && this.direction === \"rtl\") {\n\n\t\t\t\t\t\tleft = elPos.left;\n\t\t\t\t\t\tright = elPos.right;\n\n\t\t\t\t\t\tif( right <= end && right >= start ) {\n\t\t\t\t\t\t\treturn node;\n\t\t\t\t\t\t} else if (left < end) {\n\t\t\t\t\t\t\treturn node;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$prev = node;\n\t\t\t\t\t\t\tstack.push(node);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttop = elPos.top;\n\t\t\t\t\t\tbottom = elPos.bottom;\n\n\t\t\t\t\t\tif( top >= start && top <= end ) {\n\t\t\t\t\t\t\treturn node;\n\t\t\t\t\t\t} else if (bottom > start) {\n\t\t\t\t\t\t\treturn node;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$prev = node;\n\t\t\t\t\t\t\tstack.push(node);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t});\n\n\t\t\t\tif(found) {\n\t\t\t\t\treturn this.findTextStartRange(found, start, end);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Return last element\n\t\t\treturn this.findTextStartRange($prev, start, end);\n\t\t}\n\n\t\tfindEnd(root, start, end){\n\t\t\tvar stack = [root];\n\t\t\tvar $el;\n\t\t\tvar $prev = root;\n\t\t\tvar found;\n\n\t\t\twhile (stack.length) {\n\n\t\t\t\t$el = stack.shift();\n\n\t\t\t\tfound = this.walk($el, (node) => {\n\n\t\t\t\t\tvar left, right, top, bottom;\n\t\t\t\t\tvar elPos;\n\n\t\t\t\t\telPos = this.getBounds(node);\n\n\t\t\t\t\tif (this.horizontal && this.direction === \"ltr\") {\n\n\t\t\t\t\t\tleft = Math.round(elPos.left);\n\t\t\t\t\t\tright = Math.round(elPos.right);\n\n\t\t\t\t\t\tif(left > end && $prev) {\n\t\t\t\t\t\t\treturn $prev;\n\t\t\t\t\t\t} else if(right > end) {\n\t\t\t\t\t\t\treturn node;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$prev = node;\n\t\t\t\t\t\t\tstack.push(node);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if (this.horizontal && this.direction === \"rtl\") {\n\n\t\t\t\t\t\tleft = Math.round(this.horizontal ? elPos.left : elPos.top);\n\t\t\t\t\t\tright = Math.round(this.horizontal ? elPos.right : elPos.bottom);\n\n\t\t\t\t\t\tif(right < start && $prev) {\n\t\t\t\t\t\t\treturn $prev;\n\t\t\t\t\t\t} else if(left < start) {\n\t\t\t\t\t\t\treturn node;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$prev = node;\n\t\t\t\t\t\t\tstack.push(node);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttop = Math.round(elPos.top);\n\t\t\t\t\t\tbottom = Math.round(elPos.bottom);\n\n\t\t\t\t\t\tif(top > end && $prev) {\n\t\t\t\t\t\t\treturn $prev;\n\t\t\t\t\t\t} else if(bottom > end) {\n\t\t\t\t\t\t\treturn node;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$prev = node;\n\t\t\t\t\t\t\tstack.push(node);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\n\t\t\t\tif(found){\n\t\t\t\t\treturn this.findTextEndRange(found, start, end);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// end of chapter\n\t\t\treturn this.findTextEndRange($prev, start, end);\n\t\t}\n\n\n\t\tfindTextStartRange(node, start, end){\n\t\t\tvar ranges = this.splitTextNodeIntoRanges(node);\n\t\t\tvar range;\n\t\t\tvar pos;\n\t\t\tvar left, top, right;\n\n\t\t\tfor (var i = 0; i < ranges.length; i++) {\n\t\t\t\trange = ranges[i];\n\n\t\t\t\tpos = range.getBoundingClientRect();\n\n\t\t\t\tif (this.horizontal && this.direction === \"ltr\") {\n\n\t\t\t\t\tleft = pos.left;\n\t\t\t\t\tif( left >= start ) {\n\t\t\t\t\t\treturn range;\n\t\t\t\t\t}\n\n\t\t\t\t} else if (this.horizontal && this.direction === \"rtl\") {\n\n\t\t\t\t\tright = pos.right;\n\t\t\t\t\tif( right <= end ) {\n\t\t\t\t\t\treturn range;\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttop = pos.top;\n\t\t\t\t\tif( top >= start ) {\n\t\t\t\t\t\treturn range;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// prev = range;\n\n\t\t\t}\n\n\t\t\treturn ranges[0];\n\t\t}\n\n\t\tfindTextEndRange(node, start, end){\n\t\t\tvar ranges = this.splitTextNodeIntoRanges(node);\n\t\t\tvar prev;\n\t\t\tvar range;\n\t\t\tvar pos;\n\t\t\tvar left, right, top, bottom;\n\n\t\t\tfor (var i = 0; i < ranges.length; i++) {\n\t\t\t\trange = ranges[i];\n\n\t\t\t\tpos = range.getBoundingClientRect();\n\n\t\t\t\tif (this.horizontal && this.direction === \"ltr\") {\n\n\t\t\t\t\tleft = pos.left;\n\t\t\t\t\tright = pos.right;\n\n\t\t\t\t\tif(left > end && prev) {\n\t\t\t\t\t\treturn prev;\n\t\t\t\t\t} else if(right > end) {\n\t\t\t\t\t\treturn range;\n\t\t\t\t\t}\n\n\t\t\t\t} else if (this.horizontal && this.direction === \"rtl\") {\n\n\t\t\t\t\tleft = pos.left;\n\t\t\t\t\tright = pos.right;\n\n\t\t\t\t\tif(right < start && prev) {\n\t\t\t\t\t\treturn prev;\n\t\t\t\t\t} else if(left < start) {\n\t\t\t\t\t\treturn range;\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttop = pos.top;\n\t\t\t\t\tbottom = pos.bottom;\n\n\t\t\t\t\tif(top > end && prev) {\n\t\t\t\t\t\treturn prev;\n\t\t\t\t\t} else if(bottom > end) {\n\t\t\t\t\t\treturn range;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t\tprev = range;\n\n\t\t\t}\n\n\t\t\t// Ends before limit\n\t\t\treturn ranges[ranges.length-1];\n\n\t\t}\n\n\t\tsplitTextNodeIntoRanges(node, _splitter){\n\t\t\tvar ranges = [];\n\t\t\tvar textContent = node.textContent || \"\";\n\t\t\tvar text = textContent.trim();\n\t\t\tvar range;\n\t\t\tvar doc = node.ownerDocument;\n\t\t\tvar splitter = _splitter || \" \";\n\n\t\t\tvar pos = text.indexOf(splitter);\n\n\t\t\tif(pos === -1 || node.nodeType != Node.TEXT_NODE) {\n\t\t\t\trange = doc.createRange();\n\t\t\t\trange.selectNodeContents(node);\n\t\t\t\treturn [range];\n\t\t\t}\n\n\t\t\trange = doc.createRange();\n\t\t\trange.setStart(node, 0);\n\t\t\trange.setEnd(node, pos);\n\t\t\tranges.push(range);\n\t\t\trange = false;\n\n\t\t\twhile ( pos != -1 ) {\n\n\t\t\t\tpos = text.indexOf(splitter, pos + 1);\n\t\t\t\tif(pos > 0) {\n\n\t\t\t\t\tif(range) {\n\t\t\t\t\t\trange.setEnd(node, pos);\n\t\t\t\t\t\tranges.push(range);\n\t\t\t\t\t}\n\n\t\t\t\t\trange = doc.createRange();\n\t\t\t\t\trange.setStart(node, pos+1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(range) {\n\t\t\t\trange.setEnd(node, text.length);\n\t\t\t\tranges.push(range);\n\t\t\t}\n\n\t\t\treturn ranges;\n\t\t}\n\n\n\n\t\trangePairToCfiPair(cfiBase, rangePair){\n\n\t\t\tvar startRange = rangePair.start;\n\t\t\tvar endRange = rangePair.end;\n\n\t\t\tstartRange.collapse(true);\n\t\t\tendRange.collapse(false);\n\n\t\t\tlet startCfi = new EpubCFI(startRange, cfiBase).toString();\n\t\t\tlet endCfi = new EpubCFI(endRange, cfiBase).toString();\n\n\t\t\treturn {\n\t\t\t\tstart: startCfi,\n\t\t\t\tend: endCfi\n\t\t\t};\n\n\t\t}\n\n\t\trangeListToCfiList(cfiBase, columns){\n\t\t\tvar map = [];\n\t\t\tvar cifPair;\n\n\t\t\tfor (var i = 0; i < columns.length; i++) {\n\t\t\t\tcifPair = this.rangePairToCfiPair(cfiBase, columns[i]);\n\n\t\t\t\tmap.push(cifPair);\n\n\t\t\t}\n\n\t\t\treturn map;\n\t\t}\n\n\t\tgetBounds(node) {\n\t\t\tlet elPos;\n\t\t\tif(node.nodeType == Node.TEXT_NODE){\n\t\t\t\tlet elRange = document.createRange();\n\t\t\t\telRange.selectNodeContents(node);\n\t\t\t\telPos = elRange.getBoundingClientRect();\n\t\t\t} else {\n\t\t\t\telPos = node.getBoundingClientRect();\n\t\t\t}\n\t\t\treturn elPos;\n\t\t}\n\n\t\taxis(axis) {\n\t\t\tif (axis) {\n\t\t\t\tthis.horizontal = (axis === \"horizontal\") ? true : false;\n\t\t\t}\n\t\t\treturn this.horizontal;\n\t\t}\n\t}\n\n\tconst isChrome = /Chrome/.test(navigator.userAgent);\n\tconst isWebkit = !isChrome && /AppleWebKit/.test(navigator.userAgent);\n\n\tconst ELEMENT_NODE$2 = 1;\n\t// const TEXT_NODE = 3;\n\n\t/**\n\t\t* Handles DOM manipulation, queries and events for View contents\n\t\t* @class\n\t\t* @param {document} doc Document\n\t\t* @param {element} content Parent Element (typically Body)\n\t\t* @param {string} cfiBase Section component of CFIs\n\t\t* @param {number} sectionIndex Index in Spine of Conntent's Section\n\t\t*/\n\tclass Contents {\n\t\tconstructor(doc, content, cfiBase, sectionIndex) {\n\t\t\t// Blank Cfi for Parsing\n\t\t\tthis.epubcfi = new EpubCFI();\n\n\t\t\tthis.document = doc;\n\t\t\tthis.documentElement =  this.document.documentElement;\n\t\t\tthis.content = content || this.document.body;\n\t\t\tthis.window = this.document.defaultView;\n\n\t\t\tthis._size = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\n\t\t\tthis.sectionIndex = sectionIndex || 0;\n\t\t\tthis.cfiBase = cfiBase || \"\";\n\n\t\t\tthis.epubReadingSystem(\"epub.js\", ePub.VERSION);\n\n\t\t\tthis.listeners();\n\t\t}\n\n\t\t/**\n\t\t\t* Get DOM events that are listened for and passed along\n\t\t\t*/\n\t\tstatic get listenedEvents() {\n\t\t\treturn DOM_EVENTS;\n\t\t}\n\n\t\t/**\n\t\t\t* Get or Set width\n\t\t\t* @param {number} [w]\n\t\t\t* @returns {number} width\n\t\t\t*/\n\t\twidth(w) {\n\t\t\t// var frame = this.documentElement;\n\t\t\tvar frame = this.content;\n\n\t\t\tif (w && isNumber(w)) {\n\t\t\t\tw = w + \"px\";\n\t\t\t}\n\n\t\t\tif (w) {\n\t\t\t\tframe.style.width = w;\n\t\t\t\t// this.content.style.width = w;\n\t\t\t}\n\n\t\t\treturn this.window.getComputedStyle(frame)[\"width\"];\n\n\n\t\t}\n\n\t\t/**\n\t\t\t* Get or Set height\n\t\t\t* @param {number} [h]\n\t\t\t* @returns {number} height\n\t\t\t*/\n\t\theight(h) {\n\t\t\t// var frame = this.documentElement;\n\t\t\tvar frame = this.content;\n\n\t\t\tif (h && isNumber(h)) {\n\t\t\t\th = h + \"px\";\n\t\t\t}\n\n\t\t\tif (h) {\n\t\t\t\tframe.style.height = h;\n\t\t\t\t// this.content.style.height = h;\n\t\t\t}\n\n\t\t\treturn this.window.getComputedStyle(frame)[\"height\"];\n\n\t\t}\n\n\t\t/**\n\t\t\t* Get or Set width of the contents\n\t\t\t* @param {number} [w]\n\t\t\t* @returns {number} width\n\t\t\t*/\n\t\tcontentWidth(w) {\n\n\t\t\tvar content = this.content || this.document.body;\n\n\t\t\tif (w && isNumber(w)) {\n\t\t\t\tw = w + \"px\";\n\t\t\t}\n\n\t\t\tif (w) {\n\t\t\t\tcontent.style.width = w;\n\t\t\t}\n\n\t\t\treturn this.window.getComputedStyle(content)[\"width\"];\n\n\n\t\t}\n\n\t\t/**\n\t\t\t* Get or Set height of the contents\n\t\t\t* @param {number} [h]\n\t\t\t* @returns {number} height\n\t\t\t*/\n\t\tcontentHeight(h) {\n\n\t\t\tvar content = this.content || this.document.body;\n\n\t\t\tif (h && isNumber(h)) {\n\t\t\t\th = h + \"px\";\n\t\t\t}\n\n\t\t\tif (h) {\n\t\t\t\tcontent.style.height = h;\n\t\t\t}\n\n\t\t\treturn this.window.getComputedStyle(content)[\"height\"];\n\n\t\t}\n\n\t\t/**\n\t\t\t* Get the width of the text using Range\n\t\t\t* @returns {number} width\n\t\t\t*/\n\t\ttextWidth() {\n\t\t\tlet width;\n\t\t\tlet range = this.document.createRange();\n\t\t\tlet content = this.content || this.document.body;\n\t\t\tlet border = borders(content);\n\n\t\t\t// Select the contents of frame\n\t\t\trange.selectNodeContents(content);\n\n\t\t\t// get the width of the text content\n\t\t\twidth = range.getBoundingClientRect().width;\n\n\t\t\tif (border && border.width) {\n\t\t\t\twidth += border.width;\n\t\t\t}\n\n\t\t\treturn Math.round(width);\n\t\t}\n\n\t\t/**\n\t\t\t* Get the height of the text using Range\n\t\t\t* @returns {number} height\n\t\t\t*/\n\t\ttextHeight() {\n\t\t\tlet height;\n\t\t\tlet range = this.document.createRange();\n\t\t\tlet content = this.content || this.document.body;\n\t\t\tlet border = borders(content);\n\n\t\t\trange.selectNodeContents(content);\n\n\t\t\theight = range.getBoundingClientRect().height;\n\n\t\t\tif (height && border.height) {\n\t\t\t\theight += border.height;\n\t\t\t}\n\n\t\t\treturn Math.ceil(height);\n\t\t}\n\n\t\t/**\n\t\t\t* Get documentElement scrollWidth\n\t\t\t* @returns {number} width\n\t\t\t*/\n\t\tscrollWidth() {\n\t\t\tvar width = this.documentElement.scrollWidth;\n\n\t\t\treturn width;\n\t\t}\n\n\t\t/**\n\t\t\t* Get documentElement scrollHeight\n\t\t\t* @returns {number} height\n\t\t\t*/\n\t\tscrollHeight() {\n\t\t\tvar height = this.documentElement.scrollHeight;\n\n\t\t\treturn height;\n\t\t}\n\n\t\t/**\n\t\t\t* Set overflow css style of the contents\n\t\t\t* @param {string} [overflow]\n\t\t\t*/\n\t\toverflow(overflow) {\n\n\t\t\tif (overflow) {\n\t\t\t\tthis.documentElement.style.overflow = overflow;\n\t\t\t}\n\n\t\t\treturn this.window.getComputedStyle(this.documentElement)[\"overflow\"];\n\t\t}\n\n\t\t/**\n\t\t\t* Set overflowX css style of the documentElement\n\t\t\t* @param {string} [overflow]\n\t\t\t*/\n\t\toverflowX(overflow) {\n\n\t\t\tif (overflow) {\n\t\t\t\tthis.documentElement.style.overflowX = overflow;\n\t\t\t}\n\n\t\t\treturn this.window.getComputedStyle(this.documentElement)[\"overflowX\"];\n\t\t}\n\n\t\t/**\n\t\t\t* Set overflowY css style of the documentElement\n\t\t\t* @param {string} [overflow]\n\t\t\t*/\n\t\toverflowY(overflow) {\n\n\t\t\tif (overflow) {\n\t\t\t\tthis.documentElement.style.overflowY = overflow;\n\t\t\t}\n\n\t\t\treturn this.window.getComputedStyle(this.documentElement)[\"overflowY\"];\n\t\t}\n\n\t\t/**\n\t\t\t* Set Css styles on the contents element (typically Body)\n\t\t\t* @param {string} property\n\t\t\t* @param {string} value\n\t\t\t* @param {boolean} [priority] set as \"important\"\n\t\t\t*/\n\t\tcss(property, value, priority) {\n\t\t\tvar content = this.content || this.document.body;\n\n\t\t\tif (value) {\n\t\t\t\tcontent.style.setProperty(property, value, priority ? \"important\" : \"\");\n\t\t\t}\n\n\t\t\treturn this.window.getComputedStyle(content)[property];\n\t\t}\n\n\t\t/**\n\t\t\t* Get or Set the viewport element\n\t\t\t* @param {object} [options]\n\t\t\t* @param {string} [options.width]\n\t\t\t* @param {string} [options.height]\n\t\t\t* @param {string} [options.scale]\n\t\t\t* @param {string} [options.minimum]\n\t\t\t* @param {string} [options.maximum]\n\t\t\t* @param {string} [options.scalable]\n\t\t\t*/\n\t\tviewport(options) {\n\t\t\tlet $viewport = this.document.querySelector(\"meta[name='viewport']\");\n\t\t\tlet parsed = {\n\t\t\t\t\"width\": undefined,\n\t\t\t\t\"height\": undefined,\n\t\t\t\t\"scale\": undefined,\n\t\t\t\t\"minimum\": undefined,\n\t\t\t\t\"maximum\": undefined,\n\t\t\t\t\"scalable\": undefined\n\t\t\t};\n\t\t\tlet newContent = [];\n\t\t\tlet settings = {};\n\n\t\t\t/*\n\t\t\t* check for the viewport size\n\t\t\t* <meta name=\"viewport\" content=\"width=1024,height=697\" />\n\t\t\t*/\n\t\t\tif($viewport && $viewport.hasAttribute(\"content\")) {\n\t\t\t\tlet content = $viewport.getAttribute(\"content\");\n\t\t\t\tlet _width = content.match(/width\\s*=\\s*([^,]*)/);\n\t\t\t\tlet _height = content.match(/height\\s*=\\s*([^,]*)/);\n\t\t\t\tlet _scale = content.match(/initial-scale\\s*=\\s*([^,]*)/);\n\t\t\t\tlet _minimum = content.match(/minimum-scale\\s*=\\s*([^,]*)/);\n\t\t\t\tlet _maximum = content.match(/maximum-scale\\s*=\\s*([^,]*)/);\n\t\t\t\tlet _scalable = content.match(/user-scalable\\s*=\\s*([^,]*)/);\n\n\t\t\t\tif(_width && _width.length && typeof _width[1] !== \"undefined\"){\n\t\t\t\t\tparsed.width = _width[1];\n\t\t\t\t}\n\t\t\t\tif(_height && _height.length && typeof _height[1] !== \"undefined\"){\n\t\t\t\t\tparsed.height = _height[1];\n\t\t\t\t}\n\t\t\t\tif(_scale && _scale.length && typeof _scale[1] !== \"undefined\"){\n\t\t\t\t\tparsed.scale = _scale[1];\n\t\t\t\t}\n\t\t\t\tif(_minimum && _minimum.length && typeof _minimum[1] !== \"undefined\"){\n\t\t\t\t\tparsed.minimum = _minimum[1];\n\t\t\t\t}\n\t\t\t\tif(_maximum && _maximum.length && typeof _maximum[1] !== \"undefined\"){\n\t\t\t\t\tparsed.maximum = _maximum[1];\n\t\t\t\t}\n\t\t\t\tif(_scalable && _scalable.length && typeof _scalable[1] !== \"undefined\"){\n\t\t\t\t\tparsed.scalable = _scalable[1];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsettings = defaults(options || {}, parsed);\n\n\t\t\tif (options) {\n\t\t\t\tif (settings.width) {\n\t\t\t\t\tnewContent.push(\"width=\" + settings.width);\n\t\t\t\t}\n\n\t\t\t\tif (settings.height) {\n\t\t\t\t\tnewContent.push(\"height=\" + settings.height);\n\t\t\t\t}\n\n\t\t\t\tif (settings.scale) {\n\t\t\t\t\tnewContent.push(\"initial-scale=\" + settings.scale);\n\t\t\t\t}\n\n\t\t\t\tif (settings.scalable === \"no\") {\n\t\t\t\t\tnewContent.push(\"minimum-scale=\" + settings.scale);\n\t\t\t\t\tnewContent.push(\"maximum-scale=\" + settings.scale);\n\t\t\t\t\tnewContent.push(\"user-scalable=\" + settings.scalable);\n\t\t\t\t} else {\n\n\t\t\t\t\tif (settings.scalable) {\n\t\t\t\t\t\tnewContent.push(\"user-scalable=\" + settings.scalable);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (settings.minimum) {\n\t\t\t\t\t\tnewContent.push(\"minimum-scale=\" + settings.minimum);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (settings.maximum) {\n\t\t\t\t\t\tnewContent.push(\"minimum-scale=\" + settings.maximum);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!$viewport) {\n\t\t\t\t\t$viewport = this.document.createElement(\"meta\");\n\t\t\t\t\t$viewport.setAttribute(\"name\", \"viewport\");\n\t\t\t\t\tthis.document.querySelector(\"head\").appendChild($viewport);\n\t\t\t\t}\n\n\t\t\t\t$viewport.setAttribute(\"content\", newContent.join(\", \"));\n\n\t\t\t\tthis.window.scrollTo(0, 0);\n\t\t\t}\n\n\n\t\t\treturn settings;\n\t\t}\n\n\t\t/**\n\t\t * Event emitter for when the contents has expanded\n\t\t * @private\n\t\t */\n\t\texpand() {\n\t\t\tthis.emit(EVENTS.CONTENTS.EXPAND);\n\t\t}\n\n\t\t/**\n\t\t * Add DOM listeners\n\t\t * @private\n\t\t */\n\t\tlisteners() {\n\n\t\t\tthis.imageLoadListeners();\n\n\t\t\tthis.mediaQueryListeners();\n\n\t\t\t// this.fontLoadListeners();\n\n\t\t\tthis.addEventListeners();\n\n\t\t\tthis.addSelectionListeners();\n\n\t\t\t// this.transitionListeners();\n\n\t\t\tthis.resizeListeners();\n\n\t\t\t// this.resizeObservers();\n\n\t\t\tthis.linksHandler();\n\t\t}\n\n\t\t/**\n\t\t * Remove DOM listeners\n\t\t * @private\n\t\t */\n\t\tremoveListeners() {\n\n\t\t\tthis.removeEventListeners();\n\n\t\t\tthis.removeSelectionListeners();\n\n\t\t\tclearTimeout(this.expanding);\n\t\t}\n\n\t\t/**\n\t\t * Check if size of contents has changed and\n\t\t * emit 'resize' event if it has.\n\t\t * @private\n\t\t */\n\t\tresizeCheck() {\n\t\t\tlet width = this.textWidth();\n\t\t\tlet height = this.textHeight();\n\n\t\t\tif (width != this._size.width || height != this._size.height) {\n\n\t\t\t\tthis._size = {\n\t\t\t\t\twidth: width,\n\t\t\t\t\theight: height\n\t\t\t\t};\n\n\t\t\t\tthis.onResize && this.onResize(this._size);\n\t\t\t\tthis.emit(EVENTS.CONTENTS.RESIZE, this._size);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Poll for resize detection\n\t\t * @private\n\t\t */\n\t\tresizeListeners() {\n\t\t\t// Test size again\n\t\t\tclearTimeout(this.expanding);\n\n\t\t\trequestAnimationFrame(this.resizeCheck.bind(this));\n\n\t\t\tthis.expanding = setTimeout(this.resizeListeners.bind(this), 350);\n\t\t}\n\n\t\t/**\n\t\t * Use css transitions to detect resize\n\t\t * @private\n\t\t */\n\t\ttransitionListeners() {\n\t\t\tlet body = this.content;\n\n\t\t\tbody.style[\"transitionProperty\"] = \"font, font-size, font-size-adjust, font-stretch, font-variation-settings, font-weight, width, height\";\n\t\t\tbody.style[\"transitionDuration\"] = \"0.001ms\";\n\t\t\tbody.style[\"transitionTimingFunction\"] = \"linear\";\n\t\t\tbody.style[\"transitionDelay\"] = \"0\";\n\n\t\t\tthis.document.addEventListener(\"transitionend\", this.resizeCheck.bind(this));\n\t\t}\n\n\t\t/**\n\t\t * Listen for media query changes and emit 'expand' event\n\t\t * Adapted from: https://github.com/tylergaw/media-query-events/blob/master/js/mq-events.js\n\t\t * @private\n\t\t */\n\t\tmediaQueryListeners() {\n\t\t\tvar sheets = this.document.styleSheets;\n\t\t\tvar mediaChangeHandler = function(m){\n\t\t\t\tif(m.matches && !this._expanding) {\n\t\t\t\t\tsetTimeout(this.expand.bind(this), 1);\n\t\t\t\t}\n\t\t\t}.bind(this);\n\n\t\t\tfor (var i = 0; i < sheets.length; i += 1) {\n\t\t\t\tvar rules;\n\t\t\t\t// Firefox errors if we access cssRules cross-domain\n\t\t\t\ttry {\n\t\t\t\t\trules = sheets[i].cssRules;\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(!rules) return; // Stylesheets changed\n\t\t\t\tfor (var j = 0; j < rules.length; j += 1) {\n\t\t\t\t\t//if (rules[j].constructor === CSSMediaRule) {\n\t\t\t\t\tif(rules[j].media){\n\t\t\t\t\t\tvar mql = this.window.matchMedia(rules[j].media.mediaText);\n\t\t\t\t\t\tmql.addListener(mediaChangeHandler);\n\t\t\t\t\t\t//mql.onchange = mediaChangeHandler;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Use MutationObserver to listen for changes in the DOM and check for resize\n\t\t * @private\n\t\t */\n\t\tresizeObservers() {\n\t\t\t// create an observer instance\n\t\t\tthis.observer = new MutationObserver((mutations) => {\n\t\t\t\tthis.resizeCheck();\n\t\t\t});\n\n\t\t\t// configuration of the observer:\n\t\t\tlet config = { attributes: true, childList: true, characterData: true, subtree: true };\n\n\t\t\t// pass in the target node, as well as the observer options\n\t\t\tthis.observer.observe(this.document, config);\n\t\t}\n\n\t\timageLoadListeners(target) {\n\t\t\tvar images = this.document.querySelectorAll(\"img\");\n\t\t\tvar img;\n\t\t\tfor (var i = 0; i < images.length; i++) {\n\t\t\t\timg = images[i];\n\n\t\t\t\tif (typeof img.naturalWidth !== \"undefined\" &&\n\t\t\t\t\t\timg.naturalWidth === 0) {\n\t\t\t\t\timg.onload = this.expand.bind(this);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Listen for font load and check for resize when loaded\n\t\t * @private\n\t\t */\n\t\tfontLoadListeners(target) {\n\t\t\tif (!this.document || !this.document.fonts) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.document.fonts.ready.then(function () {\n\t\t\t\tthis.resizeCheck();\n\t\t\t}.bind(this));\n\n\t\t}\n\n\t\t/**\n\t\t * Get the documentElement\n\t\t * @returns {element} documentElement\n\t\t */\n\t\troot() {\n\t\t\tif(!this.document) return null;\n\t\t\treturn this.document.documentElement;\n\t\t}\n\n\t\t/**\n\t\t * Get the location offset of a EpubCFI or an #id\n\t\t * @param {string | EpubCFI} target\n\t\t * @param {string} [ignoreClass] for the cfi\n\t\t * @returns { {left: Number, top: Number }\n\t\t */\n\t\tlocationOf(target, ignoreClass) {\n\t\t\tvar position;\n\t\t\tvar targetPos = {\"left\": 0, \"top\": 0};\n\n\t\t\tif(!this.document) return targetPos;\n\n\t\t\tif(this.epubcfi.isCfiString(target)) {\n\t\t\t\tlet range = new EpubCFI(target).toRange(this.document, ignoreClass);\n\n\t\t\t\tif(range) {\n\t\t\t\t\tif (range.startContainer.nodeType === Node.ELEMENT_NODE) {\n\t\t\t\t\t\tposition = range.startContainer.getBoundingClientRect();\n\t\t\t\t\t\ttargetPos.left = position.left;\n\t\t\t\t\t\ttargetPos.top = position.top;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Webkit does not handle collapsed range bounds correctly\n\t\t\t\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=138949\n\n\t\t\t\t\t\t// Construct a new non-collapsed range\n\t\t\t\t\t\tif (isWebkit) {\n\t\t\t\t\t\t\tlet container = range.startContainer;\n\t\t\t\t\t\t\tlet newRange = new Range();\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tif (container.nodeType === ELEMENT_NODE$2) {\n\t\t\t\t\t\t\t\t\tposition = container.getBoundingClientRect();\n\t\t\t\t\t\t\t\t} else if (range.startOffset + 2 < container.length) {\n\t\t\t\t\t\t\t\t\tnewRange.setStart(container, range.startOffset);\n\t\t\t\t\t\t\t\t\tnewRange.setEnd(container, range.startOffset + 2);\n\t\t\t\t\t\t\t\t\tposition = newRange.getBoundingClientRect();\n\t\t\t\t\t\t\t\t} else if (range.startOffset - 2 > 0) {\n\t\t\t\t\t\t\t\t\tnewRange.setStart(container, range.startOffset - 2);\n\t\t\t\t\t\t\t\t\tnewRange.setEnd(container, range.startOffset);\n\t\t\t\t\t\t\t\t\tposition = newRange.getBoundingClientRect();\n\t\t\t\t\t\t\t\t} else { // empty, return the parent element\n\t\t\t\t\t\t\t\t\tposition = container.parentNode.getBoundingClientRect();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tconsole.error(e, e.stack);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tposition = range.getBoundingClientRect();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else if(typeof target === \"string\" &&\n\t\t\t\ttarget.indexOf(\"#\") > -1) {\n\n\t\t\t\tlet id = target.substring(target.indexOf(\"#\")+1);\n\t\t\t\tlet el = this.document.getElementById(id);\n\n\t\t\t\tif(el) {\n\t\t\t\t\tposition = el.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (position) {\n\t\t\t\ttargetPos.left = position.left;\n\t\t\t\ttargetPos.top = position.top;\n\t\t\t}\n\n\t\t\treturn targetPos;\n\t\t}\n\n\t\t/**\n\t\t * Append a stylesheet link to the document head\n\t\t * @param {string} src url\n\t\t */\n\t\taddStylesheet(src) {\n\t\t\treturn new Promise(function(resolve, reject){\n\t\t\t\tvar $stylesheet;\n\t\t\t\tvar ready = false;\n\n\t\t\t\tif(!this.document) {\n\t\t\t\t\tresolve(false);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Check if link already exists\n\t\t\t\t$stylesheet = this.document.querySelector(\"link[href='\"+src+\"']\");\n\t\t\t\tif ($stylesheet) {\n\t\t\t\t\tresolve(true);\n\t\t\t\t\treturn; // already present\n\t\t\t\t}\n\n\t\t\t\t$stylesheet = this.document.createElement(\"link\");\n\t\t\t\t$stylesheet.type = \"text/css\";\n\t\t\t\t$stylesheet.rel = \"stylesheet\";\n\t\t\t\t$stylesheet.href = src;\n\t\t\t\t$stylesheet.onload = $stylesheet.onreadystatechange = function() {\n\t\t\t\t\tif ( !ready && (!this.readyState || this.readyState == \"complete\") ) {\n\t\t\t\t\t\tready = true;\n\t\t\t\t\t\t// Let apply\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tresolve(true);\n\t\t\t\t\t\t}, 1);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.document.head.appendChild($stylesheet);\n\n\t\t\t}.bind(this));\n\t\t}\n\n\t\t/**\n\t\t * Append stylesheet rules to a generate stylesheet\n\t\t * Array: https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet/insertRule\n\t\t * Object: https://github.com/desirable-objects/json-to-css\n\t\t * @param {array | object} rules\n\t\t */\n\t\taddStylesheetRules(rules) {\n\t\t\tvar styleEl;\n\t\t\tvar styleSheet;\n\t\t\tvar key = \"epubjs-inserted-css\";\n\n\t\t\tif(!this.document || !rules || rules.length === 0) return;\n\n\t\t\t// Check if link already exists\n\t\t\tstyleEl = this.document.getElementById(\"#\"+key);\n\t\t\tif (!styleEl) {\n\t\t\t\tstyleEl = this.document.createElement(\"style\");\n\t\t\t\tstyleEl.id = key;\n\t\t\t}\n\n\t\t\t// Append style element to head\n\t\t\tthis.document.head.appendChild(styleEl);\n\n\t\t\t// Grab style sheet\n\t\t\tstyleSheet = styleEl.sheet;\n\n\t\t\tif (Object.prototype.toString.call(rules) === \"[object Array]\") {\n\t\t\t\tfor (var i = 0, rl = rules.length; i < rl; i++) {\n\t\t\t\t\tvar j = 1, rule = rules[i], selector = rules[i][0], propStr = \"\";\n\t\t\t\t\t// If the second argument of a rule is an array of arrays, correct our variables.\n\t\t\t\t\tif (Object.prototype.toString.call(rule[1][0]) === \"[object Array]\") {\n\t\t\t\t\t\trule = rule[1];\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var pl = rule.length; j < pl; j++) {\n\t\t\t\t\t\tvar prop = rule[j];\n\t\t\t\t\t\tpropStr += prop[0] + \":\" + prop[1] + (prop[2] ? \" !important\" : \"\") + \";\\n\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// Insert CSS Rule\n\t\t\t\t\tstyleSheet.insertRule(selector + \"{\" + propStr + \"}\", styleSheet.cssRules.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst selectors = Object.keys(rules);\n\t\t\t\tselectors.forEach((selector) => {\n\t\t\t\t\tconst definition = rules[selector];\n\t\t\t\t\tif (Array.isArray(definition)) {\n\t\t\t\t\t\tdefinition.forEach((item) => {\n\t\t\t\t\t\t\tconst _rules = Object.keys(item);\n\t\t\t\t\t\t\tconst result = _rules.map((rule) => {\n\t\t\t\t\t\t\t\treturn `${rule}:${item[rule]}`;\n\t\t\t\t\t\t\t}).join(\";\");\n\t\t\t\t\t\t\tstyleSheet.insertRule(`${selector}{${result}}`, styleSheet.cssRules.length);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst _rules = Object.keys(definition);\n\t\t\t\t\t\tconst result = _rules.map((rule) => {\n\t\t\t\t\t\t\treturn `${rule}:${definition[rule]}`;\n\t\t\t\t\t\t}).join(\";\");\n\t\t\t\t\t\tstyleSheet.insertRule(`${selector}{${result}}`, styleSheet.cssRules.length);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Append a script tag to the document head\n\t\t * @param {string} src url\n\t\t * @returns {Promise} loaded\n\t\t */\n\t\taddScript(src) {\n\n\t\t\treturn new Promise(function(resolve, reject){\n\t\t\t\tvar $script;\n\t\t\t\tvar ready = false;\n\n\t\t\t\tif(!this.document) {\n\t\t\t\t\tresolve(false);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$script = this.document.createElement(\"script\");\n\t\t\t\t$script.type = \"text/javascript\";\n\t\t\t\t$script.async = true;\n\t\t\t\t$script.src = src;\n\t\t\t\t$script.onload = $script.onreadystatechange = function() {\n\t\t\t\t\tif ( !ready && (!this.readyState || this.readyState == \"complete\") ) {\n\t\t\t\t\t\tready = true;\n\t\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\t\tresolve(true);\n\t\t\t\t\t\t}, 1);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.document.head.appendChild($script);\n\n\t\t\t}.bind(this));\n\t\t}\n\n\t\t/**\n\t\t * Add a class to the contents container\n\t\t * @param {string} className\n\t\t */\n\t\taddClass(className) {\n\t\t\tvar content;\n\n\t\t\tif(!this.document) return;\n\n\t\t\tcontent = this.content || this.document.body;\n\n\t\t\tif (content) {\n\t\t\t\tcontent.classList.add(className);\n\t\t\t}\n\n\t\t}\n\n\t\t/**\n\t\t * Remove a class from the contents container\n\t\t * @param {string} removeClass\n\t\t */\n\t\tremoveClass(className) {\n\t\t\tvar content;\n\n\t\t\tif(!this.document) return;\n\n\t\t\tcontent = this.content || this.document.body;\n\n\t\t\tif (content) {\n\t\t\t\tcontent.classList.remove(className);\n\t\t\t}\n\n\t\t}\n\n\t\t/**\n\t\t * Add DOM event listeners\n\t\t * @private\n\t\t */\n\t\taddEventListeners(){\n\t\t\tif(!this.document) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tDOM_EVENTS.forEach(function(eventName){\n\t\t\t\tthis.document.addEventListener(eventName, this.triggerEvent.bind(this), false);\n\t\t\t}, this);\n\n\t\t}\n\n\t\t/**\n\t\t * Remove DOM event listeners\n\t\t * @private\n\t\t */\n\t\tremoveEventListeners(){\n\t\t\tif(!this.document) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tDOM_EVENTS.forEach(function(eventName){\n\t\t\t\tthis.document.removeEventListener(eventName, this.triggerEvent, false);\n\t\t\t}, this);\n\n\t\t}\n\n\t\t/**\n\t\t * Emit passed browser events\n\t\t * @private\n\t\t */\n\t\ttriggerEvent(e){\n\t\t\tthis.emit(e.type, e);\n\t\t}\n\n\t\t/**\n\t\t * Add listener for text selection\n\t\t * @private\n\t\t */\n\t\taddSelectionListeners(){\n\t\t\tif(!this.document) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.document.addEventListener(\"selectionchange\", this.onSelectionChange.bind(this), false);\n\t\t}\n\n\t\t/**\n\t\t * Remove listener for text selection\n\t\t * @private\n\t\t */\n\t\tremoveSelectionListeners(){\n\t\t\tif(!this.document) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.document.removeEventListener(\"selectionchange\", this.onSelectionChange, false);\n\t\t}\n\n\t\t/**\n\t\t * Handle getting text on selection\n\t\t * @private\n\t\t */\n\t\tonSelectionChange(e){\n\t\t\tif (this.selectionEndTimeout) {\n\t\t\t\tclearTimeout(this.selectionEndTimeout);\n\t\t\t}\n\t\t\tthis.selectionEndTimeout = setTimeout(function() {\n\t\t\t\tvar selection = this.window.getSelection();\n\t\t\t\tthis.triggerSelectedEvent(selection);\n\t\t\t}.bind(this), 250);\n\t\t}\n\n\t\t/**\n\t\t * Emit event on text selection\n\t\t * @private\n\t\t */\n\t\ttriggerSelectedEvent(selection){\n\t\t\tvar range, cfirange;\n\n\t\t\tif (selection && selection.rangeCount > 0) {\n\t\t\t\trange = selection.getRangeAt(0);\n\t\t\t\tif(!range.collapsed) {\n\t\t\t\t\t// cfirange = this.section.cfiFromRange(range);\n\t\t\t\t\tcfirange = new EpubCFI(range, this.cfiBase).toString();\n\t\t\t\t\tthis.emit(EVENTS.CONTENTS.SELECTED, cfirange);\n\t\t\t\t\tthis.emit(EVENTS.CONTENTS.SELECTED_RANGE, range);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Get a Dom Range from EpubCFI\n\t\t * @param {EpubCFI} _cfi\n\t\t * @param {string} [ignoreClass]\n\t\t * @returns {Range} range\n\t\t */\n\t\trange(_cfi, ignoreClass){\n\t\t\tvar cfi = new EpubCFI(_cfi);\n\t\t\treturn cfi.toRange(this.document, ignoreClass);\n\t\t}\n\n\t\t/**\n\t\t * Get an EpubCFI from a Dom Range\n\t\t * @param {Range} range\n\t\t * @param {string} [ignoreClass]\n\t\t * @returns {EpubCFI} cfi\n\t\t */\n\t\tcfiFromRange(range, ignoreClass){\n\t\t\treturn new EpubCFI(range, this.cfiBase, ignoreClass).toString();\n\t\t}\n\n\t\t/**\n\t\t * Get an EpubCFI from a Dom node\n\t\t * @param {node} node\n\t\t * @param {string} [ignoreClass]\n\t\t * @returns {EpubCFI} cfi\n\t\t */\n\t\tcfiFromNode(node, ignoreClass){\n\t\t\treturn new EpubCFI(node, this.cfiBase, ignoreClass).toString();\n\t\t}\n\n\t\t// TODO: find where this is used - remove?\n\t\tmap(layout){\n\t\t\tvar map = new Mapping(layout);\n\t\t\treturn map.section();\n\t\t}\n\n\t\t/**\n\t\t * Size the contents to a given width and height\n\t\t * @param {number} [width]\n\t\t * @param {number} [height]\n\t\t */\n\t\tsize(width, height){\n\t\t\tvar viewport = { scale: 1.0, scalable: \"no\" };\n\n\t\t\tthis.layoutStyle(\"scrolling\");\n\n\t\t\tif (width >= 0) {\n\t\t\t\tthis.width(width);\n\t\t\t\tviewport.width = width;\n\t\t\t\tthis.css(\"padding\", \"0 \"+(width/12)+\"px\", true);\n\t\t\t}\n\n\t\t\tif (height >= 0) {\n\t\t\t\tthis.height(height);\n\t\t\t\tviewport.height = height;\n\t\t\t}\n\n\t\t\tthis.css(\"margin\", \"0\");\n\t\t\tthis.css(\"box-sizing\", \"border-box\");\n\n\n\t\t\tthis.viewport(viewport);\n\t\t}\n\n\t\t/**\n\t\t * Apply columns to the contents for pagination\n\t\t * @param {number} width\n\t\t * @param {number} height\n\t\t * @param {number} columnWidth\n\t\t * @param {number} gap\n\t\t */\n\t\tcolumns(width, height, columnWidth, gap){\n\t\t\tlet COLUMN_AXIS = prefixed(\"column-axis\");\n\t\t\tlet COLUMN_GAP = prefixed(\"column-gap\");\n\t\t\tlet COLUMN_WIDTH = prefixed(\"column-width\");\n\t\t\tlet COLUMN_FILL = prefixed(\"column-fill\");\n\n\t\t\tlet writingMode = this.writingMode();\n\t\t\tlet axis = (writingMode.indexOf(\"vertical\") === 0) ? \"vertical\" : \"horizontal\";\n\n\t\t\tthis.layoutStyle(\"paginated\");\n\n\t\t\t// Fix body width issues if rtl is only set on body element\n\t\t\tif (this.content.dir === \"rtl\") {\n\t\t\t\tthis.direction(\"rtl\");\n\t\t\t}\n\n\t\t\tthis.width(width);\n\t\t\tthis.height(height);\n\n\t\t\t// Deal with Mobile trying to scale to viewport\n\t\t\tthis.viewport({ width: width, height: height, scale: 1.0, scalable: \"no\" });\n\n\t\t\t// TODO: inline-block needs more testing\n\t\t\t// Fixes Safari column cut offs, but causes RTL issues\n\t\t\t// this.css(\"display\", \"inline-block\");\n\n\t\t\tthis.css(\"overflow-y\", \"hidden\");\n\t\t\tthis.css(\"margin\", \"0\", true);\n\n\t\t\tif (axis === \"vertical\") {\n\t\t\t\tthis.css(\"padding\", (gap / 2) + \"px 20px\", true);\n\t\t\t} else {\n\t\t\t\tthis.css(\"padding\", \"20px \" + (gap / 2) + \"px\", true);\n\t\t\t}\n\n\t\t\tthis.css(\"box-sizing\", \"border-box\");\n\t\t\tthis.css(\"max-width\", \"inherit\");\n\n\t\t\tthis.css(COLUMN_AXIS, \"horizontal\");\n\t\t\tthis.css(COLUMN_FILL, \"auto\");\n\n\t\t\tthis.css(COLUMN_GAP, gap+\"px\");\n\t\t\tthis.css(COLUMN_WIDTH, columnWidth+\"px\");\n\t\t}\n\n\t\t/**\n\t\t * Scale contents from center\n\t\t * @param {number} scale\n\t\t * @param {number} offsetX\n\t\t * @param {number} offsetY\n\t\t */\n\t\tscaler(scale, offsetX, offsetY){\n\t\t\tvar scaleStr = \"scale(\" + scale + \")\";\n\t\t\tvar translateStr = \"\";\n\t\t\t// this.css(\"position\", \"absolute\"));\n\t\t\tthis.css(\"transform-origin\", \"top left\");\n\n\t\t\tif (offsetX >= 0 || offsetY >= 0) {\n\t\t\t\ttranslateStr = \" translate(\" + (offsetX || 0 )+ \"px, \" + (offsetY || 0 )+ \"px )\";\n\t\t\t}\n\n\t\t\tthis.css(\"transform\", scaleStr + translateStr);\n\t\t}\n\n\t\t/**\n\t\t * Fit contents into a fixed width and height\n\t\t * @param {number} width\n\t\t * @param {number} height\n\t\t */\n\t\tfit(width, height){\n\t\t\tvar viewport = this.viewport();\n\t\t\tvar widthScale = width / parseInt(viewport.width);\n\t\t\tvar heightScale = height / parseInt(viewport.height);\n\t\t\tvar scale = widthScale < heightScale ? widthScale : heightScale;\n\n\t\t\tvar offsetY = (height - (viewport.height * scale)) / 2;\n\n\t\t\tthis.layoutStyle(\"paginated\");\n\n\t\t\tthis.width(width);\n\t\t\tthis.height(height);\n\t\t\tthis.overflow(\"hidden\");\n\n\t\t\t// Scale to the correct size\n\t\t\tthis.scaler(scale, 0, offsetY);\n\n\t\t\tthis.css(\"background-color\", \"transparent\");\n\t\t}\n\n\t\t/**\n\t\t * Set the direction of the text\n\t\t * @param {string} [dir=\"ltr\"] \"rtl\" | \"ltr\"\n\t\t */\n\t\tdirection(dir) {\n\t\t\tif (this.documentElement) {\n\t\t\t\tthis.documentElement.style[\"direction\"] = dir;\n\t\t\t}\n\t\t}\n\n\t\tmapPage(cfiBase, layout, start, end, dev) {\n\t\t\tvar mapping = new Mapping(layout, dev);\n\n\t\t\treturn mapping.page(this, cfiBase, start, end);\n\t\t}\n\n\t\t/**\n\t\t * Emit event when link in content is clicked\n\t\t * @private\n\t\t */\n\t\tlinksHandler() {\n\t\t\treplaceLinks(this.content, (href) => {\n\t\t\t\tthis.emit(EVENTS.CONTENTS.LINK_CLICKED, href);\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Set the writingMode of the text\n\t\t * @param {string} [mode=\"horizontal-tb\"] \"horizontal-tb\" | \"vertical-rl\" | \"vertical-lr\"\n\t\t */\n\t\twritingMode(mode) {\n\t\t\tlet WRITING_MODE = prefixed(\"writing-mode\");\n\n\t\t\tif (mode && this.documentElement) {\n\t\t\t\tthis.documentElement.style[WRITING_MODE] = mode;\n\t\t\t}\n\n\t\t\treturn this.window.getComputedStyle(this.documentElement)[WRITING_MODE] || \"\";\n\t\t}\n\n\t\t/**\n\t\t * Set the layoutStyle of the content\n\t\t * @param {string} [style=\"paginated\"] \"scrolling\" | \"paginated\"\n\t\t * @private\n\t\t */\n\t\tlayoutStyle(style) {\n\n\t\t\tif (style) {\n\t\t\t\tthis._layoutStyle = style;\n\t\t\t\tnavigator.epubReadingSystem.layoutStyle = this._layoutStyle;\n\t\t\t}\n\n\t\t\treturn this._layoutStyle || \"paginated\";\n\t\t}\n\n\t\t/**\n\t\t * Add the epubReadingSystem object to the navigator\n\t\t * @param {string} name\n\t\t * @param {string} version\n\t\t * @private\n\t\t */\n\t\tepubReadingSystem(name, version) {\n\t\t\tnavigator.epubReadingSystem = {\n\t\t\t\tname: name,\n\t\t\t\tversion: version,\n\t\t\t\tlayoutStyle: this.layoutStyle(),\n\t\t\t\thasFeature: function (feature) {\n\t\t\t\t\tswitch (feature) {\n\t\t\t\t\tcase \"dom-manipulation\":\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tcase \"layout-changes\":\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tcase \"touch-events\":\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tcase \"mouse-events\":\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tcase \"keyboard-events\":\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tcase \"spine-scripting\":\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn navigator.epubReadingSystem;\n\t\t}\n\n\t\t/**\n\t\t * Add the document identifier before\n\t\t * @param  {string} identifier\n\t\t */\n\t\taddIdentifier(identifier) {\n\t\t\tlet meta = this.document.createElement(\"meta\");\n\t\t\tmeta.setAttribute(\"name\", \"dc.relation.ispartof\");\n\t\t\tif (identifier) {\n\t\t\t\tmeta.setAttribute(\"content\", identifier);\n\t\t\t}\n\t\t\tthis.document.getElementsByTagName(\"head\")[0].appendChild(meta);\n\t\t}\n\n\t\tdestroy() {\n\t\t\t// Stop observing\n\t\t\tif(this.observer) {\n\t\t\t\tthis.observer.disconnect();\n\t\t\t}\n\n\t\t\tthis.document.removeEventListener(\"transitionend\", this.resizeCheck);\n\n\t\t\tthis.removeListeners();\n\n\t\t}\n\t}\n\n\teventEmitter(Contents.prototype);\n\n\t/**\n\t\t* Handles managing adding & removing Annotations\n\t\t* @param {Rendition} rendition\n\t\t* @class\n\t\t*/\n\tclass Annotations {\n\n\t\tconstructor (rendition) {\n\t\t\tthis.rendition = rendition;\n\t\t\tthis.highlights = [];\n\t\t\tthis.underlines = [];\n\t\t\tthis.marks = [];\n\t\t\tthis._annotations = {};\n\t\t\tthis._annotationsBySectionIndex = {};\n\n\t\t\tthis.rendition.hooks.render.register(this.inject.bind(this));\n\t\t\tthis.rendition.hooks.unloaded.register(this.clear.bind(this));\n\t\t}\n\n\t\t/**\n\t\t * Add an annotation to store\n\t\t * @param {string} type Type of annotation to add: \"highlight\", \"underline\", \"mark\"\n\t\t * @param {EpubCFI} cfiRange EpubCFI range to attach annotation to\n\t\t * @param {object} data Data to assign to annotation\n\t\t * @param {function} [cb] Callback after annotation is added\n\t\t * @returns {Annotation} annotation\n\t\t */\n\t\tadd (type, cfiRange, data, cb) {\n\t\t\tlet hash = encodeURI(cfiRange);\n\t\t\tlet cfi = new EpubCFI(cfiRange);\n\t\t\tlet sectionIndex = cfi.spinePos;\n\t\t\tlet annotation = new Annotation({\n\t\t\t\ttype,\n\t\t\t\tcfiRange,\n\t\t\t\tdata,\n\t\t\t\tsectionIndex,\n\t\t\t\tcb\n\t\t\t});\n\n\t\t\tthis._annotations[hash] = annotation;\n\n\t\t\tif (sectionIndex in this._annotationsBySectionIndex) {\n\t\t\t\tthis._annotationsBySectionIndex[sectionIndex].push(hash);\n\t\t\t} else {\n\t\t\t\tthis._annotationsBySectionIndex[sectionIndex] = [hash];\n\t\t\t}\n\n\t\t\tlet views = this.rendition.views();\n\n\t\t\tviews.forEach( (view) => {\n\t\t\t\tif (annotation.sectionIndex === view.index) {\n\t\t\t\t\tannotation.attach(view);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn annotation;\n\t\t}\n\n\t\t/**\n\t\t * Remove an annotation from store\n\t\t * @param {EpubCFI} cfiRange EpubCFI range the annotation is attached to\n\t\t * @param {string} type Type of annotation to add: \"highlight\", \"underline\", \"mark\"\n\t\t */\n\t\tremove (cfiRange, type) {\n\t\t\tlet hash = encodeURI(cfiRange);\n\n\t\t\tif (hash in this._annotations) {\n\t\t\t\tlet annotation = this._annotations[hash];\n\n\t\t\t\tif (type && annotation.type !== type) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet views = this.rendition.views();\n\t\t\t\tviews.forEach( (view) => {\n\t\t\t\t\tthis._removeFromAnnotationBySectionIndex(annotation.sectionIndex, hash);\n\t\t\t\t\tif (annotation.sectionIndex === view.index) {\n\t\t\t\t\t\tannotation.detach(view);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tdelete this._annotations[hash];\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Remove an annotations by Section Index\n\t\t * @private\n\t\t */\n\t\t_removeFromAnnotationBySectionIndex (sectionIndex, hash) {\n\t\t\tthis._annotationsBySectionIndex[sectionIndex] = this._annotationsAt(sectionIndex).filter(h => h !== hash);\n\t\t}\n\n\t\t/**\n\t\t * Get annotations by Section Index\n\t\t * @private\n\t\t */\n\t\t_annotationsAt (index) {\n\t\t\treturn this._annotationsBySectionIndex[index];\n\t\t}\n\n\n\t\t/**\n\t\t * Add a highlight to the store\n\t\t * @param {EpubCFI} cfiRange EpubCFI range to attach annotation to\n\t\t * @param {object} data Data to assign to annotation\n\t\t * @param {function} cb Callback after annotation is added\n\t\t */\n\t\thighlight (cfiRange, data, cb) {\n\t\t\tthis.add(\"highlight\", cfiRange, data, cb);\n\t\t}\n\n\t\t/**\n\t\t * Add a underline to the store\n\t\t * @param {EpubCFI} cfiRange EpubCFI range to attach annotation to\n\t\t * @param {object} data Data to assign to annotation\n\t\t * @param {function} cb Callback after annotation is added\n\t\t */\n\t\tunderline (cfiRange, data, cb) {\n\t\t\tthis.add(\"underline\", cfiRange, data, cb);\n\t\t}\n\n\t\t/**\n\t\t * Add a mark to the store\n\t\t * @param {EpubCFI} cfiRange EpubCFI range to attach annotation to\n\t\t * @param {object} data Data to assign to annotation\n\t\t * @param {function} cb Callback after annotation is added\n\t\t */\n\t\tmark (cfiRange, data, cb) {\n\t\t\tthis.add(\"mark\", cfiRange, data, cb);\n\t\t}\n\n\t\t/**\n\t\t * iterate over annotations in the store\n\t\t */\n\t\teach () {\n\t\t\treturn this._annotations.forEach.apply(this._annotations, arguments);\n\t\t}\n\n\t\t/**\n\t\t * Hook for injecting annotation into a view\n\t\t * @param {View} view\n\t\t * @private\n\t\t */\n\t\tinject (view) {\n\t\t\tlet sectionIndex = view.index;\n\t\t\tif (sectionIndex in this._annotationsBySectionIndex) {\n\t\t\t\tlet annotations = this._annotationsBySectionIndex[sectionIndex];\n\t\t\t\tannotations.forEach((hash) => {\n\t\t\t\t\tlet annotation = this._annotations[hash];\n\t\t\t\t\tannotation.attach(view);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Hook for removing annotation from a view\n\t\t * @param {View} view\n\t\t * @private\n\t\t */\n\t\tclear (view) {\n\t\t\tlet sectionIndex = view.index;\n\t\t\tif (sectionIndex in this._annotationsBySectionIndex) {\n\t\t\t\tlet annotations = this._annotationsBySectionIndex[sectionIndex];\n\t\t\t\tannotations.forEach((hash) => {\n\t\t\t\t\tlet annotation = this._annotations[hash];\n\t\t\t\t\tannotation.detach(view);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * [Not Implemented] Show annotations\n\t\t * @TODO: needs implementation in View\n\t\t */\n\t\tshow () {\n\n\t\t}\n\n\t\t/**\n\t\t * [Not Implemented] Hide annotations\n\t\t * @TODO: needs implementation in View\n\t\t */\n\t\thide () {\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Annotation object\n\t * @class\n\t * @param {object} options\n\t * @param {string} options.type Type of annotation to add: \"highlight\", \"underline\", \"mark\"\n\t * @param {EpubCFI} options.cfiRange EpubCFI range to attach annotation to\n\t * @param {object} options.data Data to assign to annotation\n\t * @param {int} options.sectionIndex Index in the Spine of the Section annotation belongs to\n\t * @param {function} [options.cb] Callback after annotation is added\n\t * @returns {Annotation} annotation\n\t */\n\tclass Annotation {\n\n\t\tconstructor ({\n\t\t\ttype,\n\t\t\tcfiRange,\n\t\t\tdata,\n\t\t\tsectionIndex,\n\t\t\tcb\n\t\t}) {\n\t\t\tthis.type = type;\n\t\t\tthis.cfiRange = cfiRange;\n\t\t\tthis.data = data;\n\t\t\tthis.sectionIndex = sectionIndex;\n\t\t\tthis.mark = undefined;\n\t\t\tthis.cb = cb;\n\t\t}\n\n\t\t/**\n\t\t * Update stored data\n\t\t * @param {object} data\n\t\t */\n\t\tupdate (data) {\n\t\t\tthis.data = data;\n\t\t}\n\n\t\t/**\n\t\t * Add to a view\n\t\t * @param {View} view\n\t\t */\n\t\tattach (view) {\n\t\t\tlet {cfiRange, data, type, cb} = this;\n\t\t\tlet result;\n\n\t\t\tif (type === \"highlight\") {\n\t\t\t\tresult = view.highlight(cfiRange, data, cb);\n\t\t\t} else if (type === \"underline\") {\n\t\t\t\tresult = view.underline(cfiRange, data, cb);\n\t\t\t} else if (type === \"mark\") {\n\t\t\t\tresult = view.mark(cfiRange, data, cb);\n\t\t\t}\n\n\t\t\tthis.mark = result;\n\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * Remove from a view\n\t\t * @param {View} view\n\t\t */\n\t\tdetach (view) {\n\t\t\tlet {cfiRange, type} = this;\n\t\t\tlet result;\n\n\t\t\tif (view) {\n\t\t\t\tif (type === \"highlight\") {\n\t\t\t\t\tresult = view.unhighlight(cfiRange);\n\t\t\t\t} else if (type === \"underline\") {\n\t\t\t\t\tresult = view.ununderline(cfiRange);\n\t\t\t\t} else if (type === \"mark\") {\n\t\t\t\t\tresult = view.unmark(cfiRange);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.mark = undefined;\n\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * [Not Implemented] Get text of an annotation\n\t\t * @TODO: needs implementation in contents\n\t\t */\n\t\ttext () {\n\n\t\t}\n\n\t}\n\n\teventEmitter(Annotation.prototype);\n\n\t/**\n\t * Find Locations for a Book\n\t * @param {Spine} spine\n\t * @param {request} request\n\t */\n\tclass Locations {\n\t\tconstructor(request, pause) {\n\t\t\tthis.request = request;\n\t\t\tthis.pause = pause || 100;\n\n\t\t\tthis.q = new Queue(this);\n\t\t\tthis.epubcfi = new EpubCFI();\n\n\t\t\tthis._locations = [];\n\t\t\tthis.total = 0;\n\n\t\t\tthis.break = 150;\n\n\t\t\tthis._current = 0;\n\n\t\t\tthis.currentLocation = \"\";\n\t\t\tthis._currentCfi = \"\";\n\t\t\tthis.processingTimeout = undefined;\n\t\t}\n\n\t\t/**\n\t\t * Load all of sections in the book to generate locations\n\t\t * @param  {int} chars how many chars to split on\n\t\t * @return {object} locations\n\t\t */\n\t\tgenerate(spine, chars) {\n\t\t\tthis.spine = spine;\n\n\t\t\tif (chars) {\n\t\t\t\tthis.break = chars;\n\t\t\t}\n\n\t\t\tthis.q.pause();\n\n\t\t\tthis.spine.each(function(section) {\n\t\t\t\tif (section.linear) {\n\t\t\t\t\tthis.q.enqueue(this.process.bind(this), section);\n\t\t\t\t}\n\t\t\t}.bind(this));\n\n\t\t\treturn this.q.run().then(function() {\n\t\t\t\tthis.total = this._locations.length - 1;\n\n\t\t\t\tif (this._currentCfi) {\n\t\t\t\t\tthis.currentLocation = this._currentCfi;\n\t\t\t\t}\n\n\t\t\t\treturn this._locations;\n\t\t\t\t// console.log(this.percentage(this.book.rendition.location.start), this.percentage(this.book.rendition.location.end));\n\t\t\t}.bind(this));\n\n\t\t}\n\n\t\tcreateRange () {\n\t\t\treturn {\n\t\t\t\tstartContainer: undefined,\n\t\t\t\tstartOffset: undefined,\n\t\t\t\tendContainer: undefined,\n\t\t\t\tendOffset: undefined\n\t\t\t};\n\t\t}\n\n\t\tprocess(section) {\n\t\t\treturn section.load(this.request)\n\t\t\t\t.then(function(contents) {\n\t\t\t\t\tvar completed = new defer();\n\n\t\t\t\t\tvar locations = this.parse(contents, section.cfiBase);\n\t\t\t\t\tthis._locations = this._locations.concat(locations);\n\n\t\t\t\t\tsection.unload();\n\n\t\t\t\t\tthis.processingTimeout = setTimeout(() => completed.resolve(locations), this.pause);\n\t\t\t\t\treturn completed.promise;\n\t\t\t\t}.bind(this));\n\n\t\t}\n\n\t\tparse(contents, cfiBase, chars) {\n\t\t\tvar locations = [];\n\t\t\tvar range;\n\t\t\tvar doc = contents.ownerDocument;\n\t\t\tvar body = qs(doc, \"body\");\n\t\t\tvar counter = 0;\n\t\t\tvar prev;\n\t\t\tvar _break = chars || this.break;\n\t\t\tvar parser = function(node) {\n\t\t\t\tvar len = node.length;\n\t\t\t\tvar dist;\n\t\t\t\tvar pos = 0;\n\n\t\t\t\tif (node.textContent.trim().length === 0) {\n\t\t\t\t\treturn false; // continue\n\t\t\t\t}\n\n\t\t\t\t// Start range\n\t\t\t\tif (counter == 0) {\n\t\t\t\t\trange = this.createRange();\n\t\t\t\t\trange.startContainer = node;\n\t\t\t\t\trange.startOffset = 0;\n\t\t\t\t}\n\n\t\t\t\tdist = _break - counter;\n\n\t\t\t\t// Node is smaller than a break,\n\t\t\t\t// skip over it\n\t\t\t\tif(dist > len){\n\t\t\t\t\tcounter += len;\n\t\t\t\t\tpos = len;\n\t\t\t\t}\n\n\n\t\t\t\twhile (pos < len) {\n\t\t\t\t\tdist = _break - counter;\n\n\t\t\t\t\tif (counter === 0) {\n\t\t\t\t\t\t// Start new range\n\t\t\t\t\t\tpos += 1;\n\t\t\t\t\t\trange = this.createRange();\n\t\t\t\t\t\trange.startContainer = node;\n\t\t\t\t\t\trange.startOffset = pos;\n\t\t\t\t\t}\n\n\t\t\t\t\t// pos += dist;\n\n\t\t\t\t\t// Gone over\n\t\t\t\t\tif(pos + dist >= len){\n\t\t\t\t\t\t// Continue counter for next node\n\t\t\t\t\t\tcounter += len - pos;\n\t\t\t\t\t\t// break\n\t\t\t\t\t\tpos = len;\n\t\t\t\t\t// At End\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Advance pos\n\t\t\t\t\t\tpos += dist;\n\n\t\t\t\t\t\t// End the previous range\n\t\t\t\t\t\trange.endContainer = node;\n\t\t\t\t\t\trange.endOffset = pos;\n\t\t\t\t\t\t// cfi = section.cfiFromRange(range);\n\t\t\t\t\t\tlet cfi = new EpubCFI(range, cfiBase).toString();\n\t\t\t\t\t\tlocations.push(cfi);\n\t\t\t\t\t\tcounter = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprev = node;\n\t\t\t};\n\n\t\t\tsprint(body, parser.bind(this));\n\n\t\t\t// Close remaining\n\t\t\tif (range && range.startContainer && prev) {\n\t\t\t\trange.endContainer = prev;\n\t\t\t\trange.endOffset = prev.length;\n\t\t\t\tlet cfi = new EpubCFI(range, cfiBase).toString();\n\t\t\t\tlocations.push(cfi);\n\t\t\t\tcounter = 0;\n\t\t\t}\n\n\t\t\treturn locations;\n\t\t}\n\n\t\t/**\n\t\t * Get a location from an EpubCFI\n\t\t * @param {EpubCFI} cfi\n\t\t * @return {number}\n\t\t */\n\t\tlocationFromCfi(cfi){\n\t\t\tlet loc;\n\t\t\tif (EpubCFI.prototype.isCfiString(cfi)) {\n\t\t\t\tcfi = new EpubCFI(cfi);\n\t\t\t}\n\t\t\t// Check if the location has not been set yet\n\t\t\tif(this._locations.length === 0) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tloc = locationOf(cfi, this._locations, this.epubcfi.compare);\n\n\t\t\tif (loc > this.total) {\n\t\t\t\treturn this.total;\n\t\t\t}\n\n\t\t\treturn loc;\n\t\t}\n\n\t\t/**\n\t\t * Get a percentage position in locations from an EpubCFI\n\t\t * @param {EpubCFI} cfi\n\t\t * @return {number}\n\t\t */\n\t\tpercentageFromCfi(cfi) {\n\t\t\tif(this._locations.length === 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// Find closest cfi\n\t\t\tvar loc = this.locationFromCfi(cfi);\n\t\t\t// Get percentage in total\n\t\t\treturn this.percentageFromLocation(loc);\n\t\t}\n\n\t\t/**\n\t\t * Get a percentage position from a location index\n\t\t * @param {number} location\n\t\t * @return {number}\n\t\t */\n\t\tpercentageFromLocation(loc) {\n\t\t\tif (!loc || !this.total) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\treturn (loc / this.total);\n\t\t}\n\n\t\t/**\n\t\t * Get an EpubCFI from location index\n\t\t * @param {number} loc\n\t\t * @return {EpubCFI} cfi\n\t\t */\n\t\tcfiFromLocation(loc){\n\t\t\tvar cfi = -1;\n\t\t\t// check that pg is an int\n\t\t\tif(typeof loc != \"number\"){\n\t\t\t\tloc = parseInt(loc);\n\t\t\t}\n\n\t\t\tif(loc >= 0 && loc < this._locations.length) {\n\t\t\t\tcfi = this._locations[loc];\n\t\t\t}\n\n\t\t\treturn cfi;\n\t\t}\n\n\t\t/**\n\t\t * Get an EpubCFI from location percentage\n\t\t * @param {number} percentage\n\t\t * @return {EpubCFI} cfi\n\t\t */\n\t\tcfiFromPercentage(percentage){\n\t\t\tlet loc;\n\t\t\tif (percentage > 1) {\n\t\t\t\tconsole.warn(\"Normalize cfiFromPercentage value to between 0 - 1\");\n\t\t\t}\n\n\t\t\t// Make sure 1 goes to very end\n\t\t\tif (percentage >= 1) {\n\t\t\t\tlet cfi = new EpubCFI(this._locations[this.total]);\n\t\t\t\tcfi.collapse();\n\t\t\t\treturn cfi.toString();\n\t\t\t}\n\n\t\t\tloc = Math.ceil(this.total * percentage);\n\t\t\treturn this.cfiFromLocation(loc);\n\t\t}\n\n\t\t/**\n\t\t * Load locations from JSON\n\t\t * @param {json} locations\n\t\t */\n\t\tload(locations){\n\t\t\tif (typeof locations === \"string\") {\n\t\t\t\tthis._locations = JSON.parse(locations);\n\t\t\t} else {\n\t\t\t\tthis._locations = locations;\n\t\t\t}\n\t\t\tthis.total = this._locations.length - 1;\n\t\t\treturn this._locations;\n\t\t}\n\n\t\t/**\n\t\t * Save locations to JSON\n\t\t * @alias toJSON\n\t\t * @return {json}\n\t\t */\n\t\tsave(){\n\t\t\treturn this.toJSON();\n\t\t}\n\n\t\tgetCurrent(){\n\t\t\treturn this._current;\n\t\t}\n\n\t\tsetCurrent(curr){\n\t\t\tvar loc;\n\n\t\t\tif(typeof curr == \"string\"){\n\t\t\t\tthis._currentCfi = curr;\n\t\t\t} else if (typeof curr == \"number\") {\n\t\t\t\tthis._current = curr;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(this._locations.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(typeof curr == \"string\"){\n\t\t\t\tloc = this.locationFromCfi(curr);\n\t\t\t\tthis._current = loc;\n\t\t\t} else {\n\t\t\t\tloc = curr;\n\t\t\t}\n\n\t\t\tthis.emit(EVENTS.LOCATIONS.CHANGED, {\n\t\t\t\tpercentage: this.percentageFromLocation(loc)\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Get the current location\n\t\t */\n\t\tget currentLocation() {\n\t\t\treturn this._current;\n\t\t}\n\n\t\t/**\n\t\t * Set the current location\n\t\t */\n\t\tset currentLocation(curr) {\n\t\t\tthis.setCurrent(curr);\n\t\t}\n\n\t\t/**\n\t\t * Locations length\n\t\t */\n\t\tlength () {\n\t\t\treturn this._locations.length;\n\t\t}\n\n\t\t/**\n\t\t * Export locations as an Array\n\t\t * @return {array}\n\t\t */\n\t\ttoArray(){\n\t\t\treturn this._locations;\n\t\t}\n\n\t\t/**\n\t\t * Export locations as JSON\n\t\t * @return {json}\n\t\t */\n\t\ttoJSON(){\n\t\t\treturn JSON.stringify(this._locations);\n\t\t}\n\n\t\tdestroy () {\n\t\t\tthis.spine = undefined;\n\t\t\tthis.request = undefined;\n\t\t\tthis.pause = undefined;\n\n\t\t\tthis.q.stop();\n\t\t\tthis.q = undefined;\n\t\t\tthis.epubcfi = undefined;\n\n\t\t\tthis._locations = undefined;\n\t\t\tthis.total = undefined;\n\n\t\t\tthis.break = undefined;\n\t\t\tthis._current = undefined;\n\n\t\t\tthis.currentLocation = undefined;\n\t\t\tthis._currentCfi = undefined;\n\t\t\tclearTimeout(this.processingTimeout);\n\t\t}\n\t}\n\n\teventEmitter(Locations.prototype);\n\n\t/**\n\t * Page List Parser\n\t * @param {document} [xml]\n\t */\n\tclass PageList {\n\t\tconstructor(xml) {\n\t\t\tthis.pages = [];\n\t\t\tthis.locations = [];\n\t\t\tthis.epubcfi = new EpubCFI();\n\n\t\t\tthis.firstPage = 0;\n\t\t\tthis.lastPage = 0;\n\t\t\tthis.totalPages = 0;\n\n\t\t\tthis.toc = undefined;\n\t\t\tthis.ncx = undefined;\n\n\t\t\tif (xml) {\n\t\t\t\tthis.pageList = this.parse(xml);\n\t\t\t}\n\n\t\t\tif(this.pageList && this.pageList.length) {\n\t\t\t\tthis.process(this.pageList);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Parse PageList Xml\n\t\t * @param  {document} xml\n\t\t */\n\t\tparse(xml) {\n\t\t\tvar html = qs(xml, \"html\");\n\t\t\tvar ncx = qs(xml, \"ncx\");\n\n\t\t\tif(html) {\n\t\t\t\treturn this.parseNav(xml);\n\t\t\t} else if(ncx){ // Not supported\n\t\t\t\t// return this.parseNcx(xml);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t}\n\n\t\t/**\n\t\t * Parse a Nav PageList\n\t\t * @private\n\t\t * @param  {document} navHtml\n\t\t * @return {PageList.item[]} list\n\t\t */\n\t\tparseNav(navHtml){\n\t\t\tvar navElement = querySelectorByType(navHtml, \"nav\", \"page-list\");\n\t\t\tvar navItems = navElement ? qsa(navElement, \"li\") : [];\n\t\t\tvar length = navItems.length;\n\t\t\tvar i;\n\t\t\tvar list = [];\n\t\t\tvar item;\n\n\t\t\tif(!navItems || length === 0) return list;\n\n\t\t\tfor (i = 0; i < length; ++i) {\n\t\t\t\titem = this.item(navItems[i]);\n\t\t\t\tlist.push(item);\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\t/**\n\t\t * Page List Item\n\t\t * @private\n\t\t * @param  {object} item\n\t\t * @return {object} pageListItem\n\t\t */\n\t\titem(item){\n\t\t\tvar content = qs(item, \"a\"),\n\t\t\t\t\thref = content.getAttribute(\"href\") || \"\",\n\t\t\t\t\ttext = content.textContent || \"\",\n\t\t\t\t\tpage = parseInt(text),\n\t\t\t\t\tisCfi = href.indexOf(\"epubcfi\"),\n\t\t\t\t\tsplit,\n\t\t\t\t\tpackageUrl,\n\t\t\t\t\tcfi;\n\n\t\t\tif(isCfi != -1) {\n\t\t\t\tsplit = href.split(\"#\");\n\t\t\t\tpackageUrl = split[0];\n\t\t\t\tcfi = split.length > 1 ? split[1] : false;\n\t\t\t\treturn {\n\t\t\t\t\t\"cfi\" : cfi,\n\t\t\t\t\t\"href\" : href,\n\t\t\t\t\t\"packageUrl\" : packageUrl,\n\t\t\t\t\t\"page\" : page\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\t\"href\" : href,\n\t\t\t\t\t\"page\" : page\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Process pageList items\n\t\t * @private\n\t\t * @param  {array} pageList\n\t\t */\n\t\tprocess(pageList){\n\t\t\tpageList.forEach(function(item){\n\t\t\t\tthis.pages.push(item.page);\n\t\t\t\tif (item.cfi) {\n\t\t\t\t\tthis.locations.push(item.cfi);\n\t\t\t\t}\n\t\t\t}, this);\n\t\t\tthis.firstPage = parseInt(this.pages[0]);\n\t\t\tthis.lastPage = parseInt(this.pages[this.pages.length-1]);\n\t\t\tthis.totalPages = this.lastPage - this.firstPage;\n\t\t}\n\n\t\t/**\n\t\t * Get a PageList result from a EpubCFI\n\t\t * @param  {string} cfi EpubCFI String\n\t\t * @return {string} page\n\t\t */\n\t\tpageFromCfi(cfi){\n\t\t\tvar pg = -1;\n\n\t\t\t// Check if the pageList has not been set yet\n\t\t\tif(this.locations.length === 0) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// TODO: check if CFI is valid?\n\n\t\t\t// check if the cfi is in the location list\n\t\t\t// var index = this.locations.indexOf(cfi);\n\t\t\tvar index = indexOfSorted$1(cfi, this.locations, this.epubcfi.compare);\n\t\t\tif(index != -1) {\n\t\t\t\tpg = this.pages[index];\n\t\t\t} else {\n\t\t\t\t// Otherwise add it to the list of locations\n\t\t\t\t// Insert it in the correct position in the locations page\n\t\t\t\t//index = EPUBJS.core.insert(cfi, this.locations, this.epubcfi.compare);\n\t\t\t\tindex = locationOf(cfi, this.locations, this.epubcfi.compare);\n\t\t\t\t// Get the page at the location just before the new one, or return the first\n\t\t\t\tpg = index-1 >= 0 ? this.pages[index-1] : this.pages[0];\n\t\t\t\tif(pg !== undefined) {\n\t\t\t\t\t// Add the new page in so that the locations and page array match up\n\t\t\t\t\t//this.pages.splice(index, 0, pg);\n\t\t\t\t} else {\n\t\t\t\t\tpg = -1;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\treturn pg;\n\t\t}\n\n\t\t/**\n\t\t * Get an EpubCFI from a Page List Item\n\t\t * @param  {string} pg\n\t\t * @return {string} cfi\n\t\t */\n\t\tcfiFromPage(pg){\n\t\t\tvar cfi = -1;\n\t\t\t// check that pg is an int\n\t\t\tif(typeof pg != \"number\"){\n\t\t\t\tpg = parseInt(pg);\n\t\t\t}\n\n\t\t\t// check if the cfi is in the page list\n\t\t\t// Pages could be unsorted.\n\t\t\tvar index = this.pages.indexOf(pg);\n\t\t\tif(index != -1) {\n\t\t\t\tcfi = this.locations[index];\n\t\t\t}\n\t\t\t// TODO: handle pages not in the list\n\t\t\treturn cfi;\n\t\t}\n\n\t\t/**\n\t\t * Get a Page from Book percentage\n\t\t * @param  {number} percent\n\t\t * @return {string} page\n\t\t */\n\t\tpageFromPercentage(percent){\n\t\t\tvar pg = Math.round(this.totalPages * percent);\n\t\t\treturn pg;\n\t\t}\n\n\t\t/**\n\t\t * Returns a value between 0 - 1 corresponding to the location of a page\n\t\t * @param  {int} pg the page\n\t\t * @return {number} percentage\n\t\t */\n\t\tpercentageFromPage(pg){\n\t\t\tvar percentage = (pg - this.firstPage) / this.totalPages;\n\t\t\treturn Math.round(percentage * 1000) / 1000;\n\t\t}\n\n\t\t/**\n\t\t * Returns a value between 0 - 1 corresponding to the location of a cfi\n\t\t * @param  {string} cfi EpubCFI String\n\t\t * @return {number} percentage\n\t\t */\n\t\tpercentageFromCfi(cfi){\n\t\t\tvar pg = this.pageFromCfi(cfi);\n\t\t\tvar percentage = this.percentageFromPage(pg);\n\t\t\treturn percentage;\n\t\t}\n\n\t\t/**\n\t\t * Export pages as an Array\n\t\t * @return {array}\n\t\t */\n\t\ttoArray(){\n\t\t\treturn this.locations;\n\t\t}\n\n\t\t/**\n\t\t * Export pages as JSON\n\t\t * @return {json}\n\t\t */\n\t\ttoJSON(){\n\t\t\treturn JSON.stringify(this.locations);\n\t\t}\n\n\t\tdestroy() {\n\t\t\tthis.pages = undefined;\n\t\t\tthis.locations = undefined;\n\t\t\tthis.epubcfi = undefined;\n\n\t\t\tthis.pageList = undefined;\n\n\t\t\tthis.toc = undefined;\n\t\t\tthis.ncx = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Handles Parsing and Accessing an Epub Container\n\t * @class\n\t * @param {document} [containerDocument] xml document\n\t */\n\tclass Container {\n\t\tconstructor(containerDocument) {\n\t\t\tthis.packagePath = \"\";\n\t\t\tthis.directory = \"\";\n\t\t\tthis.encoding = \"\";\n\n\t\t\tif (containerDocument) {\n\t\t\t\tthis.parse(containerDocument);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Parse the Container XML\n\t\t * @param  {document} containerDocument\n\t\t */\n\t\tparse(containerDocument){\n\t\t\t//-- <rootfile full-path=\"OPS/package.opf\" media-type=\"application/oebps-package+xml\"/>\n\t\t\tvar rootfile;\n\n\t\t\tif(!containerDocument) {\n\t\t\t\tthrow new Error(\"Container File Not Found\");\n\t\t\t}\n\n\t\t\trootfile = qs(containerDocument, \"rootfile\");\n\n\t\t\tif(!rootfile) {\n\t\t\t\tthrow new Error(\"No RootFile Found\");\n\t\t\t}\n\n\t\t\tthis.packagePath = rootfile.getAttribute(\"full-path\");\n\t\t\tthis.directory = path.dirname(this.packagePath);\n\t\t\tthis.encoding = containerDocument.xmlEncoding;\n\t\t}\n\n\t\tdestroy() {\n\t\t\tthis.packagePath = undefined;\n\t\t\tthis.directory = undefined;\n\t\t\tthis.encoding = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Open Packaging Format Parser\n\t * @class\n\t * @param {document} packageDocument OPF XML\n\t */\n\tclass Packaging {\n\t\tconstructor(packageDocument) {\n\t\t\tthis.manifest = {};\n\t\t\tthis.navPath = \"\";\n\t\t\tthis.ncxPath = \"\";\n\t\t\tthis.coverPath = \"\";\n\t\t\tthis.spineNodeIndex = 0;\n\t\t\tthis.spine = [];\n\t\t\tthis.metadata = {};\n\n\t\t\tif (packageDocument) {\n\t\t\t\tthis.parse(packageDocument);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Parse OPF XML\n\t\t * @param  {document} packageDocument OPF XML\n\t\t * @return {object} parsed package parts\n\t\t */\n\t\tparse(packageDocument){\n\t\t\tvar metadataNode, manifestNode, spineNode;\n\n\t\t\tif(!packageDocument) {\n\t\t\t\tthrow new Error(\"Package File Not Found\");\n\t\t\t}\n\n\t\t\tmetadataNode = qs(packageDocument, \"metadata\");\n\t\t\tif(!metadataNode) {\n\t\t\t\tthrow new Error(\"No Metadata Found\");\n\t\t\t}\n\n\t\t\tmanifestNode = qs(packageDocument, \"manifest\");\n\t\t\tif(!manifestNode) {\n\t\t\t\tthrow new Error(\"No Manifest Found\");\n\t\t\t}\n\n\t\t\tspineNode = qs(packageDocument, \"spine\");\n\t\t\tif(!spineNode) {\n\t\t\t\tthrow new Error(\"No Spine Found\");\n\t\t\t}\n\n\t\t\tthis.manifest = this.parseManifest(manifestNode);\n\t\t\tthis.navPath = this.findNavPath(manifestNode);\n\t\t\tthis.ncxPath = this.findNcxPath(manifestNode, spineNode);\n\t\t\tthis.coverPath = this.findCoverPath(packageDocument);\n\n\t\t\tthis.spineNodeIndex = indexOfElementNode(spineNode);\n\n\t\t\tthis.spine = this.parseSpine(spineNode, this.manifest);\n\n\t\t\tthis.metadata = this.parseMetadata(metadataNode);\n\n\t\t\tthis.metadata.direction = spineNode.getAttribute(\"page-progression-direction\");\n\n\n\t\t\treturn {\n\t\t\t\t\"metadata\" : this.metadata,\n\t\t\t\t\"spine\"    : this.spine,\n\t\t\t\t\"manifest\" : this.manifest,\n\t\t\t\t\"navPath\"  : this.navPath,\n\t\t\t\t\"ncxPath\"  : this.ncxPath,\n\t\t\t\t\"coverPath\": this.coverPath,\n\t\t\t\t\"spineNodeIndex\" : this.spineNodeIndex\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Parse Metadata\n\t\t * @private\n\t\t * @param  {document} xml\n\t\t * @return {object} metadata\n\t\t */\n\t\tparseMetadata(xml){\n\t\t\tvar metadata = {};\n\n\n\t\t\tmetadata.title = this.getElementText(xml, \"title\");\n\t\t\tmetadata.creator = this.getElementText(xml, \"creator\");\n\t\t\tmetadata.description = this.getElementText(xml, \"description\");\n\n\t\t\tmetadata.pubdate = this.getElementText(xml, \"date\");\n\n\t\t\tmetadata.publisher = this.getElementText(xml, \"publisher\");\n\n\t\t\tmetadata.identifier = this.getElementText(xml, \"identifier\");\n\t\t\tmetadata.language = this.getElementText(xml, \"language\");\n\t\t\tmetadata.rights = this.getElementText(xml, \"rights\");\n\n\t\t\tmetadata.modified_date = this.getPropertyText(xml, \"dcterms:modified\");\n\n\t\t\tmetadata.layout = this.getPropertyText(xml, \"rendition:layout\");\n\t\t\tmetadata.orientation = this.getPropertyText(xml, \"rendition:orientation\");\n\t\t\tmetadata.flow = this.getPropertyText(xml, \"rendition:flow\");\n\t\t\tmetadata.viewport = this.getPropertyText(xml, \"rendition:viewport\");\n\n\t\t\treturn metadata;\n\t\t}\n\n\t\t/**\n\t\t * Parse Manifest\n\t\t * @private\n\t\t * @param  {document} manifestXml\n\t\t * @return {object} manifest\n\t\t */\n\t\tparseManifest(manifestXml){\n\t\t\tvar manifest = {};\n\n\t\t\t//-- Turn items into an array\n\t\t\tvar selected = qsa(manifestXml, \"item\");\n\t\t\tvar items = Array.prototype.slice.call(selected);\n\n\t\t\t//-- Create an object with the id as key\n\t\t\titems.forEach(function(item){\n\t\t\t\tvar id = item.getAttribute(\"id\"),\n\t\t\t\t\t\thref = item.getAttribute(\"href\") || \"\",\n\t\t\t\t\t\ttype$$1 = item.getAttribute(\"media-type\") || \"\",\n\t\t\t\t\t\tproperties = item.getAttribute(\"properties\") || \"\";\n\n\t\t\t\tmanifest[id] = {\n\t\t\t\t\t\"href\" : href,\n\t\t\t\t\t\"type\" : type$$1,\n\t\t\t\t\t\"properties\" : properties.length ? properties.split(\" \") : [],\n\t\t\t\t};\n\n\t\t\t});\n\n\t\t\treturn manifest;\n\n\t\t}\n\n\t\t/**\n\t\t * Parse Spine\n\t\t * @param  {document} spineXml\n\t\t * @param  {Packaging.manifest} manifest\n\t\t * @return {object} spine\n\t\t */\n\t\tparseSpine(spineXml, manifest){\n\t\t\tvar spine = [];\n\n\t\t\tvar selected = qsa(spineXml, \"itemref\");\n\t\t\tvar items = Array.prototype.slice.call(selected);\n\n\t\t\t// var epubcfi = new EpubCFI();\n\n\t\t\t//-- Add to array to mantain ordering and cross reference with manifest\n\t\t\titems.forEach(function(item, index){\n\t\t\t\tvar idref = item.getAttribute(\"idref\");\n\t\t\t\t// var cfiBase = epubcfi.generateChapterComponent(spineNodeIndex, index, Id);\n\t\t\t\tvar props = item.getAttribute(\"properties\") || \"\";\n\t\t\t\tvar propArray = props.length ? props.split(\" \") : [];\n\t\t\t\t// var manifestProps = manifest[Id].properties;\n\t\t\t\t// var manifestPropArray = manifestProps.length ? manifestProps.split(\" \") : [];\n\n\t\t\t\tvar itemref = {\n\t\t\t\t\t\"idref\" : idref,\n\t\t\t\t\t\"linear\" : item.getAttribute(\"linear\") || \"yes\",\n\t\t\t\t\t\"properties\" : propArray,\n\t\t\t\t\t// \"href\" : manifest[Id].href,\n\t\t\t\t\t// \"url\" :  manifest[Id].url,\n\t\t\t\t\t\"index\" : index\n\t\t\t\t\t// \"cfiBase\" : cfiBase\n\t\t\t\t};\n\t\t\t\tspine.push(itemref);\n\t\t\t});\n\n\t\t\treturn spine;\n\t\t}\n\n\t\t/**\n\t\t * Find TOC NAV\n\t\t * @private\n\t\t */\n\t\tfindNavPath(manifestNode){\n\t\t\t// Find item with property \"nav\"\n\t\t\t// Should catch nav irregardless of order\n\t\t\tvar node = qsp(manifestNode, \"item\", {\"properties\":\"nav\"});\n\t\t\treturn node ? node.getAttribute(\"href\") : false;\n\t\t}\n\n\t\t/**\n\t\t * Find TOC NCX\n\t\t * media-type=\"application/x-dtbncx+xml\" href=\"toc.ncx\"\n\t\t * @private\n\t\t */\n\t\tfindNcxPath(manifestNode, spineNode){\n\t\t\tvar node = qsp(manifestNode, \"item\", {\"media-type\":\"application/x-dtbncx+xml\"});\n\t\t\tvar tocId;\n\n\t\t\t// If we can't find the toc by media-type then try to look for id of the item in the spine attributes as\n\t\t\t// according to http://www.idpf.org/epub/20/spec/OPF_2.0.1_draft.htm#Section2.4.1.2,\n\t\t\t// \"The item that describes the NCX must be referenced by the spine toc attribute.\"\n\t\t\tif (!node) {\n\t\t\t\ttocId = spineNode.getAttribute(\"toc\");\n\t\t\t\tif(tocId) {\n\t\t\t\t\t// node = manifestNode.querySelector(\"item[id='\" + tocId + \"']\");\n\t\t\t\t\tnode = manifestNode.getElementById(tocId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn node ? node.getAttribute(\"href\") : false;\n\t\t}\n\n\t\t/**\n\t\t * Find the Cover Path\n\t\t * <item properties=\"cover-image\" id=\"ci\" href=\"cover.svg\" media-type=\"image/svg+xml\" />\n\t\t * Fallback for Epub 2.0\n\t\t * @param  {document} packageXml\n\t\t * @return {string} href\n\t\t */\n\t\tfindCoverPath(packageXml){\n\t\t\tvar pkg = qs(packageXml, \"package\");\n\t\t\tvar epubVersion = pkg.getAttribute(\"version\");\n\n\t\t\tif (epubVersion === \"2.0\") {\n\t\t\t\tvar metaCover = qsp(packageXml, \"meta\", {\"name\":\"cover\"});\n\t\t\t\tif (metaCover) {\n\t\t\t\t\tvar coverId = metaCover.getAttribute(\"content\");\n\t\t\t\t\tvar cover = packageXml.getElementById(coverId);\n\t\t\t\t\treturn cover ? cover.getAttribute(\"href\") : \"\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar node = qsp(packageXml, \"item\", {\"properties\":\"cover-image\"});\n\t\t\t\treturn node ? node.getAttribute(\"href\") : \"\";\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Get text of a namespaced element\n\t\t * @private\n\t\t * @param  {document} xml\n\t\t * @param  {string} tag\n\t\t * @return {string} text\n\t\t */\n\t\tgetElementText(xml, tag){\n\t\t\tvar found = xml.getElementsByTagNameNS(\"http://purl.org/dc/elements/1.1/\", tag);\n\t\t\tvar el;\n\n\t\t\tif(!found || found.length === 0) return \"\";\n\n\t\t\tel = found[0];\n\n\t\t\tif(el.childNodes.length){\n\t\t\t\treturn el.childNodes[0].nodeValue;\n\t\t\t}\n\n\t\t\treturn \"\";\n\n\t\t}\n\n\t\t/**\n\t\t * Get text by property\n\t\t * @private\n\t\t * @param  {document} xml\n\t\t * @param  {string} property\n\t\t * @return {string} text\n\t\t */\n\t\tgetPropertyText(xml, property){\n\t\t\tvar el = qsp(xml, \"meta\", {\"property\":property});\n\n\t\t\tif(el && el.childNodes.length){\n\t\t\t\treturn el.childNodes[0].nodeValue;\n\t\t\t}\n\n\t\t\treturn \"\";\n\t\t}\n\n\t\t/**\n\t\t * Load JSON Manifest\n\t\t * @param  {document} packageDocument OPF XML\n\t\t * @return {object} parsed package parts\n\t\t */\n\t\tload(json) {\n\t\t\tthis.metadata = json.metadata;\n\n\t\t\tthis.spine = json.spine.map((item, index) =>{\n\t\t\t\tlet id = item.idref;\n\n\t\t\t\tif (!id) {\n\t\t\t\t\titem.idref = encodeURIComponent(item.href);\n\t\t\t\t}\n\n\t\t\t\tif (typeof(item.linear) === \"undefined\") {\n\t\t\t\t\titem.linear = \"yes\";\n\t\t\t\t}\n\n\t\t\t\tif (item.rel && item.rel[0] === \"cover\") {\n\t\t\t\t\tthis.coverPath = item.href;\n\t\t\t\t}\n\n\t\t\t\titem.index = index;\n\t\t\t\tthis.manifest[item.idref] = item;\n\n\t\t\t\treturn item;\n\t\t\t});\n\n\t\t\tif (json.resources) {\n\t\t\t\tjson.resources.forEach(item => {\n\t\t\t\t\tlet id = item.id || item.href;\n\n\t\t\t\t\tthis.manifest[id] = item;\n\n\t\t\t\t\tif (item.rel && item.rel[0] === \"cover\") {\n\t\t\t\t\t\tthis.coverPath = item.href;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.spineNodeIndex = 0;\n\n\t\t\tthis.toc = json.toc;\n\n\t\t\treturn {\n\t\t\t\t\"metadata\" : this.metadata,\n\t\t\t\t\"spine\"    : this.spine,\n\t\t\t\t\"manifest\" : this.manifest,\n\t\t\t\t\"navPath\"  : this.navPath,\n\t\t\t\t\"ncxPath\"  : this.ncxPath,\n\t\t\t\t\"coverPath\": this.coverPath,\n\t\t\t\t\"spineNodeIndex\" : this.spineNodeIndex,\n\t\t\t\t\"toc\" : this.toc\n\t\t\t};\n\t\t}\n\n\t\tdestroy() {\n\t\t\tthis.manifest = undefined;\n\t\t\tthis.navPath = undefined;\n\t\t\tthis.ncxPath = undefined;\n\t\t\tthis.coverPath = undefined;\n\t\t\tthis.spineNodeIndex = undefined;\n\t\t\tthis.spine = undefined;\n\t\t\tthis.metadata = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Navigation Parser\n\t * @param {document} xml navigation html / xhtml / ncx\n\t */\n\tclass Navigation$1 {\n\t\tconstructor(xml, url) {\n\t\t\tthis.toc = [];\n\t\t\tthis.tocByHref = {};\n\t\t\tthis.tocById = {};\n\n\t\t\tthis.landmarks = [];\n\t\t\tthis.landmarksByType = {};\n\n\t\t\tthis.length = 0;\n\n\t\t\tthis.url = url || \"\";\n\n\t\t\tif (xml) {\n\t\t\t\tthis.parse(xml);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Parse out the navigation items\n\t\t * @param {document} xml navigation html / xhtml / ncx\n\t\t */\n\t\tparse(xml) {\n\t\t\tlet isXml$$1 = xml.nodeType;\n\t\t\tlet html;\n\t\t\tlet ncx;\n\n\t\t\tif (isXml$$1) {\n\t\t\t\thtml = qs(xml, \"html\");\n\t\t\t\tncx = qs(xml, \"ncx\");\n\t\t\t}\n\n\t\t\tif (!isXml$$1) {\n\t\t\t\tthis.toc = this.load(xml);\n\t\t\t} else if(html) {\n\t\t\t\tthis.toc = this.parseNav(xml);\n\t\t\t\tthis.landmarks = this.parseLandmarks(xml);\n\t\t\t} else if(ncx){\n\t\t\t\tthis.toc = this.parseNcx(xml);\n\t\t\t}\n\n\t\t\tthis.length = 0;\n\n\t\t\tthis.unpack(this.toc);\n\t\t}\n\n\t\t/**\n\t\t * Unpack navigation items\n\t\t * @private\n\t\t * @param  {array} toc\n\t\t */\n\t\tunpack(toc) {\n\t\t\tvar item;\n\t\t\tvar href;\n\n\t\t\tfor (var i = 0; i < toc.length; i++) {\n\t\t\t\titem = toc[i];\n\t\t\t\thref = item.href;\n\n\t\t\t\tif (item.href) {\n\t\t\t\t\tthis.tocByHref[href] = i;\n\t\t\t\t}\n\n\t\t\t\tif (item.id) {\n\t\t\t\t\tthis.tocById[href] = i;\n\t\t\t\t}\n\n\t\t\t\tthis.length++;\n\n\t\t\t\tif (item.children.length) {\n\t\t\t\t\tthis.unpack(item.children);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\t/**\n\t\t * Get an item from the navigation\n\t\t * @param  {string} target\n\t\t * @return {object} navItems\n\t\t */\n\t\tget(target) {\n\t\t\tvar index;\n\n\t\t\tif(!target) {\n\t\t\t\treturn this.toc;\n\t\t\t}\n\n\t\t\tif(target.indexOf(\"#\") === 0) {\n\t\t\t\tindex = this.tocById[target.substring(1)];\n\t\t\t} else if(target in this.tocByHref){\n\t\t\t\tindex = this.tocByHref[target];\n\t\t\t}\n\n\t\t\treturn this.toc[index];\n\t\t}\n\n\t\t/**\n\t\t * Get a landmark by type\n\t\t * List of types: https://idpf.github.io/epub-vocabs/structure/\n\t\t * @param  {string} type\n\t\t * @return {object} landmarkItems\n\t\t */\n\t\tlandmark(type$$1) {\n\t\t\tvar index;\n\n\t\t\tif(!type$$1) {\n\t\t\t\treturn this.landmarks;\n\t\t\t}\n\n\t\t\tindex = this.landmarksByType[type$$1];\n\n\t\t\treturn this.landmarks[index];\n\t\t}\n\n\t\t/**\n\t\t * Parse toc from a Epub > 3.0 Nav\n\t\t * @private\n\t\t * @param  {document} navHtml\n\t\t * @return {array} navigation list\n\t\t */\n\t\tparseNav(navHtml){\n\t\t\tvar navElement = querySelectorByType(navHtml, \"nav\", \"toc\");\n\t\t\tvar navItems = navElement ? qsa(navElement, \"li\") : [];\n\t\t\tvar length = navItems.length;\n\t\t\tvar i;\n\t\t\tvar toc = {};\n\t\t\tvar list = [];\n\t\t\tvar item, parent;\n\n\t\t\tif(!navItems || length === 0) return list;\n\n\t\t\tfor (i = 0; i < length; ++i) {\n\t\t\t\titem = this.navItem(navItems[i]);\n\t\t\t\tif (item) {\n\t\t\t\t\ttoc[item.id] = item;\n\t\t\t\t\tif(!item.parentIndex) {\n\t\t\t\t\t\tlist.push(item);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparent = toc[item.parent];\n\t\t\t\t\t\tparent.children.push(item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\t/**\n\t\t * Create a navItem\n\t\t * @private\n\t\t * @param  {element} item\n\t\t * @return {object} navItem\n\t\t */\n\t\tnavItem(item){\n\t\t\tlet id = item.getAttribute(\"id\") || undefined;\n\t\t\tlet content = filterChildren(item, \"a\", true);\n\n\t\t\tif (!content) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(!id) {\n\t\t\t\tid = 'epubjs-autogen-toc-id-' + uuid();\n\t\t\t\titem.setAttribute('id', id);\n\t\t\t}\n\n\t\t\tlet href = content.getAttribute(\"href\") || \"\";\n\t\t\tlet title = content.textContent || \"\";\n\t\t\tlet children = [];\n\t\t\tlet parentItem = getParentByTagName(item, \"li\");\n\t\t\tlet parent;\n\n\t\t\tlet split = href.split(\"#\");\n\t\t\tif (split[0] === \"\") {\n\t\t\t\thref = this.url + href;\n\t\t\t}\n\n\t\t\tif (parentItem) {\n\t\t\t\tparent = parentItem.getAttribute(\"id\");\n\t\t\t}\n\n\t\t\twhile (!parent && parentItem) {\n\t\t\t\tparentItem = getParentByTagName(parentItem, \"li\");\n\t\t\t\tif (parentItem) {\n\t\t\t\t\tparent = parentItem.getAttribute(\"id\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tid,\n\t\t\t\thref,\n\t\t\t\ttitle,\n\t\t\t\tchildren,\n\t\t\t\tparent\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Parse landmarks from a Epub > 3.0 Nav\n\t\t * @private\n\t\t * @param  {document} navHtml\n\t\t * @return {array} landmarks list\n\t\t */\n\t\tparseLandmarks(navHtml){\n\t\t\tvar navElement = querySelectorByType(navHtml, \"nav\", \"landmarks\");\n\t\t\tvar navItems = navElement ? qsa(navElement, \"li\") : [];\n\t\t\tvar length = navItems.length;\n\t\t\tvar i;\n\t\t\tvar list = [];\n\t\t\tvar item;\n\n\t\t\tif(!navItems || length === 0) return list;\n\n\t\t\tfor (i = 0; i < length; ++i) {\n\t\t\t\titem = this.landmarkItem(navItems[i]);\n\t\t\t\tif (item) {\n\t\t\t\t\tlist.push(item);\n\t\t\t\t\tthis.landmarksByType[item.type] = i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\t/**\n\t\t * Create a landmarkItem\n\t\t * @private\n\t\t * @param  {element} item\n\t\t * @return {object} landmarkItem\n\t\t */\n\t\tlandmarkItem(item){\n\t\t\tlet content = filterChildren(item, \"a\", true);\n\n\t\t\tif (!content) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet type$$1 = content.getAttributeNS(\"http://www.idpf.org/2007/ops\", \"type\") || undefined;\n\t\t\tlet href = content.getAttribute(\"href\") || \"\";\n\t\t\tlet title = content.textContent || \"\";\n\n\t\t\tlet split = href.split(\"#\");\n\t\t\tif (split[0] === \"\") {\n\t\t\t\thref = this.url + href;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\thref,\n\t\t\t\ttitle,\n\t\t\t\ttype: type$$1\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Parse from a Epub > 3.0 NC\n\t\t * @private\n\t\t * @param  {document} navHtml\n\t\t * @return {array} navigation list\n\t\t */\n\t\tparseNcx(tocXml){\n\t\t\tvar navPoints = qsa(tocXml, \"navPoint\");\n\t\t\tvar length = navPoints.length;\n\t\t\tvar i;\n\t\t\tvar toc = {};\n\t\t\tvar list = [];\n\t\t\tvar item, parent;\n\n\t\t\tif(!navPoints || length === 0) return list;\n\n\t\t\tfor (i = 0; i < length; ++i) {\n\t\t\t\titem = this.ncxItem(navPoints[i]);\n\t\t\t\ttoc[item.id] = item;\n\t\t\t\tif(!item.parent) {\n\t\t\t\t\tlist.push(item);\n\t\t\t\t} else {\n\t\t\t\t\tparent = toc[item.parent];\n\t\t\t\t\tparent.children.push(item);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\t/**\n\t\t * Create a ncxItem\n\t\t * @private\n\t\t * @param  {element} item\n\t\t * @return {object} ncxItem\n\t\t */\n\t\tncxItem(item){\n\t\t\tvar id = item.getAttribute(\"id\") || false,\n\t\t\t\t\tcontent = qs(item, \"content\"),\n\t\t\t\t\thref = content.getAttribute(\"src\"),\n\t\t\t\t\tnavLabel = qs(item, \"navLabel\"),\n\t\t\t\t\ttitle = navLabel.textContent ? navLabel.textContent : \"\",\n\t\t\t\t\tchildren = [],\n\t\t\t\t\tparentNode = item.parentNode,\n\t\t\t\t\tparent;\n\n\t\t\tif(parentNode && parentNode.nodeName === \"navPoint\") {\n\t\t\t\tparent = parentNode.getAttribute(\"id\");\n\t\t\t}\n\n\t\t\tif(!id) {\n\t\t\t\tid = 'epubjs-autogen-toc-id-' + uuid();\n\t\t\t\titem.setAttribute('id', id);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tid,\n\t\t\t\thref,\n\t\t\t\ttitle,\n\t\t\t\tchildren,\n\t\t\t\tparent\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Load Spine Items\n\t\t * @param  {object} json the items to be loaded\n\t\t */\n\t\tload(json) {\n\t\t\treturn json.map((item) => {\n\t\t\t\tif (item.children) {\n\t\t\t\t\titem.children = this.load(item.children);\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * forEach pass through\n\t\t * @param  {Function} fn function to run on each item\n\t\t * @return {method} forEach loop\n\t\t */\n\t\tforEach(fn) {\n\t\t\treturn this.toc.forEach(fn);\n\t\t}\n\n\t\t/**\n\t\t * Get an Array of all Table of Contents Items\n\t\t */\n\t\tgetTocArray(resolver) {\n\t\t\treturn this.toc.map((item) => {\n\t\t\t\tlet url = resolver ? resolver(item.href) : item.href;\n\n\t\t\t\tlet obj = {\n\t\t\t\t\thref: url,\n\t\t\t\t\ttitle: item.title\n\t\t\t\t};\n\n\t\t\t\tif (item.children.length) {\n\t\t\t\t\tobj.children = item.children;\n\t\t\t\t}\n\n\t\t\t\treturn obj;\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Get an Array of all landmarks\n\t\t */\n\t\tgetLandmarksArray(resolver) {\n\t\t\treturn this.landmarks.map((item) => {\n\t\t\t\tlet url = resolver ? resolver(item.href) : item.href;\n\n\t\t\t\tlet obj = {\n\t\t\t\t\thref: url,\n\t\t\t\t\ttitle: item.title,\n\t\t\t\t\ttype: item.type\n\t\t\t\t};\n\n\t\t\t\treturn obj;\n\t\t\t});\n\t\t}\n\t}\n\n\t/*\n\t From Zip.js, by Gildas Lormeau\n\tedited down\n\t */\n\n\tvar table = {\n\t\t\"application\" : {\n\t\t\t\"ecmascript\" : [ \"es\", \"ecma\" ],\n\t\t\t\"javascript\" : \"js\",\n\t\t\t\"ogg\" : \"ogx\",\n\t\t\t\"pdf\" : \"pdf\",\n\t\t\t\"postscript\" : [ \"ps\", \"ai\", \"eps\", \"epsi\", \"epsf\", \"eps2\", \"eps3\" ],\n\t\t\t\"rdf+xml\" : \"rdf\",\n\t\t\t\"smil\" : [ \"smi\", \"smil\" ],\n\t\t\t\"xhtml+xml\" : [ \"xhtml\", \"xht\" ],\n\t\t\t\"xml\" : [ \"xml\", \"xsl\", \"xsd\", \"opf\", \"ncx\" ],\n\t\t\t\"zip\" : \"zip\",\n\t\t\t\"x-httpd-eruby\" : \"rhtml\",\n\t\t\t\"x-latex\" : \"latex\",\n\t\t\t\"x-maker\" : [ \"frm\", \"maker\", \"frame\", \"fm\", \"fb\", \"book\", \"fbdoc\" ],\n\t\t\t\"x-object\" : \"o\",\n\t\t\t\"x-shockwave-flash\" : [ \"swf\", \"swfl\" ],\n\t\t\t\"x-silverlight\" : \"scr\",\n\t\t\t\"epub+zip\" : \"epub\",\n\t\t\t\"font-tdpfr\" : \"pfr\",\n\t\t\t\"inkml+xml\" : [ \"ink\", \"inkml\" ],\n\t\t\t\"json\" : \"json\",\n\t\t\t\"jsonml+json\" : \"jsonml\",\n\t\t\t\"mathml+xml\" : \"mathml\",\n\t\t\t\"metalink+xml\" : \"metalink\",\n\t\t\t\"mp4\" : \"mp4s\",\n\t\t\t// \"oebps-package+xml\" : \"opf\",\n\t\t\t\"omdoc+xml\" : \"omdoc\",\n\t\t\t\"oxps\" : \"oxps\",\n\t\t\t\"vnd.amazon.ebook\" : \"azw\",\n\t\t\t\"widget\" : \"wgt\",\n\t\t\t// \"x-dtbncx+xml\" : \"ncx\",\n\t\t\t\"x-dtbook+xml\" : \"dtb\",\n\t\t\t\"x-dtbresource+xml\" : \"res\",\n\t\t\t\"x-font-bdf\" : \"bdf\",\n\t\t\t\"x-font-ghostscript\" : \"gsf\",\n\t\t\t\"x-font-linux-psf\" : \"psf\",\n\t\t\t\"x-font-otf\" : \"otf\",\n\t\t\t\"x-font-pcf\" : \"pcf\",\n\t\t\t\"x-font-snf\" : \"snf\",\n\t\t\t\"x-font-ttf\" : [ \"ttf\", \"ttc\" ],\n\t\t\t\"x-font-type1\" : [ \"pfa\", \"pfb\", \"pfm\", \"afm\" ],\n\t\t\t\"x-font-woff\" : \"woff\",\n\t\t\t\"x-mobipocket-ebook\" : [ \"prc\", \"mobi\" ],\n\t\t\t\"x-mspublisher\" : \"pub\",\n\t\t\t\"x-nzb\" : \"nzb\",\n\t\t\t\"x-tgif\" : \"obj\",\n\t\t\t\"xaml+xml\" : \"xaml\",\n\t\t\t\"xml-dtd\" : \"dtd\",\n\t\t\t\"xproc+xml\" : \"xpl\",\n\t\t\t\"xslt+xml\" : \"xslt\",\n\t\t\t\"internet-property-stream\" : \"acx\",\n\t\t\t\"x-compress\" : \"z\",\n\t\t\t\"x-compressed\" : \"tgz\",\n\t\t\t\"x-gzip\" : \"gz\",\n\t\t},\n\t\t\"audio\" : {\n\t\t\t\"flac\" : \"flac\",\n\t\t\t\"midi\" : [ \"mid\", \"midi\", \"kar\", \"rmi\" ],\n\t\t\t\"mpeg\" : [ \"mpga\", \"mpega\", \"mp2\", \"mp3\", \"m4a\", \"mp2a\", \"m2a\", \"m3a\" ],\n\t\t\t\"mpegurl\" : \"m3u\",\n\t\t\t\"ogg\" : [ \"oga\", \"ogg\", \"spx\" ],\n\t\t\t\"x-aiff\" : [ \"aif\", \"aiff\", \"aifc\" ],\n\t\t\t\"x-ms-wma\" : \"wma\",\n\t\t\t\"x-wav\" : \"wav\",\n\t\t\t\"adpcm\" : \"adp\",\n\t\t\t\"mp4\" : \"mp4a\",\n\t\t\t\"webm\" : \"weba\",\n\t\t\t\"x-aac\" : \"aac\",\n\t\t\t\"x-caf\" : \"caf\",\n\t\t\t\"x-matroska\" : \"mka\",\n\t\t\t\"x-pn-realaudio-plugin\" : \"rmp\",\n\t\t\t\"xm\" : \"xm\",\n\t\t\t\"mid\" : [ \"mid\", \"rmi\" ]\n\t\t},\n\t\t\"image\" : {\n\t\t\t\"gif\" : \"gif\",\n\t\t\t\"ief\" : \"ief\",\n\t\t\t\"jpeg\" : [ \"jpeg\", \"jpg\", \"jpe\" ],\n\t\t\t\"pcx\" : \"pcx\",\n\t\t\t\"png\" : \"png\",\n\t\t\t\"svg+xml\" : [ \"svg\", \"svgz\" ],\n\t\t\t\"tiff\" : [ \"tiff\", \"tif\" ],\n\t\t\t\"x-icon\" : \"ico\",\n\t\t\t\"bmp\" : \"bmp\",\n\t\t\t\"webp\" : \"webp\",\n\t\t\t\"x-pict\" : [ \"pic\", \"pct\" ],\n\t\t\t\"x-tga\" : \"tga\",\n\t\t\t\"cis-cod\" : \"cod\"\n\t\t},\n\t\t\"text\" : {\n\t\t\t\"cache-manifest\" : [ \"manifest\", \"appcache\" ],\n\t\t\t\"css\" : \"css\",\n\t\t\t\"csv\" : \"csv\",\n\t\t\t\"html\" : [ \"html\", \"htm\", \"shtml\", \"stm\" ],\n\t\t\t\"mathml\" : \"mml\",\n\t\t\t\"plain\" : [ \"txt\", \"text\", \"brf\", \"conf\", \"def\", \"list\", \"log\", \"in\", \"bas\" ],\n\t\t\t\"richtext\" : \"rtx\",\n\t\t\t\"tab-separated-values\" : \"tsv\",\n\t\t\t\"x-bibtex\" : \"bib\"\n\t\t},\n\t\t\"video\" : {\n\t\t\t\"mpeg\" : [ \"mpeg\", \"mpg\", \"mpe\", \"m1v\", \"m2v\", \"mp2\", \"mpa\", \"mpv2\" ],\n\t\t\t\"mp4\" : [ \"mp4\", \"mp4v\", \"mpg4\" ],\n\t\t\t\"quicktime\" : [ \"qt\", \"mov\" ],\n\t\t\t\"ogg\" : \"ogv\",\n\t\t\t\"vnd.mpegurl\" : [ \"mxu\", \"m4u\" ],\n\t\t\t\"x-flv\" : \"flv\",\n\t\t\t\"x-la-asf\" : [ \"lsf\", \"lsx\" ],\n\t\t\t\"x-mng\" : \"mng\",\n\t\t\t\"x-ms-asf\" : [ \"asf\", \"asx\", \"asr\" ],\n\t\t\t\"x-ms-wm\" : \"wm\",\n\t\t\t\"x-ms-wmv\" : \"wmv\",\n\t\t\t\"x-ms-wmx\" : \"wmx\",\n\t\t\t\"x-ms-wvx\" : \"wvx\",\n\t\t\t\"x-msvideo\" : \"avi\",\n\t\t\t\"x-sgi-movie\" : \"movie\",\n\t\t\t\"x-matroska\" : [ \"mpv\", \"mkv\", \"mk3d\", \"mks\" ],\n\t\t\t\"3gpp2\" : \"3g2\",\n\t\t\t\"h261\" : \"h261\",\n\t\t\t\"h263\" : \"h263\",\n\t\t\t\"h264\" : \"h264\",\n\t\t\t\"jpeg\" : \"jpgv\",\n\t\t\t\"jpm\" : [ \"jpm\", \"jpgm\" ],\n\t\t\t\"mj2\" : [ \"mj2\", \"mjp2\" ],\n\t\t\t\"vnd.ms-playready.media.pyv\" : \"pyv\",\n\t\t\t\"vnd.uvvu.mp4\" : [ \"uvu\", \"uvvu\" ],\n\t\t\t\"vnd.vivo\" : \"viv\",\n\t\t\t\"webm\" : \"webm\",\n\t\t\t\"x-f4v\" : \"f4v\",\n\t\t\t\"x-m4v\" : \"m4v\",\n\t\t\t\"x-ms-vob\" : \"vob\",\n\t\t\t\"x-smv\" : \"smv\"\n\t\t}\n\t};\n\n\tvar mimeTypes = (function() {\n\t\tvar type, subtype, val, index, mimeTypes = {};\n\t\tfor (type in table) {\n\t\t\tif (table.hasOwnProperty(type)) {\n\t\t\t\tfor (subtype in table[type]) {\n\t\t\t\t\tif (table[type].hasOwnProperty(subtype)) {\n\t\t\t\t\t\tval = table[type][subtype];\n\t\t\t\t\t\tif (typeof val == \"string\") {\n\t\t\t\t\t\t\tmimeTypes[val] = type + \"/\" + subtype;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfor (index = 0; index < val.length; index++) {\n\t\t\t\t\t\t\t\tmimeTypes[val[index]] = type + \"/\" + subtype;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn mimeTypes;\n\t})();\n\n\tvar defaultValue = \"text/plain\";//\"application/octet-stream\";\n\n\tfunction lookup(filename) {\n\t\treturn filename && mimeTypes[filename.split(\".\").pop().toLowerCase()] || defaultValue;\n\t}\n\tvar mime = {\n\t\t'lookup': lookup\n\t};\n\n\t// import path from \"path-webpack\";\n\n\t/**\n\t * Handles Package Resources\n\t * @class\n\t * @param {object} resources\n\t * @param {object} [options]\n\t * @param {string} [options.replacements=\"base64\"]\n\t * @param {Archive} [options.archive]\n\t * @param {method} [options.load]\n\t * @param {string} [options.url]\n\t * @param {string} [options.inject]\n\t */\n\tclass Resources {\n\t\tconstructor(resources, options) {\n\t\t\tthis.settings = {\n\t\t\t\treplacements: (options && options.replacements) || \"blobUrl\",\n\t\t\t\tarchive: (options && options.archive),\n\t\t\t\tload: (options && options.load),\n\t\t\t\turl: (options && options.url),\n\t\t\t\t// path: (options && options.path),\n\t\t\t\tinject: (options && options.inject) || {},\n\t\t\t};\n\n\t\t\tthis.urlCache = {};\n\n\t\t\tthis.resources = Object.assign({}, resources);\n\n\t\t\tthis.resourcesByHref = {};\n\n\t\t\tthis.ids = [];\n\t\t\tthis.html = [];\n\t\t\tthis.assets = [];\n\t\t\tthis.css = [];\n\n\t\t\tif (typeof(this.settings.url) === \"string\") {\n\t\t\t\tthis.url = new Url(this.settings.url);\n\t\t\t\tthis.path = new Path(this.settings.url);\n\t\t\t} else if(typeof(this.settings.url) === \"object\") {\n\t\t\t\tthis.url = this.settings.url;\n\t\t\t\tthis.path = new Path(this.url.toString());\n\t\t\t} else {\n\t\t\t\tthis.path = new Path(\"/\");\n\t\t\t}\n\n\t\t\tif (resources) {\n\t\t\t\tthis.split(resources);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Split resources by type\n\t\t * @private\n\t\t */\n\t\tsplit(resources){\n\t\t\tlet keys = Object.keys(resources);\n\n\t\t\t// HTML\n\t\t\tlet html = keys.\n\t\t\t\tfilter(function (key){\n\t\t\t\t\tlet item = resources[key];\n\t\t\t\t\tif (item.type === \"application/xhtml+xml\" ||\n\t\t\t\t\t\t\titem.type === \"text/html\") {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t// Exclude HTML & CSS\n\t\t\tlet assets = keys.\n\t\t\t\tfilter(function (key){\n\t\t\t\t\tlet item = resources[key];\n\t\t\t\t\tif (item.type !== \"application/xhtml+xml\" &&\n\t\t\t\t\t\t\titem.type !== \"text/html\" &&\n\t\t\t\t\t\t\titem.type !== \"text/css\") {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t// Only CSS\n\t\t\tlet css = keys.\n\t\t\t\tfilter(function (key){\n\t\t\t\t\tlet item = resources[key];\n\t\t\t\t\tif (item.type === \"text/css\") {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tkeys.forEach((id) => {\n\t\t\t\tlet resource = resources[id];\n\t\t\t\t// set ID from keys\n\t\t\t\tresource.id = id;\n\t\t\t\tif (!resource.source) {\n\t\t\t\t\tresource.source = resource.href;\n\t\t\t\t}\n\t\t\t\tthis.resourcesByHref[resource.href] = id;\n\t\t\t});\n\n\t\t\tthis.ids = keys;\n\t\t\tthis.html = html;\n\t\t\tthis.assets = assets;\n\t\t\tthis.css = css;\n\n\t\t\treturn {\n\t\t\t\thtml,\n\t\t\t\tassets,\n\t\t\t\tcss\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Save all resources into the cache\n\t\t * @return {array}\n\t\t */\n\t\tcache(key, origin) {\n\t\t\tif (typeof(caches) === \"undefined\") {\n\t\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\t\tresolve([]);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.cacheKey = key;\n\n\t\t\tlet originUrl = this.url;\n\t\t\tif (typeof(origin) === \"string\") {\n\t\t\t\toriginUrl = new Url(origin);\n\t\t\t}\n\n\t\t\tthis.ids.map((resourceId) => {\n\t\t\t\tlet resource = this.resources[resourceId];\n\t\t\t\tlet href = resource.source || resource.href;\n\t\t\t\tlet isAbsolute = href.indexOf(\"://\") > -1;\n\t\t\t\tlet path = isAbsolute ? href : this.path.resolve(href);\n\t\t\t\tlet url;\n\n\t\t\t\tif (!isAbsolute && originUrl) {\n\t\t\t\t\turl = originUrl.resolve(href);\n\t\t\t\t} else {\n\t\t\t\t\tlet originalUrl = new Url(href, origin);\n\t\t\t\t\tlet base = encodeURIComponent(originalUrl.origin);\n\t\t\t\t\tpath = path.replace(originalUrl.origin, \"\");\n\n\t\t\t\t\turl = new Url(key + base + path, location.href).toString();\n\t\t\t\t}\n\n\t\t\t\tthis.resources[resourceId].path = path;\n\t\t\t\tthis.resources[resourceId].cached = url;\n\t\t\t\tthis.urlCache[path] = url;\n\t\t\t});\n\n\t\t\treturn caches.open(key).then((cache) => {\n\t\t\t\tlet urls = this.ids.map((resourceId) => {\n\t\t\t\t\tlet resource = this.resources[resourceId];\n\t\t\t\t\tlet url = resource.cached;\n\t\t\t\t\tlet path = resource.path;\n\n\t\t\t\t\tlet mimeType = mime.lookup(path);\n\n\t\t\t\t\treturn cache.match(url)\n\t\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\t\tif (!result) {\n\t\t\t\t\t\t\t\tlet loaded;\n\t\t\t\t\t\t\t\tif (resource.type === \"application/xhtml+xml\" ||\n\t\t\t\t\t\t\t\t\t\tresource.type === \"text/html\") {\n\t\t\t\t\t\t\t\t\tloaded = this.settings.load(path, \"text\").then((text) => {\n\n\t\t\t\t\t\t\t\t\t\tif (this.settings.inject.identifier) {\n\t\t\t\t\t\t\t\t\t\t\ttext = this.injectIdentifier(text, this.settings.inject.identifier);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (this.settings.inject.script) {\n\t\t\t\t\t\t\t\t\t\t\ttext = this.injectScript(text, this.settings.inject.script);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (this.settings.inject.stylesheet) {\n\t\t\t\t\t\t\t\t\t\t\ttext = this.injectStylesheet(text, this.settings.inject.script);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\treturn createBlob(text, resource.type);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tloaded = this.settings.load(path, \"blob\");\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn loaded.then((blob) => {\n\t\t\t\t\t\t\t\t\tlet response = new Response(blob, {\n\t\t\t\t\t\t\t\t\t\t\"status\" : 200,\n\t\t\t\t\t\t\t\t\t\t\"headers\": { 'Content-Type': mimeType }\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tthis.urlCache[path] = url;\n\t\t\t\t\t\t\t\t\treturn cache.put(url, response);\n\t\t\t\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\t\t\t\tconsole.warn(\"Missing Resource\", path);\n\t\t\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t\t\t\treturn url;\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.urlCache[path] = url;\n\t\t\t\t\t\t\t\treturn url;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t});\n\n\t\t\t\treturn Promise.all(urls);\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Create blob urls for all the assets\n\t\t * @return {Promise}         returns replacement urls\n\t\t */\n\t\treplacements(){\n\t\t\tif (this.settings.replacements === \"none\") {\n\t\t\t\treturn new Promise(function(resolve) {\n\t\t\t\t\tresolve([]);\n\t\t\t\t}.bind(this));\n\t\t\t}\n\n\t\t\tvar replacements = [];\n\n\t\t\t// Replace all the assets\n\t\t\tlet assets = this.assets.\n\t\t\t\tmap( (resourceId) => {\n\t\t\t\t\tlet url = this.replacementUrl(resourceId);\n\t\t\t\t\treplacements.push(url);\n\t\t\t\t\treturn url;\n\t\t\t\t});\n\n\t\t\t// Re-write and replace css files\n\t\t\tlet css = Promise.all(assets).then(() => {\n\t\t\t\treturn this.css.\n\t\t\t\t\tmap( (resourceId) => {\n\t\t\t\t\t\tlet url = this.replacementCss(resourceId);\n\t\t\t\t\t\treplacements.push(url);\n\t\t\t\t\t\treturn url;\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Re-write and replace htmls files\n\t\t\tlet html = css.then(() => {\n\t\t\t\treturn this.html.\n\t\t\t\t\tmap( (resourceId) => {\n\t\t\t\t\t\tlet url = this.replacementHtml(resourceId);\n\t\t\t\t\t\treplacements.push(url);\n\t\t\t\t\t\treturn url;\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn html.then(() => {\n\t\t\t\treturn Promise.all(replacements);\n\t\t\t}).then((urls) => {\n\t\t\t\treturn urls;\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Create a replacement url from a resource\n\t\t * @param  {number} resourceId\n\t\t * @return {promise}\n\t\t */\n\t\treplacementUrl(resourceId) {\n\t\t\tlet resource = this.resources[resourceId];\n\t\t\tlet absolute = this.url.resolve(resource.href);\n\t\t\tlet createUrl;\n\n\t\t\tif (this.settings.replacements === \"base64\") {\n\t\t\t\tcreateUrl = this.base64UrlFrom(absolute);\n\t\t\t} else {\n\t\t\t\tcreateUrl = this.blobUrlFrom(absolute);\n\t\t\t}\n\n\t\t\treturn createUrl\n\t\t\t\t.then((url) => {\n\t\t\t\t\tthis.resources[resourceId].replacement = url;\n\t\t\t\t\tthis.urlCache[absolute] = url;\n\t\t\t\t\treturn url;\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\treturn null;\n\t\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Replace URLs in CSS resources\n\t\t * @private\n\t\t * @param  {number} resourceId\n\t\t * @return {Promise}\n\t\t */\n\t\treplacementCss(resourceId){\n\t\t\tlet newUrl;\n\t\t\tlet resource = this.resources[resourceId];\n\t\t\tlet href = resource.href;\n\n\t\t\tif (this.path.isAbsolute(href)) {\n\t\t\t\treturn new Promise(function(resolve){\n\t\t\t\t\tresolve(href);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet resolved = this.path.resolve(href);\n\t\t\tlet fullpath = new Path(resolved);\n\t\t\t// Get the text of the css file from the archive\n\t\t\tvar textResponse;\n\n\t\t\tif (this.settings.archive) {\n\t\t\t\ttextResponse = this.settings.archive.getText(resolved);\n\t\t\t} else {\n\t\t\t\ttextResponse = this.settings.load(resolved, \"text\");\n\t\t\t}\n\n\t\t\treturn textResponse.then( (text) => {\n\t\t\t\tlet replacements = {};\n\n\t\t\t\t// Get asset links relative to css file\n\t\t\t\tthis.ids.forEach( (resourceId) => {\n\t\t\t\t\tlet resource = this.resources[resourceId];\n\t\t\t\t\tif (!resource.replacement) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tlet assetHref = resource.href;\n\t\t\t\t\tlet resolved = this.path.resolve(assetHref);\n\t\t\t\t\tlet relative = fullpath.relative(resolved);\n\n\t\t\t\t\treplacements[relative] = resource.replacement;\n\t\t\t\t});\n\n\t\t\t\t// Replacements in the css text\n\t\t\t\ttext = this.substitute(text, replacements);\n\n\t\t\t\t// Get the new url\n\t\t\t\tif (this.settings.replacements === \"base64\") {\n\t\t\t\t\tnewUrl = createBase64Url(text, \"text/css\");\n\t\t\t\t} else {\n\t\t\t\t\tnewUrl = createBlobUrl(text, \"text/css\");\n\t\t\t\t}\n\n\t\t\t\treturn newUrl;\n\t\t\t}, (err) => {\n\t\t\t\t// handle response errors\n\t\t\t\treturn new Promise(function(resolve){\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t}).then((url) => {\n\t\t\t\tif (url) {\n\t\t\t\t\tthis.resources[resourceId].replacement = url;\n\t\t\t\t\tthis.urlCache[fullpath] = url;\n\t\t\t\t}\n\t\t\t\treturn url;\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Replace URLs in HTML resources\n\t\t * @private\n\t\t * @param  {number} resourceId\n\t\t * @return {Promise}\n\t\t */\n\t\treplacementHtml(resourceId){\n\t\t\tlet newUrl;\n\t\t\tlet resource = this.resources[resourceId];\n\t\t\tlet href = resource.href;\n\t\t\tlet mimeType = mime.lookup(href);\n\n\t\t\tif (this.path.isAbsolute(href)) {\n\t\t\t\treturn new Promise(function(resolve){\n\t\t\t\t\tresolve(href);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet resolved = this.path.resolve(href);\n\t\t\tlet fullpath = new Path(resolved);\n\t\t\t// Get the text of the css file from the archive\n\t\t\tvar textResponse;\n\n\t\t\tif (this.settings.archive) {\n\t\t\t\ttextResponse = this.settings.archive.getText(resolved);\n\t\t\t} else {\n\t\t\t\ttextResponse = this.settings.load(resolved, \"text\");\n\t\t\t}\n\n\t\t\treturn textResponse.then( (text) => {\n\t\t\t\tlet replacements = {};\n\n\t\t\t\t// Get asset links relative to html file\n\t\t\t\tthis.ids.forEach( (resourceId) => {\n\t\t\t\t\tlet resource = this.resources[resourceId];\n\t\t\t\t\tif (!resource.replacement) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tlet assetHref = resource.href;\n\t\t\t\t\tlet resolved = this.path.resolve(assetHref);\n\t\t\t\t\tlet relative = fullpath.relative(resolved);\n\n\t\t\t\t\treplacements[relative] = resource.replacement;\n\t\t\t\t});\n\n\t\t\t\t// Replacements in the css text\n\t\t\t\ttext = this.substitute(text, replacements);\n\n\t\t\t\t// Inject\n\t\t\t\tif (this.settings.inject.base) {\n\t\t\t\t\ttext = this.injectBase(text, this.settings.inject.base);\n\t\t\t\t}\n\n\t\t\t\tif (this.settings.inject.identifier) {\n\t\t\t\t\ttext = this.injectIdentifier(text, this.settings.inject.identifier);\n\t\t\t\t}\n\n\t\t\t\tif (this.settings.inject.script) {\n\t\t\t\t\ttext = this.injectScript(text, this.settings.inject.script);\n\t\t\t\t}\n\n\t\t\t\tif (this.settings.inject.stylesheet) {\n\t\t\t\t\ttext = this.injectStylesheet(text, this.settings.inject.script);\n\t\t\t\t}\n\n\t\t\t\t// Get the new url\n\t\t\t\tif (this.settings.replacements === \"base64\") {\n\t\t\t\t\tnewUrl = createBase64Url(text, mimeType);\n\t\t\t\t} else {\n\t\t\t\t\tnewUrl = createBlobUrl(text, mimeType);\n\t\t\t\t}\n\n\t\t\t\treturn newUrl;\n\t\t\t}, (err) => {\n\t\t\t\t// handle response errors\n\t\t\t\treturn new Promise(function(resolve){\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t}).then((url) => {\n\t\t\t\tif (url) {\n\t\t\t\t\tthis.resources[resourceId].replacement = url;\n\t\t\t\t\tthis.urlCache[fullpath] = url;\n\t\t\t\t}\n\t\t\t\treturn url;\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Create a blob url from a resource absolute url\n\t\t * @param  {string} url\n\t\t * @return {string}          the resolved path string\n\t\t */\n\t\tblobUrlFrom (url) {\n\t\t\tvar parsedUrl = new Url(url);\n\t\t\tvar mimeType = mime.lookup(parsedUrl.filename);\n\n\t\t\tif (this.settings.archive) {\n\t\t\t\treturn this.settings.archive.createUrl(url, {\"base64\": false});\n\t\t\t} else {\n\t\t\t\treturn this.settings.load(url, \"blob\").then((blob) => {\n\t\t\t\t\treturn createBlobUrl(blob, mimeType);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Create a base64 encoded url from a resource absolute url\n\t\t * @param  {string} url\n\t\t * @return {string}          the resolved path string\n\t\t */\n\t\tbase64UrlFrom (url) {\n\t\t\tvar parsedUrl = new Url(url);\n\t\t\tvar mimeType = mime.lookup(parsedUrl.filename);\n\n\t\t\tif (this.settings.archive) {\n\t\t\t\treturn this.settings.archive.createUrl(url, {\"base64\": true});\n\t\t\t} else {\n\t\t\t\treturn this.settings.load(url, \"blob\")\n\t\t\t\t\t.then((blob) => {\n\t\t\t\t\t\treturn blob2base64(blob);\n\t\t\t\t\t})\n\t\t\t\t\t.then((blob) => {\n\t\t\t\t\t\treturn createBase64Url(blob, mimeType);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Substitute urls in a resource\n\t\t */\n\t\tsubstitute(text, resources) {\n\t\t\tlet query = Object.keys(resources).map((i) => {\n\t\t\t\t\treturn i.replace(/[.?*+^$[\\]\\\\(){}|-]/g, \"\\\\$&\");\n\t\t\t\t}).join(\"|\");\n\n\t\t\tlet reg = new RegExp(\"(\" + query + \")\", \"g\");\n\n\t\t\treturn text.replace(reg, function(match) {\n\t\t\t\treturn resources[match];\n\t\t\t});\n\t\t}\n\n\t\tinjectStylesheet(text, src) {\n\t\t\tlet reg = /<[ ]*\\/head[ ]*>/;\n\t\t\tlet toInject = `<link href=\"${src}\" rel=\"stylesheet\" />`;\n\n\t\t\treturn text.replace(reg, toInject + \"$&\");\n\t\t}\n\n\t\tinjectScript(text, src) {\n\t\t\tlet reg = /<[ ]*\\/head[ ]*>/;\n\t\t\tlet toInject = `<script src=\"${src}\" type=\"text/javascript\"></script>`;\n\n\t\t\treturn text.replace(reg, toInject + \"$&\");\n\t\t}\n\n\t\tinjectIdentifier(text, identifier) {\n\t\t\tlet reg = /<[ ]*\\/head[ ]*>/;\n\t\t\tlet toInject = `<meta name=\"dc.relation.ispartof\" content=\"${identifier}\" />`;\n\n\t\t\treturn text.replace(reg, toInject + \"$&\");\n\t\t}\n\n\t\tinjectBase(text, url) {\n\t\t\tlet reg = /<[ ]*head[ ]*>/;\n\t\t\tlet absolute = (url.indexOf(\"://\") > -1);\n\n\t\t\t// Fix for Safari crashing if the url doesn't have an origin\n\t\t\tif (!absolute && (typeof(window) !== \"undefined\" && window.location)) {\n\t\t\t\tlet parts = window.location.href.split(\"/\");\n\t\t\t\tlet directory = \"\";\n\n\t\t\t\tparts.pop();\n\t\t\t\tdirectory = parts.join(\"/\");\n\n\t\t\t\turl = directory + url;\n\t\t\t}\n\n\t\t\tlet toInject = `<base href=\"${url}\" />`;\n\n\n\t\t\treturn text.replace(reg, \"$&\" + toInject);\n\t\t}\n\n\t\torigin(url) {\n\t\t\tthis.url = new Url(url);\n\t\t}\n\n\t\t/**\n\t\t * Resolve a path to its absolute url (or replaced url)\n\t\t * @param  {string} path\n\t\t * @return {string}          the resolved path string\n\t\t */\n\t\tresolve(path) {\n\t\t\tif (!path) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet isAbsolute = path.indexOf(\"://\") > -1;\n\t\t\tlet href = isAbsolute ? path : this.path.resolve(path);\n\t\t\tlet resolved = href;\n\n\t\t\tlet search = href.split(\"?\");\n\t\t\tlet anchor = href.split(\"#\");\n\t\t\tlet base = href;\n\t\t\tif (search.length > 1) {\n\t\t\t\tbase = search[0];\n\t\t\t} else if (anchor.length > 1) {\n\t\t\t\tbase = anchor[0];\n\t\t\t}\n\t\t\tlet cached = this.urlCache[base];\n\n\t\t\tif (cached) {\n\t\t\t\tresolved = cached;\n\n\t\t\t\t// Add query strings back\n\t\t\t\tif (search.length > 1) {\n\t\t\t\t\tresolved += \"?\" + search[1];\n\t\t\t\t} else if (anchor.length > 1) {\n\t\t\t\t\tresolved += \"#\" + anchor[1];\n\t\t\t\t}\n\t\t\t} else if (this.url) {\n\t\t\t\tresolved = this.url.resolve(path);\n\t\t\t} else {\n\t\t\t\tresolved = path;\n\t\t\t}\n\n\t\t\treturn resolved;\n\t\t}\n\n\t\t/**\n\t\t * Export an Array of all resources\n\t\t * @return {array}\n\t\t */\n\t\ttoArray() {\n\t\t\treturn this.ids.map((key) => {\n\t\t\t\tlet item = this.resources[key];\n\t\t\t\tlet { type: type$$1, properties, id } = item;\n\t\t\t\tlet source = item.href;\n\n\t\t\t\tlet href = item.cached || item.replacement || (this.url && this.url.resolve(item.href)) || item.href;\n\n\t\t\t\treturn {\n\t\t\t\t\thref,\n\t\t\t\t\tsource,\n\t\t\t\t\ttype: type$$1,\n\t\t\t\t\tproperties,\n\t\t\t\t\tid\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\tforEach(func) {\n\t\t\treturn this.ids.\n\t\t\t\tforEach((id) => {\n\t\t\t\t\tlet r = this.resources[id];\n\t\t\t\t\tr.id = key;\n\t\t\t\t\tfunc(r);\n\t\t\t\t});\n\t\t}\n\n\t\tmap(func) {\n\t\t\treturn this.ids.\n\t\t\t\tmap((id) => {\n\t\t\t\t\tlet r = this.resources[id];\n\t\t\t\t\tr.id = key;\n\t\t\t\t\treturn func(r);\n\t\t\t\t});\n\t\t}\n\n\t\tfilter(func) {\n\t\t\treturn this.ids.\n\t\t\t\tfilter((id) => {\n\t\t\t\t\tlet r = this.resources[id];\n\t\t\t\t\tr.id = key;\n\t\t\t\t\treturn func(r);\n\t\t\t\t});\n\t\t}\n\n\t\tget(what) {\n\t\t\tif (what in this.resources) {\n\t\t\t\treturn this.resources[what];\n\t\t\t} else if (what in this.resourcesByHref) {\n\t\t\t\tlet id = this.resourcesByHref[what];\n\t\t\t\treturn this.resources[id];\n\t\t\t}\n\t\t}\n\n\t\trevokeBlobUrls() {\n\t\t\tthis.ids.forEach((id) => {\n\t\t\t\tlet r = this.resources[id];\n\t\t\t\tif (r.replacement) {\n\t\t\t\t\trevokeBlobUrl(r.replacement);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tdestroy() {\n\t\t\tthis.revokeBlobUrls();\n\n\t\t\tthis.settings = undefined;\n\t\t\tthis.manifest = undefined;\n\n\t\t\tthis.html = undefined;\n\t\t\tthis.assets = undefined;\n\t\t\tthis.css = undefined;\n\n\t\t\tthis.urls = undefined;\n\t\t\tthis.cssUrls = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Handles Unzipping a requesting files from an Epub Archive\n\t * @class\n\t */\n\tclass Archive {\n\n\t\tconstructor() {\n\t\t\tthis.zip = undefined;\n\t\t\tthis.urlCache = {};\n\n\t\t\tthis.checkRequirements();\n\n\t\t}\n\n\t\t/**\n\t\t * Checks to see if JSZip exists in global namspace,\n\t\t * Requires JSZip if it isn't there\n\t\t * @private\n\t\t */\n\t\tcheckRequirements(){\n\t\t\ttry {\n\t\t\t\tthis.zip = new JSZip();\n\t\t\t} catch (e) {\n\t\t\t\tthrow new Error(\"JSZip lib not loaded\");\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Open an archive\n\t\t * @param  {binary} input\n\t\t * @param  {boolean} isBase64 tells JSZip if the input data is base64 encoded\n\t\t * @return {Promise} zipfile\n\t\t */\n\t\topen(input, isBase64){\n\t\t\treturn this.zip.loadAsync(input, {\"base64\": isBase64});\n\t\t}\n\n\t\t/**\n\t\t * Load and Open an archive\n\t\t * @param  {string} zipUrl\n\t\t * @param  {boolean} isBase64 tells JSZip if the input data is base64 encoded\n\t\t * @return {Promise} zipfile\n\t\t */\n\t\topenUrl(zipUrl, isBase64){\n\t\t\treturn request(zipUrl, \"binary\")\n\t\t\t\t.then(function(data){\n\t\t\t\t\treturn this.zip.loadAsync(data, {\"base64\": isBase64});\n\t\t\t\t}.bind(this));\n\t\t}\n\n\t\t/**\n\t\t * Request a url from the archive\n\t\t * @param  {string} url  a url to request from the archive\n\t\t * @param  {string} [type] specify the type of the returned result\n\t\t * @return {Promise}\n\t\t */\n\t\trequest(url, type$$1){\n\t\t\tvar deferred = new defer();\n\t\t\tvar response;\n\t\t\tvar path = new Path(url);\n\n\t\t\t// If type isn't set, determine it from the file extension\n\t\t\tif(!type$$1) {\n\t\t\t\ttype$$1 = path.extension;\n\t\t\t}\n\n\t\t\tif(type$$1 == \"blob\"){\n\t\t\t\tresponse = this.getBlob(url);\n\t\t\t} else {\n\t\t\t\tresponse = this.getText(url);\n\t\t\t}\n\n\t\t\tif (response) {\n\t\t\t\tresponse.then(function (r) {\n\t\t\t\t\tlet result = this.handleResponse(r, type$$1);\n\t\t\t\t\tdeferred.resolve(result);\n\t\t\t\t}.bind(this));\n\t\t\t} else {\n\t\t\t\tdeferred.reject({\n\t\t\t\t\tmessage : \"File not found in the epub: \" + url,\n\t\t\t\t\tstack : new Error().stack\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn deferred.promise;\n\t\t}\n\n\t\t/**\n\t\t * Handle the response from request\n\t\t * @private\n\t\t * @param  {any} response\n\t\t * @param  {string} [type]\n\t\t * @return {any} the parsed result\n\t\t */\n\t\thandleResponse(response, type$$1){\n\t\t\tvar r;\n\n\t\t\tif(type$$1 == \"json\") {\n\t\t\t\tr = JSON.parse(response);\n\t\t\t}\n\t\t\telse\n\t\t\tif(isXml(type$$1)) {\n\t\t\t\tr = parse(response, \"text/xml\");\n\t\t\t}\n\t\t\telse\n\t\t\tif(type$$1 == \"xhtml\") {\n\t\t\t\tr = parse(response, \"application/xhtml+xml\");\n\t\t\t}\n\t\t\telse\n\t\t\tif(type$$1 == \"html\" || type$$1 == \"htm\") {\n\t\t\t\tr = parse(response, \"text/html\");\n\t\t\t } else {\n\t\t\t\t r = response;\n\t\t\t }\n\n\t\t\treturn r;\n\t\t}\n\n\t\t/**\n\t\t * Get a Blob from Archive by Url\n\t\t * @param  {string} url\n\t\t * @param  {string} [mimeType]\n\t\t * @return {Blob}\n\t\t */\n\t\tgetBlob(url, mimeType){\n\t\t\tvar decodededUrl = decodeURIComponent(url.substr(1)); // Remove first slash\n\t\t\tvar entry = this.zip.file(decodededUrl);\n\n\t\t\tif(entry) {\n\t\t\t\tmimeType = mimeType || mime.lookup(entry.name);\n\t\t\t\treturn entry.async(\"uint8array\").then(function(uint8array) {\n\t\t\t\t\treturn new Blob([uint8array], {type : mimeType});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Get Text from Archive by Url\n\t\t * @param  {string} url\n\t\t * @param  {string} [encoding]\n\t\t * @return {string}\n\t\t */\n\t\tgetText(url, encoding){\n\t\t\tvar decodededUrl = decodeURIComponent(url.substr(1)); // Remove first slash\n\t\t\tvar entry = this.zip.file(decodededUrl);\n\n\t\t\tif(entry) {\n\t\t\t\treturn entry.async(\"string\").then(function(text) {\n\t\t\t\t\treturn text;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Get a base64 encoded result from Archive by Url\n\t\t * @param  {string} url\n\t\t * @param  {string} [mimeType]\n\t\t * @return {string} base64 encoded\n\t\t */\n\t\tgetBase64(url, mimeType){\n\t\t\tvar decodededUrl = decodeURIComponent(url.substr(1)); // Remove first slash\n\t\t\tvar entry = this.zip.file(decodededUrl);\n\n\t\t\tif(entry) {\n\t\t\t\tmimeType = mimeType || mime.lookup(entry.name);\n\t\t\t\treturn entry.async(\"base64\").then(function(data) {\n\t\t\t\t\treturn \"data:\" + mimeType + \";base64,\" + data;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Create a Url from an unarchived item\n\t\t * @param  {string} url\n\t\t * @param  {object} [options.base64] use base64 encoding or blob url\n\t\t * @return {Promise} url promise with Url string\n\t\t */\n\t\tcreateUrl(url, options){\n\t\t\tvar deferred = new defer();\n\t\t\t//var _URL = window.URL || window.webkitURL || window.mozURL;\n\t\t\tvar tempUrl;\n\t\t\tvar response;\n\t\t\tvar useBase64 = options && options.base64;\n\n\t\t\tif(url in this.urlCache) {\n\t\t\t\tdeferred.resolve(this.urlCache[url]);\n\t\t\t\treturn deferred.promise;\n\t\t\t}\n\n\t\t\tif (useBase64) {\n\t\t\t\tresponse = this.getBase64(url);\n\n\t\t\t\tif (response) {\n\t\t\t\t\tresponse.then(function(tempUrl) {\n\n\t\t\t\t\t\tthis.urlCache[url] = tempUrl;\n\t\t\t\t\t\tdeferred.resolve(tempUrl);\n\n\t\t\t\t\t}.bind(this));\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tresponse = this.getBlob(url);\n\n\t\t\t\tif (response) {\n\t\t\t\t\tresponse.then(function(blob) {\n\n\t\t\t\t\t\ttempUrl = URL.createObjectURL(blob);\n\t\t\t\t\t\tthis.urlCache[url] = tempUrl;\n\t\t\t\t\t\tdeferred.resolve(tempUrl);\n\n\t\t\t\t\t}.bind(this));\n\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tif (!response) {\n\t\t\t\tdeferred.reject({\n\t\t\t\t\tmessage : \"File not found in the epub: \" + url,\n\t\t\t\t\tstack : new Error().stack\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn deferred.promise;\n\t\t}\n\n\t\t/**\n\t\t * Revoke Temp Url for a achive item\n\t\t * @param  {string} url url of the item in the archive\n\t\t */\n\t\trevokeUrl(url){\n\t\t\t//var _URL = _URL || window.webkitURL || window.mozURL;\n\t\t\tvar fromCache = this.urlCache[url];\n\t\t\tif(fromCache) URL.revokeObjectURL(fromCache);\n\t\t}\n\n\t\tdestroy() {\n\t\t\t// var _URL = window.URL || window.webkitURL || window.mozURL;\n\t\t\tfor (let fromCache in this.urlCache) {\n\t\t\t\tURL.revokeObjectURL(fromCache);\n\t\t\t}\n\t\t\tthis.zip = undefined;\n\t\t\tthis.urlCache = {};\n\t\t}\n\t}\n\n\tconst CONTAINER_PATH = \"META-INF/container.xml\";\n\n\tconst INPUT_TYPE = {\n\t\tBINARY: \"binary\",\n\t\tBASE64: \"base64\",\n\t\tEPUB: \"epub\",\n\t\tOPF: \"opf\",\n\t\tMANIFEST: \"json\",\n\t\tDIRECTORY: \"directory\"\n\t};\n\n\t/**\n\t * An Epub representation with methods for the parsing of its contents.\n\t * @class\n\t * @param {string} [url]\n\t * @param {object} [options]\n\t * @param {method} [options.requestMethod] a request function to use instead of the default\n\t * @param {boolean} [options.requestCredentials=undefined] send the xhr request withCredentials\n\t * @param {object} [options.requestHeaders=undefined] send the xhr request headers\n\t * @param {string} [options.encoding=binary] optional to pass 'binary' or base64' for archived Epubs\n\t * @param {string} [options.replacements] use base64, blobUrl, or none for replacing assets in archived Epubs\n\t * @param {method} [options.cache] use cache to save book contents for a service workers\n\t * @returns {Epub}\n\t * @example new Epub(\"/path/to/book.epub\", {})\n\t * @example new Epub({ replacements: \"blobUrl\" })\n\t */\n\tclass Epub {\n\t\tconstructor(url, options) {\n\t\t\t// Allow passing just options to the Book\n\t\t\tif (typeof(options) === \"undefined\"\n\t\t\t\t&& typeof(url) === \"object\") {\n\t\t\t\toptions = url;\n\t\t\t\turl = undefined;\n\t\t\t}\n\n\t\t\tthis.settings = extend(this.settings || {}, {\n\t\t\t\trequestMethod: undefined,\n\t\t\t\trequestCredentials: undefined,\n\t\t\t\trequestHeaders: undefined,\n\t\t\t\tencoding: undefined,\n\t\t\t\treplacements: undefined,\n\t\t\t\tcache: undefined,\n\t\t\t\tstylesheet: null,\n\t\t\t\tscript: null\n\t\t\t});\n\n\t\t\textend(this.settings, options);\n\n\t\t\tthis.opening = new defer();\n\t\t\t/**\n\t\t\t * @member {promise} opened returns after the book is loaded\n\t\t\t * @memberof Book\n\t\t\t */\n\t\t\tthis.opened = this.opening.promise;\n\t\t\tthis.isOpen = false;\n\n\t\t\tthis.book = undefined;\n\n\t\t\t/**\n\t\t\t * @member {promise} ready returns after the book is loaded and parsed\n\t\t\t * @memberof Book\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis.ready = this.opened.then(() => {\n\t\t\t\tthis.manifest = this.book.toJSON();\n\t\t\t\tthis.emit(EVENTS.BOOK.READY, this.manifest);\n\t\t\t\treturn this.book;\n\t\t\t});\n\n\t\t\t/**\n\t\t\t * @member {method} request\n\t\t\t * @memberof Epub\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis.request = this.settings.requestMethod || request;\n\n\t\t\t/**\n\t\t\t * @member {boolean} archived\n\t\t\t * @memberof Epub\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis.archived = false;\n\n\t\t\t/**\n\t\t\t * @member {Container} container\n\t\t\t * @memberof Epub\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis.container = undefined;\n\n\t\t\t/**\n\t\t\t * @member {Packaging} packaging\n\t\t\t * @memberof Epub\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis.packaging = undefined;\n\n\t\t\t/**\n\t\t\t * @member {Locations} locations\n\t\t\t * @memberof Epub\n\t\t\t * @private\n\t\t\t */\n\t\t\t this.locations = undefined;\n\n\t\t\t /**\n\t\t\t * @member {PageList} pagelist\n\t\t\t * @memberof Epub\n\t\t\t */\n\t\t\tthis.pageList = undefined;\n\n\t\t\tif(url) {\n\t\t\t\tthis.open(url).catch((error) => {\n\t\t\t\t\tvar err = new Error(\"Cannot load book at \"+ url );\n\t\t\t\t\tthis.emit(EVENTS.BOOK.OPEN_FAILED, err);\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Open a epub or url\n\t\t * @param {string | ArrayBuffer} input Url, Path or ArrayBuffer\n\t\t * @param {string} [what=\"binary\", \"base64\", \"epub\", \"opf\", \"json\", \"directory\"] force opening as a certain type\n\t\t * @returns {Promise} of when the book has been loaded\n\t\t * @example book.open(\"/path/to/book.epub\")\n\t\t */\n\t\topen(input, what) {\n\t\t\tlet opening;\n\t\t\tlet type$$1 = what || this.determineType(input);\n\t\t\tlet inputLocation;\n\n\t\t\t// For browsers\n\t\t\tif (typeof window !== \"undefined\") {\n\t\t\t\tinputLocation = window.location.href;\n\t\t\t}\n\n\t\t\t// For web workers\n\t\t\tif (typeof self !== \"undefined\") {\n\t\t\t\tinputLocation = self.location.href;\n\t\t\t}\n\n\t\t\tif (type$$1 === INPUT_TYPE.BINARY) {\n\t\t\t\tthis.archived = true;\n\t\t\t\tthis.url = new Url(\"/\", \"\");\n\t\t\t\tthis.locationUrl = new Url(inputLocation);\n\t\t\t\topening = this.openEpub(input);\n\t\t\t} else if (type$$1 === INPUT_TYPE.BASE64) {\n\t\t\t\tthis.archived = true;\n\t\t\t\tthis.url = new Url(\"/\", \"\");\n\t\t\t\tthis.locationUrl = new Url(inputLocation);\n\t\t\t\topening = this.openEpub(input, type$$1);\n\t\t\t} else if (type$$1 === INPUT_TYPE.EPUB) {\n\t\t\t\tthis.archived = true;\n\t\t\t\tthis.url = new Url(\"/\", \"\");\n\t\t\t\tthis.locationUrl = new Url(input, inputLocation);\n\t\t\t\topening = this.request(input, \"binary\")\n\t\t\t\t\t.then(this.openEpub.bind(this));\n\t\t\t} else if(type$$1 == INPUT_TYPE.OPF) {\n\t\t\t\tthis.url = new Url(input);\n\t\t\t\tthis.locationUrl = new Url(input);\n\t\t\t\topening = this.openPackaging(this.url.Path.toString());\n\t\t\t} else if(type$$1 == INPUT_TYPE.MANIFEST) {\n\t\t\t\tthis.url = new Url(input);\n\t\t\t\tthis.locationUrl = new Url(input);\n\t\t\t\topening = this.openManifest(this.url.Path.toString());\n\t\t\t} else {\n\t\t\t\tthis.url = new Url(input);\n\t\t\t\tthis.locationUrl = new Url(input);\n\t\t\t\topening = this.openContainer(CONTAINER_PATH)\n\t\t\t\t\t.then(this.openPackaging.bind(this));\n\t\t\t}\n\n\t\t\treturn opening.then((packaging) => {\n\t\t\t\treturn this.unpack(packaging);\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Open an archived epub\n\t\t * @private\n\t\t * @param  {binary} data\n\t\t * @param  {string} [encoding]\n\t\t * @return {Promise}\n\t\t */\n\t\topenEpub(data, encoding) {\n\t\t\treturn this.unarchive(data, encoding || this.settings.encoding)\n\t\t\t\t.then(() => {\n\t\t\t\t\treturn this.openContainer(CONTAINER_PATH);\n\t\t\t\t})\n\t\t\t\t.then((packagePath) => {\n\t\t\t\t\treturn this.openPackaging(packagePath);\n\t\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Open the epub container\n\t\t * @private\n\t\t * @param  {string} url\n\t\t * @return {string} packagePath\n\t\t */\n\t\topenContainer(url) {\n\t\t\treturn this.load(url)\n\t\t\t\t.then((xml) => {\n\t\t\t\t\tthis.container = new Container(xml);\n\t\t\t\t\treturn this.resolve(this.container.packagePath);\n\t\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Open the Open Packaging Format Xml\n\t\t * @private\n\t\t * @param  {string} url\n\t\t * @return {Promise}\n\t\t */\n\t\topenPackaging(url) {\n\t\t\tthis.path = new Path(url);\n\t\t\treturn this.load(url)\n\t\t\t\t.then((xml) => {\n\t\t\t\t\tthis.packaging = new Packaging(xml);\n\t\t\t\t\treturn this.packaging;\n\t\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Open the manifest JSON\n\t\t * @private\n\t\t * @param  {string} url\n\t\t * @return {Promise}\n\t\t */\n\t\topenManifest(url) {\n\t\t\tthis.path = new Path(url);\n\t\t\treturn this.load(url)\n\t\t\t\t.then((json) => {\n\t\t\t\t\tthis.packaging = new Packaging();\n\t\t\t\t\tthis.packaging.load(json);\n\t\t\t\t\treturn this.packaging;\n\t\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Load a resource from the Book\n\t\t * @private\n\t\t * @param  {string} path path to the resource to load\n\t\t * @return {Promise}     returns a promise with the requested resource\n\t\t */\n\t\tload(path, type$$1) {\n\t\t\tvar resolved;\n\n\t\t\tif(this.archived) {\n\t\t\t\tresolved = this.resolve(path);\n\t\t\t\treturn this.archive.request(resolved, type$$1);\n\t\t\t} else {\n\t\t\t\tresolved = this.resolve(path);\n\t\t\t\treturn this.request(resolved, type$$1, this.settings.requestCredentials, this.settings.requestHeaders);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Resolve a path to it's absolute position in the Book\n\t\t * @private\n\t\t * @param  {string} path\n\t\t * @param  {boolean} [absolute] force resolving the full URL\n\t\t * @return {string}          the resolved path string\n\t\t */\n\t\tresolve(path, absolute) {\n\t\t\tif (!path) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet resolved = path;\n\t\t\tlet isAbsolute = (path.indexOf(\"://\") > -1);\n\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn path;\n\t\t\t}\n\n\t\t\tif (this.path) {\n\t\t\t\tresolved = this.path.resolve(path);\n\t\t\t}\n\n\t\t\tif(absolute === true || this.url) {\n\t\t\t\tresolved = this.url.resolve(resolved);\n\t\t\t}\n\n\t\t\treturn resolved;\n\t\t}\n\n\t\t/**\n\t\t * Determine the type of they input passed to open\n\t\t * @private\n\t\t * @param  {string} input\n\t\t * @return {string}  binary | directory | epub | opf\n\t\t */\n\t\tdetermineType(input) {\n\t\t\tvar url;\n\t\t\tvar path;\n\t\t\tvar extension;\n\n\t\t\tif (this.settings.encoding === \"base64\") {\n\t\t\t\treturn INPUT_TYPE.BASE64;\n\t\t\t}\n\n\t\t\tif(typeof(input) != \"string\") {\n\t\t\t\treturn INPUT_TYPE.BINARY;\n\t\t\t}\n\n\t\t\turl = new Url(input);\n\t\t\tpath = url.path();\n\t\t\textension = path.extension;\n\n\t\t\tif (!extension) {\n\t\t\t\treturn INPUT_TYPE.DIRECTORY;\n\t\t\t}\n\n\t\t\tif(extension === \"epub\"){\n\t\t\t\treturn INPUT_TYPE.EPUB;\n\t\t\t}\n\n\t\t\tif(extension === \"opf\"){\n\t\t\t\treturn INPUT_TYPE.OPF;\n\t\t\t}\n\n\t\t\tif(extension === \"json\"){\n\t\t\t\treturn INPUT_TYPE.MANIFEST;\n\t\t\t}\n\t\t}\n\n\n\t\t/**\n\t\t * unpack the contents of the Packaging\n\t\t * @private\n\t\t * @param {document} packageXml XML Document\n\t\t */\n\t\tunpack(packaging) {\n\t\t\tthis.package = packaging;\n\n\t\t\tlet url;\n\t\t\tlet path = this.path.toString();\n\t\t\tif(this.archived) {\n\t\t\t\turl = new Url(path, \"\");\n\t\t\t} else if (this.url) {\n\t\t\t\turl = this.url;\n\t\t\t} else {\n\t\t\t\turl = new Url(path);\n\t\t\t}\n\n\t\t\tthis.resources = new Resources(this.package.manifest, {\n\t\t\t\tarchive: this.archive,\n\t\t\t\turl: url,\n\t\t\t\tload: this.load.bind(this),\n\t\t\t\treplacements: this.settings.replacements,\n\t\t\t\tinject: {\n\t\t\t\t\tscript: this.settings.script,\n\t\t\t\t\tstylesheet: this.settings.stylesheet,\n\t\t\t\t\tidentifer: this.package.metadata.identifier\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tlet processed = [];\n\t\t\tlet crossdomain = false;//url.origin !== location.origin;\n\n\t\t\t// If caches doesn't exist, use replacements instead\n\t\t\tif (typeof(caches) === \"undefined\") {\n\t\t\t\tthis.settings.replacements = true;\n\t\t\t\tthis.settings.cache = false;\n\t\t\t}\n\n\t\t\t// If we are using a worker and cache isn't set,\n\t\t\t// we should cache the resources if we can\n\t\t\tif (typeof(this.settings.cache) === \"undefined\" &&\n\t\t\t\t\tthis.settings.worker) {\n\t\t\t\tthis.settings.cache = true;\n\t\t\t}\n\n\t\t\t// If the resource is Cross Domain, and we aren't using cache then\n\t\t\t// replacements are needed.\n\t\t\tif ((crossdomain || this.archived ) &&\n\t\t\t\t\t!this.settings.worker &&\n\t\t\t\t\t!this.settings.cache &&\n\t\t\t\t\ttypeof(this.settings.replacements) === \"undefined\") {\n\t\t\t\tthis.settings.replacements = true;\n\t\t\t}\n\n\t\t\tif (this.settings.cache && typeof(caches) != \"undefined\") {\n\n\t\t\t\tlet uriComponent;\n\t\t\t\tlet cached;\n\t\t\t\tlet key;\n\n\t\t\t\tif (this.archived) {\n\t\t\t\t\turiComponent = encodeURIComponent(this.locationUrl.toString());\n\t\t\t\t\tkey = \"epubjs-zip/\";\n\t\t\t\t\turl = new Url(key + uriComponent + path, location.href);\n\t\t\t\t\tcached = this.resources.cache(key, url.toString());\n\n\t\t\t\t\tthis.cacheUrl = url;\n\t\t\t\t} else if (crossdomain) {\n\t\t\t\t\turiComponent = encodeURIComponent(this.locationUrl.origin);\n\t\t\t\t\tkey = \"epubjs-proxy/\";\n\t\t\t\t\turl = new Url(key + uriComponent + path, location.href);\n\t\t\t\t\tcached = this.resources.cache(key, url.toString());\n\n\t\t\t\t\tthis.cacheUrl = url;\n\t\t\t\t}\n\n\t\t\t\t// Wait for injection (not handled in service worker)\n\t\t\t\tif (this.settings.script || this.settings.stylesheet ) {\n\t\t\t\t\tprocessed.push(cached);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( this.settings.replacements) {\n\t\t\t\tlet replacements = this.resources.replacements();\n\t\t\t\tprocessed.push(replacements);\n\t\t\t}\n\n\t\t\treturn Promise.all(processed).then(() => {\n\t\t\t\t\treturn this.loadNavigation(this.package).then(() => {\n\t\t\t\t\t\treturn this.navigation;\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.isOpen = true;\n\n\t\t\t\t\t// Remove zip after cached\n\t\t\t\t\t// if (this.archive) {\n\t\t\t\t\t// \tthis.archive.destroy();\n\t\t\t\t\t// }\n\n\t\t\t\t\tthis.book = this.toBook();\n\n\t\t\t\t\t// Resolve book opened promise\n\t\t\t\t\tthis.opening.resolve(this);\n\n\t\t\t\t\treturn this.book;\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t});\n\n\t\t}\n\n\t\tcache(key, url, crossdomain) {\n\t\t\tif (!key) {\n\t\t\t\tkey = this.key();\n\t\t\t}\n\n\t\t\treturn this.resources.cache(key, url, crossdomain)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.book = this.toBook();\n\t\t\t\t\treturn this.book;\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t});\n\t\t}\n\n\t\treplacements() {\n\t\t\treturn this.resources.replacements()\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.book = this.toBook();\n\t\t\t\t\treturn this.book;\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Load Navigation and PageList from package\n\t\t * @private\n\t\t * @param {document} opf XML Document\n\t\t */\n\t\tloadNavigation(opf) {\n\t\t\tlet navPath = opf.navPath || opf.ncxPath;\n\t\t\tlet toc = opf.toc;\n\n\t\t\tif (!navPath) {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tthis.navigation = new Navigation$1(null);\n\t\t\t\t\tthis.pageList = new PageList();\n\n\t\t\t\t\tresolve(this.navigation);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this.load(navPath, \"xml\")\n\t\t\t\t.then((xml) => {\n\t\t\t\t\tthis.navigation = new Navigation$1(xml, this.resolve(navPath));\n\t\t\t\t\tthis.pageList = new PageList(xml);\n\t\t\t\t\treturn this.navigation;\n\t\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Set if request should use withCredentials\n\t\t * @param {boolean} credentials\n\t\t */\n\t\tsetRequestCredentials(credentials) {\n\t\t\tthis.settings.requestCredentials = credentials;\n\t\t}\n\n\t\t/**\n\t\t * Set headers request should use\n\t\t * @param {object} headers\n\t\t */\n\t\tsetRequestHeaders(headers) {\n\t\t\tthis.settings.requestHeaders = headers;\n\t\t}\n\n\t\t/**\n\t\t * Unarchive a zipped epub\n\t\t * @private\n\t\t * @param  {binary} input epub data\n\t\t * @param  {string} [encoding]\n\t\t * @return {Archive}\n\t\t */\n\t\tunarchive(input, encoding) {\n\t\t\tthis.archive = new Archive();\n\t\t\treturn this.archive.open(input, encoding);\n\t\t}\n\n\t\tgenerateLocations(breakPoint) {\n\t\t\tif (!this.book) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this.locations) {\n\t\t\t\tthis.locations = new Locations();\n\t\t\t}\n\t\t\treturn this.locations.generate(this.book.sections, breakPoint)\n\t\t\t\t.then(locations => {\n\t\t\t\t\tthis.book.locations = locations;\n\t\t\t\t\treturn locations;\n\t\t\t\t});\n\t\t}\n\n\t\tloadLocations(json) {\n\t\t\tlet locations;\n\t\t\tif (!this.book) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this.locations) {\n\t\t\t\tthis.locations = new Locations();\n\t\t\t}\n\n\t\t\tif (typeof locations === \"string\") {\n\t\t\t\tlocations = JSON.parse(json);\n\t\t\t} else {\n\t\t\t\tlocations = json;\n\t\t\t}\n\n\t\t\tthis.book.locations = locations;\n\n\t\t\treturn locations;\n\t\t}\n\n\t\t/**\n\t\t * Generates the Book Key using the identifer in the manifest or other string provided\n\t\t * @param  {string} [identifier] to use instead of metadata identifier\n\t\t * @return {string} key\n\t\t */\n\t\tkey(identifier) {\n\t\t\tvar ident = identifier || this.package.metadata.identifier || this.url.filename;\n\t\t\treturn `epubjs-${EPUBJS_VERSION}-${ident}`;\n\t\t}\n\n\t\ttoBook() {\n\t\t\tlet resolver = this.resources.resolve.bind(this.resources);\n\n\t\t\tlet book = new Book();\n\n\t\t\tbook.url = \"\";\n\n\t\t\tif (this.cacheUrl) {\n\t\t\t\tbook.url = this.cacheUrl.resolve(\"manifest.json\");\n\t\t\t} else {\n\t\t\t\tbook.url = this.locationUrl.resolve(\"manifest.json\");\n\t\t\t}\n\n\t\t\tif (this.archived) {\n\t\t\t\tbook.source = this.locationUrl.toString();\n\t\t\t}\n\n\t\t\tbook.resources = this.resources.toArray();\n\n\t\t\tbook.spine = this.package.spine.map( (item, index) => {\n\t\t\t\tlet resource = this.resources.get(item.idref) || item;\n\t\t\t\tlet url = this.resources.resolve(resource.href);\n\n\t\t\t\t// Remove from resources array\n\t\t\t\tlet i = book.resources.findIndex((r) => {\n\t\t\t\t\treturn r.id === resource.id;\n\t\t\t\t});\n\n\t\t\t\tif (i > -1) {\n\t\t\t\t\tbook.resources.splice(i, 1);\n\t\t\t\t}\n\n\t\t\t\titem.index = index;\n\t\t\t\titem.cfiBase = new EpubCFI().generateChapterComponent(this.package.spineNodeIndex, item.index, item.idref);\n\n\t\t\t\tif(resource) {\n\t\t\t\t\titem.source = resource.href;\n\t\t\t\t\titem.href = url;\n\t\t\t\t\titem.type = resource.type;\n\n\t\t\t\t\tif(resource.properties && resource.properties.length){\n\t\t\t\t\t\titem.properties.push.apply(item.properties, resource.properties);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn item;\n\t\t\t});\n\n\t\t\tbook.metadata = this.package.metadata;\n\n\t\t\tif (this.navigation) {\n\t\t\t\tbook.toc = this.navigation.getTocArray(resolver);\n\t\t\t\tbook.landmarks = this.navigation.getLandmarksArray(resolver);\n\t\t\t}\n\n\t\t\tif (this.pageList) {\n\t\t\t\tbook.pages = this.pageList.toArray();\n\t\t\t}\n\n\t\t\tif (this.locations) {\n\t\t\t\tbook.locations = this.locations.toArray();\n\t\t\t}\n\n\t\t\treturn book;\n\t\t}\n\n\t\t/**\n\t\t * Destroy the Book and all associated objects\n\t\t */\n\t\tdestroy() {\n\t\t\tthis.opened = undefined;\n\t\t\tthis.loading = undefined;\n\t\t\tthis.loaded = undefined;\n\t\t\tthis.ready = undefined;\n\n\t\t\tthis.isOpen = false;\n\t\t\tthis.isRendered = false; //TODO: ?\n\n\t\t\tthis.book && this.book.destroy();\n\t\t\tthis.locations && this.locations.destroy();\n\t\t\tthis.pageList && this.pageList.destroy();\n\t\t\tthis.archive && this.archive.destroy();\n\t\t\tthis.resources && this.resources.destroy();\n\t\t\tthis.container && this.container.destroy();\n\t\t\tthis.packaging && this.packaging.destroy();\n\n\t\t\tthis.spine = undefined;\n\t\t\tthis.locations = undefined;\n\t\t\tthis.pageList = undefined;\n\t\t\tthis.archive = undefined;\n\t\t\tthis.resources = undefined;\n\t\t\tthis.container = undefined;\n\t\t\tthis.packaging = undefined;\n\n\t\t\tthis.navigation = undefined;\n\t\t\tthis.url = undefined;\n\t\t\tthis.path = undefined;\n\t\t\tthis.archived = false;\n\n\t\t}\n\t}\n\n\teventEmitter(Epub.prototype);\n\n\tvar svg = createCommonjsModule(function (module, exports) {\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.createElement = createElement;\n\tfunction createElement(name) {\n\t    return document.createElementNS('http://www.w3.org/2000/svg', name);\n\t}\n\n\texports.default = {\n\t    createElement: createElement\n\t};\n\t});\n\n\tunwrapExports(svg);\n\tvar svg_1 = svg.createElement;\n\n\tvar events = createCommonjsModule(function (module, exports) {\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.proxyMouse = proxyMouse;\n\texports.clone = clone;\n\t// import 'babelify/polyfill'; // needed for Object.assign\n\n\texports.default = {\n\t    proxyMouse: proxyMouse\n\t};\n\n\t/**\n\t * Start proxying all mouse events that occur on the target node to each node in\n\t * a set of tracked nodes.\n\t *\n\t * The items in tracked do not strictly have to be DOM Nodes, but they do have\n\t * to have dispatchEvent, getBoundingClientRect, and getClientRects methods.\n\t *\n\t * @param target {Node} The node on which to listen for mouse events.\n\t * @param tracked {Node[]} A (possibly mutable) array of nodes to which to proxy\n\t *                         events.\n\t */\n\n\tfunction proxyMouse(target, tracked) {\n\t    function dispatch(e) {\n\t        // We walk through the set of tracked elements in reverse order so that\n\t        // events are sent to those most recently added first.\n\t        //\n\t        // This is the least surprising behaviour as it simulates the way the\n\t        // browser would work if items added later were drawn \"on top of\"\n\t        // earlier ones.\n\t        for (var i = tracked.length - 1; i >= 0; i--) {\n\t            var t = tracked[i];\n\t            var x = e.clientX;\n\t            var y = e.clientY;\n\n\t            if (e.touches && e.touches.length) {\n\t                x = e.touches[0].clientX;\n\t                y = e.touches[0].clientY;\n\t            }\n\n\t            if (!contains(t, target, x, y)) {\n\t                continue;\n\t            }\n\n\t            // The event targets this mark, so dispatch a cloned event:\n\t            t.dispatchEvent(clone(e));\n\t            // We only dispatch the cloned event to the first matching mark.\n\t            break;\n\t        }\n\t    }\n\n\t    if (target.nodeName === \"iframe\" || target.nodeName === \"IFRAME\") {\n\n\t        try {\n\t            // Try to get the contents if same domain\n\t            this.target = target.contentDocument;\n\t        } catch (err) {\n\t            this.target = target;\n\t        }\n\t    } else {\n\t        this.target = target;\n\t    }\n\n\t    var _arr = ['mouseup', 'mousedown', 'click', 'touchstart'];\n\t    for (var _i = 0; _i < _arr.length; _i++) {\n\t        var ev = _arr[_i];\n\t        this.target.addEventListener(ev, function (e) {\n\t            return dispatch(e);\n\t        }, false);\n\t    }\n\t}\n\n\t/**\n\t * Clone a mouse event object.\n\t *\n\t * @param e {MouseEvent} A mouse event object to clone.\n\t * @returns {MouseEvent}\n\t */\n\tfunction clone(e) {\n\t    var opts = Object.assign({}, e, { bubbles: false });\n\t    try {\n\t        return new MouseEvent(e.type, opts);\n\t    } catch (err) {\n\t        // compat: webkit\n\t        var copy = document.createEvent('MouseEvents');\n\t        copy.initMouseEvent(e.type, false, opts.cancelable, opts.view, opts.detail, opts.screenX, opts.screenY, opts.clientX, opts.clientY, opts.ctrlKey, opts.altKey, opts.shiftKey, opts.metaKey, opts.button, opts.relatedTarget);\n\t        return copy;\n\t    }\n\t}\n\n\t/**\n\t * Check if the item contains the point denoted by the passed coordinates\n\t * @param item {Object} An object with getBoundingClientRect and getClientRects\n\t *                      methods.\n\t * @param x {Number}\n\t * @param y {Number}\n\t * @returns {Boolean}\n\t */\n\tfunction contains(item, target, x, y) {\n\t    // offset\n\t    var offset = target.getBoundingClientRect();\n\n\t    function rectContains(r, x, y) {\n\t        var top = r.top - offset.top;\n\t        var left = r.left - offset.left;\n\t        var bottom = top + r.height;\n\t        var right = left + r.width;\n\t        return top <= y && left <= x && bottom > y && right > x;\n\t    }\n\n\t    // Check overall bounding box first\n\t    var rect = item.getBoundingClientRect();\n\t    if (!rectContains(rect, x, y)) {\n\t        return false;\n\t    }\n\n\t    // Then continue to check each child rect\n\t    var rects = item.getClientRects();\n\t    for (var i = 0, len = rects.length; i < len; i++) {\n\t        if (rectContains(rects[i], x, y)) {\n\t            return true;\n\t        }\n\t    }\n\t    return false;\n\t}\n\t});\n\n\tunwrapExports(events);\n\tvar events_1 = events.proxyMouse;\n\tvar events_2 = events.clone;\n\n\tvar marks = createCommonjsModule(function (module, exports) {\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.Underline = exports.Highlight = exports.Mark = exports.Pane = undefined;\n\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\n\n\tvar _svg2 = _interopRequireDefault(svg);\n\n\n\n\tvar _events2 = _interopRequireDefault(events);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tvar Pane = exports.Pane = function () {\n\t    function Pane(target) {\n\t        var container = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document.body;\n\n\t        _classCallCheck(this, Pane);\n\n\t        this.target = target;\n\t        this.element = _svg2.default.createElement('svg');\n\t        this.marks = [];\n\n\t        // Match the coordinates of the target element\n\t        this.element.style.position = 'absolute';\n\t        // Disable pointer events\n\t        this.element.setAttribute('pointer-events', 'none');\n\n\t        // Set up mouse event proxying between the target element and the marks\n\t        _events2.default.proxyMouse(this.target, this.marks);\n\n\t        this.container = container;\n\t        this.container.appendChild(this.element);\n\n\t        this.render();\n\t    }\n\n\t    _createClass(Pane, [{\n\t        key: 'addMark',\n\t        value: function addMark(mark) {\n\t            var g = _svg2.default.createElement('g');\n\t            this.element.appendChild(g);\n\t            mark.bind(g, this.container);\n\n\t            this.marks.push(mark);\n\n\t            mark.render();\n\t            return mark;\n\t        }\n\t    }, {\n\t        key: 'removeMark',\n\t        value: function removeMark(mark) {\n\t            var idx = this.marks.indexOf(mark);\n\t            if (idx === -1) {\n\t                return;\n\t            }\n\t            var el = mark.unbind();\n\t            this.element.removeChild(el);\n\t            this.marks.splice(idx, 1);\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t            setCoords(this.element, coords(this.target, this.container));\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\n\t            try {\n\t                for (var _iterator = this.marks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var m = _step.value;\n\n\t                    m.render();\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }]);\n\n\t    return Pane;\n\t}();\n\n\tvar Mark = exports.Mark = function () {\n\t    function Mark() {\n\t        _classCallCheck(this, Mark);\n\n\t        this.element = null;\n\t    }\n\n\t    _createClass(Mark, [{\n\t        key: 'bind',\n\t        value: function bind(element, container) {\n\t            this.element = element;\n\t            this.container = container;\n\t        }\n\t    }, {\n\t        key: 'unbind',\n\t        value: function unbind() {\n\t            var el = this.element;\n\t            this.element = null;\n\t            return el;\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {}\n\t    }, {\n\t        key: 'dispatchEvent',\n\t        value: function dispatchEvent(e) {\n\t            if (!this.element) return;\n\t            this.element.dispatchEvent(e);\n\t        }\n\t    }, {\n\t        key: 'getBoundingClientRect',\n\t        value: function getBoundingClientRect() {\n\t            return this.element.getBoundingClientRect();\n\t        }\n\t    }, {\n\t        key: 'getClientRects',\n\t        value: function getClientRects() {\n\t            var rects = [];\n\t            var el = this.element.firstChild;\n\t            while (el) {\n\t                rects.push(el.getBoundingClientRect());\n\t                el = el.nextSibling;\n\t            }\n\t            return rects;\n\t        }\n\t    }, {\n\t        key: 'filteredRanges',\n\t        value: function filteredRanges() {\n\t            var rects = Array.from(this.range.getClientRects());\n\n\t            // De-duplicate the boxes\n\t            return rects.filter(function (box) {\n\t                for (var i = 0; i < rects.length; i++) {\n\t                    if (rects[i] === box) {\n\t                        return true;\n\t                    }\n\t                    var contained = contains(rects[i], box);\n\t                    if (contained) {\n\t                        return false;\n\t                    }\n\t                }\n\t                return true;\n\t            });\n\t        }\n\t    }]);\n\n\t    return Mark;\n\t}();\n\n\tvar Highlight = exports.Highlight = function (_Mark) {\n\t    _inherits(Highlight, _Mark);\n\n\t    function Highlight(range, className, data, attributes) {\n\t        _classCallCheck(this, Highlight);\n\n\t        var _this = _possibleConstructorReturn(this, (Highlight.__proto__ || Object.getPrototypeOf(Highlight)).call(this));\n\n\t        _this.range = range;\n\t        _this.className = className;\n\t        _this.data = data || {};\n\t        _this.attributes = attributes || {};\n\t        return _this;\n\t    }\n\n\t    _createClass(Highlight, [{\n\t        key: 'bind',\n\t        value: function bind(element, container) {\n\t            _get(Highlight.prototype.__proto__ || Object.getPrototypeOf(Highlight.prototype), 'bind', this).call(this, element, container);\n\n\t            for (var attr in this.data) {\n\t                if (this.data.hasOwnProperty(attr)) {\n\t                    this.element.dataset[attr] = this.data[attr];\n\t                }\n\t            }\n\n\t            for (var attr in this.attributes) {\n\t                if (this.attributes.hasOwnProperty(attr)) {\n\t                    this.element.setAttribute(attr, this.attributes[attr]);\n\t                }\n\t            }\n\n\t            if (this.className) {\n\t                this.element.classList.add(this.className);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t            // Empty element\n\t            while (this.element.firstChild) {\n\t                this.element.removeChild(this.element.firstChild);\n\t            }\n\n\t            var docFrag = this.element.ownerDocument.createDocumentFragment();\n\t            var filtered = this.filteredRanges();\n\t            var offset = this.element.getBoundingClientRect();\n\t            var container = this.container.getBoundingClientRect();\n\n\t            for (var i = 0, len = filtered.length; i < len; i++) {\n\t                var r = filtered[i];\n\t                var el = _svg2.default.createElement('rect');\n\t                el.setAttribute('x', r.left - offset.left + container.left);\n\t                el.setAttribute('y', r.top - offset.top + container.top);\n\t                el.setAttribute('height', r.height);\n\t                el.setAttribute('width', r.width);\n\t                docFrag.appendChild(el);\n\t            }\n\n\t            this.element.appendChild(docFrag);\n\t        }\n\t    }]);\n\n\t    return Highlight;\n\t}(Mark);\n\n\tvar Underline = exports.Underline = function (_Highlight) {\n\t    _inherits(Underline, _Highlight);\n\n\t    function Underline(range, className, data, attributes) {\n\t        _classCallCheck(this, Underline);\n\n\t        return _possibleConstructorReturn(this, (Underline.__proto__ || Object.getPrototypeOf(Underline)).call(this, range, className, data, attributes));\n\t    }\n\n\t    _createClass(Underline, [{\n\t        key: 'render',\n\t        value: function render() {\n\t            // Empty element\n\t            while (this.element.firstChild) {\n\t                this.element.removeChild(this.element.firstChild);\n\t            }\n\n\t            var docFrag = this.element.ownerDocument.createDocumentFragment();\n\t            var filtered = this.filteredRanges();\n\t            var offset = this.element.getBoundingClientRect();\n\t            var container = this.container.getBoundingClientRect();\n\n\t            for (var i = 0, len = filtered.length; i < len; i++) {\n\t                var r = filtered[i];\n\n\t                var rect = _svg2.default.createElement('rect');\n\t                rect.setAttribute('x', r.left - offset.left + container.left);\n\t                rect.setAttribute('y', r.top - offset.top + container.top);\n\t                rect.setAttribute('height', r.height);\n\t                rect.setAttribute('width', r.width);\n\t                rect.setAttribute('fill', 'none');\n\n\t                var line = _svg2.default.createElement('line');\n\t                line.setAttribute('x1', r.left - offset.left + container.left);\n\t                line.setAttribute('x2', r.left - offset.left + container.left + r.width);\n\t                line.setAttribute('y1', r.top - offset.top + container.top + r.height - 1);\n\t                line.setAttribute('y2', r.top - offset.top + container.top + r.height - 1);\n\n\t                line.setAttribute('stroke-width', 1);\n\t                line.setAttribute('stroke', 'black'); //TODO: match text color?\n\t                line.setAttribute('stroke-linecap', 'square');\n\n\t                docFrag.appendChild(rect);\n\n\t                docFrag.appendChild(line);\n\t            }\n\n\t            this.element.appendChild(docFrag);\n\t        }\n\t    }]);\n\n\t    return Underline;\n\t}(Highlight);\n\n\tfunction coords(el, container) {\n\t    var offset = container.getBoundingClientRect();\n\t    var rect = el.getBoundingClientRect();\n\n\t    return {\n\t        top: rect.top - offset.top,\n\t        left: rect.left - offset.left,\n\t        height: el.scrollHeight,\n\t        width: el.scrollWidth\n\t    };\n\t}\n\n\tfunction setCoords(el, coords) {\n\t    el.style.top = coords.top + 'px';\n\t    el.style.left = coords.left + 'px';\n\t    el.style.height = coords.height + 'px';\n\t    el.style.width = coords.width + 'px';\n\t}\n\n\tfunction contains(rect1, rect2) {\n\t    return rect2.right <= rect1.right && rect2.left >= rect1.left && rect2.top >= rect1.top && rect2.bottom <= rect1.bottom;\n\t}\n\t});\n\n\tunwrapExports(marks);\n\tvar marks_1 = marks.Underline;\n\tvar marks_2 = marks.Highlight;\n\tvar marks_3 = marks.Mark;\n\tvar marks_4 = marks.Pane;\n\n\tclass IframeView {\n\t\tconstructor(section, options) {\n\t\t\tthis.settings = extend({\n\t\t\t\tignoreClass : \"\",\n\t\t\t\taxis: options.layout && options.layout.props.flow === \"scrolled\" ? \"vertical\" : \"horizontal\",\n\t\t\t\tdirection: undefined,\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tlayout: undefined,\n\t\t\t\tglobalLayoutProperties: {},\n\t\t\t\tmethod: \"url\"\n\t\t\t}, options || {});\n\n\t\t\tthis.id = \"epubjs-view-\" + uuid();\n\t\t\tthis.section = section;\n\t\t\tthis.index = section.index;\n\n\t\t\tthis.element = this.container(this.settings.axis);\n\n\t\t\tthis.added = false;\n\t\t\tthis.displayed = false;\n\t\t\tthis.rendered = false;\n\n\t\t\t// this.width  = this.settings.width;\n\t\t\t// this.height = this.settings.height;\n\n\t\t\tthis.fixedWidth  = 0;\n\t\t\tthis.fixedHeight = 0;\n\n\t\t\t// Blank Cfi for Parsing\n\t\t\tthis.epubcfi = new EpubCFI();\n\n\t\t\tthis.layout = this.settings.layout;\n\t\t\t// Dom events to listen for\n\t\t\t// this.listenedEvents = [\"keydown\", \"keyup\", \"keypressed\", \"mouseup\", \"mousedown\", \"click\", \"touchend\", \"touchstart\"];\n\n\t\t\tthis.pane = undefined;\n\t\t\tthis.highlights = {};\n\t\t\tthis.underlines = {};\n\t\t\tthis.marks = {};\n\n\t\t}\n\n\t\tcontainer(axis) {\n\t\t\tvar element = document.createElement(\"div\");\n\n\t\t\telement.classList.add(\"epub-view\");\n\n\t\t\t// this.element.style.minHeight = \"100px\";\n\t\t\telement.style.height = \"0px\";\n\t\t\telement.style.width = \"0px\";\n\t\t\telement.style.overflow = \"hidden\";\n\t\t\telement.style.position = \"relative\";\n\t\t\telement.style.display = \"block\";\n\n\t\t\tif(axis && axis == \"horizontal\"){\n\t\t\t\telement.style.flex = \"none\";\n\t\t\t} else {\n\t\t\t\telement.style.flex = \"initial\";\n\t\t\t}\n\n\t\t\treturn element;\n\t\t}\n\n\t\tcreate() {\n\n\t\t\tif(this.iframe) {\n\t\t\t\treturn this.iframe;\n\t\t\t}\n\n\t\t\tif(!this.element) {\n\t\t\t\tthis.element = this.createContainer();\n\t\t\t}\n\n\t\t\tthis.iframe = document.createElement(\"iframe\");\n\t\t\tthis.iframe.id = this.id;\n\t\t\tthis.iframe.scrolling = \"no\"; // Might need to be removed: breaks ios width calculations\n\t\t\tthis.iframe.style.overflow = \"hidden\";\n\t\t\tthis.iframe.seamless = \"seamless\";\n\t\t\t// Back up if seamless isn't supported\n\t\t\tthis.iframe.style.border = \"none\";\n\n\t\t\tthis.iframe.setAttribute(\"enable-annotation\", \"true\");\n\n\t\t\tthis.resizing = true;\n\n\t\t\t// this.iframe.style.display = \"none\";\n\t\t\tthis.element.style.visibility = \"hidden\";\n\t\t\tthis.iframe.style.visibility = \"hidden\";\n\n\t\t\tthis.iframe.style.width = \"0\";\n\t\t\tthis.iframe.style.height = \"0\";\n\t\t\tthis._width = 0;\n\t\t\tthis._height = 0;\n\n\t\t\tthis.element.setAttribute(\"ref\", this.index);\n\n\t\t\tthis.element.appendChild(this.iframe);\n\t\t\tthis.added = true;\n\n\t\t\tthis.elementBounds = bounds(this.element);\n\n\t\t\t// if(width || height){\n\t\t\t//   this.resize(width, height);\n\t\t\t// } else if(this.width && this.height){\n\t\t\t//   this.resize(this.width, this.height);\n\t\t\t// } else {\n\t\t\t//   this.iframeBounds = bounds(this.iframe);\n\t\t\t// }\n\n\n\t\t\tif((\"srcdoc\" in this.iframe)) {\n\t\t\t\tthis.supportsSrcdoc = true;\n\t\t\t} else {\n\t\t\t\tthis.supportsSrcdoc = false;\n\t\t\t}\n\n\t\t\t// if (!this.settings.method) {\n\t\t\t// \tthis.settings.method = this.supportsSrcdoc ? \"srcdoc\" : \"write\";\n\t\t\t// }\n\n\t\t\treturn this.iframe;\n\t\t}\n\n\t\trender(request$$1, show) {\n\t\t\tlet contents;\n\t\t\t// view.onLayout = this.layout.format.bind(this.layout);\n\t\t\tthis.create();\n\n\t\t\t// Fit to size of the container, apply padding\n\t\t\tthis.size();\n\n\t\t\tif(this.settings.method === \"url\") {\n\t\t\t\tcontents = this.section.href;\n\t\t\t} else if(contents) {\n\t\t\t\tcontents = this.section.contents;\n\t\t\t} else {\n\t\t\t\tcontents = request(this.section.href);\n\t\t\t}\n\n\t\t\t// Render Chain\n\t\t\treturn this.load(contents)\n\t\t\t\t.then(function(){\n\n\t\t\t\t\t// apply the layout function to the contents\n\t\t\t\t\tthis.layout.format(this.contents);\n\n\t\t\t\t\t// find and report the writingMode axis\n\t\t\t\t\tlet writingMode = this.contents.writingMode();\n\t\t\t\t\tlet axis = (writingMode.indexOf(\"vertical\") === 0) ? \"vertical\" : \"horizontal\";\n\n\t\t\t\t\tthis.setAxis(axis);\n\t\t\t\t\tthis.emit(EVENTS.VIEWS.AXIS, axis);\n\n\n\t\t\t\t\t// Listen for events that require an expansion of the iframe\n\t\t\t\t\tthis.addListeners();\n\n\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\t// Expand the iframe to the full size of the content\n\t\t\t\t\t\tthis.expand();\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t});\n\n\t\t\t\t}.bind(this), function(e){\n\t\t\t\t\tthis.emit(EVENTS.VIEWS.LOAD_ERROR, e);\n\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\treject(e);\n\t\t\t\t\t});\n\t\t\t\t}.bind(this))\n\t\t\t\t.then(function() {\n\t\t\t\t\tthis.emit(EVENTS.VIEWS.RENDERED, this.section);\n\t\t\t\t}.bind(this));\n\n\t\t}\n\n\t\treset () {\n\t\t\tif (this.iframe) {\n\t\t\t\tthis.iframe.style.width = \"0\";\n\t\t\t\tthis.iframe.style.height = \"0\";\n\t\t\t\tthis._width = 0;\n\t\t\t\tthis._height = 0;\n\t\t\t\tthis._textWidth = undefined;\n\t\t\t\tthis._contentWidth = undefined;\n\t\t\t\tthis._textHeight = undefined;\n\t\t\t\tthis._contentHeight = undefined;\n\t\t\t}\n\t\t\tthis._needsReframe = true;\n\t\t}\n\n\t\t// Determine locks base on settings\n\t\tsize(_width, _height) {\n\t\t\tvar width = _width || this.settings.width;\n\t\t\tvar height = _height || this.settings.height;\n\n\t\t\tif(this.layout.name === \"pre-paginated\") {\n\t\t\t\tthis.lock(\"both\", width, height);\n\t\t\t} else if(this.settings.axis === \"horizontal\") {\n\t\t\t\tthis.lock(\"height\", width, height);\n\t\t\t} else {\n\t\t\t\tthis.lock(\"width\", width, height);\n\t\t\t}\n\n\t\t\tthis.settings.width = width;\n\t\t\tthis.settings.height = height;\n\t\t}\n\n\t\t// Lock an axis to element dimensions, taking borders into account\n\t\tlock(what, width, height) {\n\t\t\tvar elBorders = borders(this.element);\n\t\t\tvar iframeBorders;\n\n\t\t\tif(this.iframe) {\n\t\t\t\tiframeBorders = borders(this.iframe);\n\t\t\t} else {\n\t\t\t\tiframeBorders = {width: 0, height: 0};\n\t\t\t}\n\n\t\t\tif(what == \"width\" && isNumber(width)){\n\t\t\t\tthis.lockedWidth = width - elBorders.width - iframeBorders.width;\n\t\t\t\t// this.resize(this.lockedWidth, width); //  width keeps ratio correct\n\t\t\t}\n\n\t\t\tif(what == \"height\" && isNumber(height)){\n\t\t\t\tthis.lockedHeight = height - elBorders.height - iframeBorders.height;\n\t\t\t\t// this.resize(width, this.lockedHeight);\n\t\t\t}\n\n\t\t\tif(what === \"both\" &&\n\t\t\t\t isNumber(width) &&\n\t\t\t\t isNumber(height)){\n\n\t\t\t\tthis.lockedWidth = width - elBorders.width - iframeBorders.width;\n\t\t\t\tthis.lockedHeight = height - elBorders.height - iframeBorders.height;\n\t\t\t\t// this.resize(this.lockedWidth, this.lockedHeight);\n\t\t\t}\n\n\t\t\tif(this.displayed && this.iframe) {\n\n\t\t\t\t// this.contents.layout();\n\t\t\t\tthis.expand();\n\t\t\t}\n\n\n\n\t\t}\n\n\t\t// Resize a single axis based on content dimensions\n\t\texpand(force) {\n\t\t\tvar width = this.lockedWidth;\n\t\t\tvar height = this.lockedHeight;\n\t\t\tvar columns;\n\n\t\t\tif(!this.iframe || this._expanding) return;\n\n\t\t\tthis._expanding = true;\n\n\t\t\tif(this.layout.name === \"pre-paginated\") {\n\t\t\t\twidth = this.layout.columnWidth;\n\t\t\t\theight = this.layout.height;\n\t\t\t}\n\t\t\t// Expand Horizontally\n\t\t\telse if(this.settings.axis === \"horizontal\") {\n\t\t\t\t// Get the width of the text\n\t\t\t\twidth = this.contents.textWidth();\n\n\t\t\t\tif (width % this.layout.pageWidth > 0) {\n\t\t\t\t\twidth = Math.ceil(width / this.layout.pageWidth) * this.layout.pageWidth;\n\t\t\t\t}\n\n\t\t\t\tif (this.settings.forceEvenPages) {\n\t\t\t\t\tcolumns = (width / this.layout.delta);\n\t\t\t\t\tif ( this.layout.divisor > 1 &&\n\t\t\t\t\t\t\t this.layout.name === \"reflowable\" &&\n\t\t\t\t\t\t\t(columns % 2 > 0)) {\n\t\t\t\t\t\t// add a blank page\n\t\t\t\t\t\twidth += this.layout.gap + this.layout.columnWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} // Expand Vertically\n\t\t\telse if(this.settings.axis === \"vertical\") {\n\t\t\t\theight = this.contents.scrollHeight();\n\t\t\t}\n\n\t\t\t// Only Resize if dimensions have changed or\n\t\t\t// if Frame is still hidden, so needs reframing\n\t\t\tif(this._needsReframe || width != this._width || height != this._height){\n\t\t\t\tthis.reframe(width, height);\n\t\t\t}\n\n\t\t\tthis._expanding = false;\n\t\t}\n\n\t\treframe(width, height) {\n\t\t\tvar size;\n\n\t\t\tif(isNumber(width)){\n\t\t\t\tthis.element.style.width = width + \"px\";\n\t\t\t\tthis.iframe.style.width = width + \"px\";\n\t\t\t\tthis._width = width;\n\t\t\t}\n\n\t\t\tif(isNumber(height)){\n\t\t\t\tthis.element.style.height = height + \"px\";\n\t\t\t\tthis.iframe.style.height = height + \"px\";\n\t\t\t\tthis._height = height;\n\t\t\t}\n\n\t\t\tlet widthDelta = this.prevBounds ? width - this.prevBounds.width : width;\n\t\t\tlet heightDelta = this.prevBounds ? height - this.prevBounds.height : height;\n\n\t\t\tsize = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\twidthDelta: widthDelta,\n\t\t\t\theightDelta: heightDelta,\n\t\t\t};\n\n\t\t\tthis.pane && this.pane.render();\n\n\t\t\tthis.onResize(this, size);\n\n\t\t\tthis.emit(EVENTS.VIEWS.RESIZED, size);\n\n\t\t\tthis.prevBounds = size;\n\n\t\t\tthis.elementBounds = bounds(this.element);\n\n\t\t}\n\n\n\t\tload(contents) {\n\t\t\tvar loading = new defer();\n\t\t\tvar loaded = loading.promise;\n\n\t\t\tif(!this.iframe) {\n\t\t\t\tloading.reject(new Error(\"No Iframe Available\"));\n\t\t\t\treturn loaded;\n\t\t\t}\n\n\t\t\tthis.iframe.onload = function(event) {\n\n\t\t\t\tthis.onLoad(event, loading);\n\n\t\t\t}.bind(this);\n\n\t\t\tif (this.settings.method != \"url\") {\n\t\t\t\tcontents\n\t\t\t\t\t.then((r) => {\n\t\t\t\t\t\tlet text = serialize(r);\n\t\t\t\t\t\tif (this.settings.method === \"blobUrl\") {\n\t\t\t\t\t\t\tthis.blobUrl = createBlobUrl(text, \"application/xhtml+xml\");\n\t\t\t\t\t\t\tthis.iframe.src = this.blobUrl;\n\t\t\t\t\t\t} else if(this.settings.method === \"srcdoc\"){\n\t\t\t\t\t\t\tthis.iframe.srcdoc = text;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.iframe.src = contents;\n\t\t\t}\n\n\t\t\treturn loaded;\n\t\t}\n\n\t\tonLoad(event, promise) {\n\n\t\t\tthis.window = this.iframe.contentWindow;\n\t\t\tthis.document = this.iframe.contentDocument;\n\n\t\t\tthis.contents = new Contents(this.document, this.document.body, this.section.cfiBase, this.section.index);\n\n\t\t\tthis.rendering = false;\n\n\t\t\t/*\n\t\t\tTODO: this seems not needed with replace cannonical\n\t\t\tvar link = this.document.querySelector(\"link[rel='canonical']\");\n\t\t\tif (link) {\n\t\t\t\tlink.setAttribute(\"href\", this.section.canonical);\n\t\t\t} else {\n\t\t\t\tlink = this.document.createElement(\"link\");\n\t\t\t\tlink.setAttribute(\"rel\", \"canonical\");\n\t\t\t\tlink.setAttribute(\"href\", this.section.canonical);\n\t\t\t\tthis.document.querySelector(\"head\").appendChild(link);\n\t\t\t}\n\t\t\t*/\n\n\t\t\tthis.contents.on(EVENTS.CONTENTS.EXPAND, () => {\n\t\t\t\tif(this.displayed && this.iframe) {\n\t\t\t\t\tthis.expand();\n\t\t\t\t\tif (this.contents) {\n\t\t\t\t\t\tthis.layout.format(this.contents);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.contents.on(EVENTS.CONTENTS.RESIZE, (e) => {\n\t\t\t\tif(this.displayed && this.iframe) {\n\t\t\t\t\tthis.expand();\n\t\t\t\t\tif (this.contents) {\n\t\t\t\t\t\tthis.layout.format(this.contents);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpromise.resolve(this.contents);\n\t\t}\n\n\t\tsetLayout(layout) {\n\t\t\tthis.layout = layout;\n\n\t\t\tif (this.contents) {\n\t\t\t\tthis.layout.format(this.contents);\n\t\t\t\tthis.expand();\n\t\t\t}\n\t\t}\n\n\t\tsetAxis(axis) {\n\n\t\t\t// Force vertical for scrolled\n\t\t\tif (this.layout.props.flow === \"scrolled\") {\n\t\t\t\taxis = \"vertical\";\n\t\t\t}\n\n\t\t\tthis.settings.axis = axis;\n\n\t\t\tif(axis == \"horizontal\"){\n\t\t\t\tthis.element.style.flex = \"none\";\n\t\t\t} else {\n\t\t\t\tthis.element.style.flex = \"initial\";\n\t\t\t}\n\n\t\t\tthis.size();\n\n\t\t}\n\n\t\taddListeners() {\n\t\t\t//TODO: Add content listeners for expanding\n\t\t}\n\n\t\tremoveListeners(layoutFunc) {\n\t\t\t//TODO: remove content listeners for expanding\n\t\t}\n\n\t\tdisplay(request$$1) {\n\t\t\tvar displayed = new defer();\n\n\t\t\tif (!this.displayed) {\n\n\t\t\t\tthis.render(request$$1)\n\t\t\t\t\t.then(function () {\n\n\t\t\t\t\t\tthis.emit(EVENTS.VIEWS.DISPLAYED, this);\n\t\t\t\t\t\tthis.onDisplayed(this);\n\n\t\t\t\t\t\tthis.displayed = true;\n\t\t\t\t\t\tdisplayed.resolve(this);\n\n\t\t\t\t\t}.bind(this), function (err) {\n\t\t\t\t\t\tdisplayed.reject(err, this);\n\t\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tdisplayed.resolve(this);\n\t\t\t}\n\n\n\t\t\treturn displayed.promise;\n\t\t}\n\n\t\tshow() {\n\n\t\t\tthis.element.style.visibility = \"visible\";\n\n\t\t\tif(this.iframe){\n\t\t\t\tthis.iframe.style.visibility = \"visible\";\n\t\t\t}\n\n\t\t\tthis.emit(EVENTS.VIEWS.SHOWN, this);\n\t\t}\n\n\t\thide() {\n\t\t\t// this.iframe.style.display = \"none\";\n\t\t\tthis.element.style.visibility = \"hidden\";\n\t\t\tthis.iframe.style.visibility = \"hidden\";\n\n\t\t\tthis.stopExpanding = true;\n\t\t\tthis.emit(EVENTS.VIEWS.HIDDEN, this);\n\t\t}\n\n\t\toffset() {\n\t\t\treturn {\n\t\t\t\ttop: this.element.offsetTop,\n\t\t\t\tleft: this.element.offsetLeft\n\t\t\t};\n\t\t}\n\n\t\twidth() {\n\t\t\treturn this._width;\n\t\t}\n\n\t\theight() {\n\t\t\treturn this._height;\n\t\t}\n\n\t\tposition() {\n\t\t\treturn this.element.getBoundingClientRect();\n\t\t}\n\n\t\tlocationOf(target) {\n\t\t\t// var parentPos = this.iframe.getBoundingClientRect();\n\t\t\tvar targetPos = this.contents.locationOf(target, this.settings.ignoreClass);\n\n\t\t\treturn {\n\t\t\t\t\"left\": targetPos.left,\n\t\t\t\t\"top\": targetPos.top\n\t\t\t};\n\t\t}\n\n\t\tonDisplayed(view) {\n\t\t\t// Stub, override with a custom functions\n\t\t}\n\n\t\tonResize(view, e) {\n\t\t\t// Stub, override with a custom functions\n\t\t}\n\n\t\tbounds(force) {\n\t\t\tif(force || !this.elementBounds) {\n\t\t\t\tthis.elementBounds = bounds(this.element);\n\t\t\t}\n\n\t\t\treturn this.elementBounds;\n\t\t}\n\n\t\thighlight(cfiRange, data={}, cb) {\n\t\t\tif (!this.contents) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet range = this.contents.range(cfiRange);\n\n\t\t\tlet emitter = () => {\n\t\t\t\tthis.emit(EVENTS.VIEWS.MARK_CLICKED, cfiRange, data);\n\t\t\t};\n\n\t\t\tdata[\"epubcfi\"] = cfiRange;\n\n\t\t\tif (!this.pane) {\n\t\t\t\tthis.pane = new marks_4(this.iframe, this.element);\n\t\t\t}\n\n\t\t\tlet m = new marks_2(range, \"epubjs-hl\", data, {\"fill\": \"yellow\", \"fill-opacity\": \"0.3\", \"mix-blend-mode\": \"multiply\"});\n\t\t\tlet h = this.pane.addMark(m);\n\n\t\t\tthis.highlights[cfiRange] = { \"mark\": h, \"element\": h.element, \"listeners\": [emitter, cb] };\n\n\t\t\th.element.setAttribute(\"ref\", \"epubjs-hl\");\n\t\t\th.element.addEventListener(\"click\", emitter);\n\t\t\th.element.addEventListener(\"touchstart\", emitter);\n\n\t\t\tif (cb) {\n\t\t\t\th.element.addEventListener(\"click\", cb);\n\t\t\t\th.element.addEventListener(\"touchstart\", cb);\n\t\t\t}\n\t\t\treturn h;\n\t\t}\n\n\t\tunderline(cfiRange, data={}, cb) {\n\t\t\tif (!this.contents) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet range = this.contents.range(cfiRange);\n\t\t\tlet emitter = () => {\n\t\t\t\tthis.emit(EVENTS.VIEWS.MARK_CLICKED, cfiRange, data);\n\t\t\t};\n\n\t\t\tdata[\"epubcfi\"] = cfiRange;\n\n\t\t\tif (!this.pane) {\n\t\t\t\tthis.pane = new marks_4(this.iframe, this.element);\n\t\t\t}\n\n\t\t\tlet m = new marks_1(range, \"epubjs-ul\", data, {\"stroke\": \"black\", \"stroke-opacity\": \"0.3\", \"mix-blend-mode\": \"multiply\"});\n\t\t\tlet h = this.pane.addMark(m);\n\n\t\t\tthis.underlines[cfiRange] = { \"mark\": h, \"element\": h.element, \"listeners\": [emitter, cb] };\n\n\t\t\th.element.setAttribute(\"ref\", \"epubjs-ul\");\n\t\t\th.element.addEventListener(\"click\", emitter);\n\t\t\th.element.addEventListener(\"touchstart\", emitter);\n\n\t\t\tif (cb) {\n\t\t\t\th.element.addEventListener(\"click\", cb);\n\t\t\t\th.element.addEventListener(\"touchstart\", cb);\n\t\t\t}\n\t\t\treturn h;\n\t\t}\n\n\t\tmark(cfiRange, data={}, cb) {\n\n\t\t\tif (!this.contents) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (cfiRange in this.marks) {\n\t\t\t\tlet item = this.marks[cfiRange];\n\t\t\t\treturn item;\n\t\t\t}\n\n\t\t\tlet range = this.contents.range(cfiRange);\n\t\t\tif (!range) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet container = range.commonAncestorContainer;\n\t\t\tlet parent = (container.nodeType === 1) ? container : container.parentNode;\n\n\t\t\tlet emitter = (e) => {\n\t\t\t\tthis.emit(EVENTS.VIEWS.MARK_CLICKED, cfiRange, data);\n\t\t\t};\n\n\t\t\tif (range.collapsed && container.nodeType === 1) {\n\t\t\t\trange = new Range();\n\t\t\t\trange.selectNodeContents(container);\n\t\t\t} else if (range.collapsed) { // Webkit doesn't like collapsed ranges\n\t\t\t\trange = new Range();\n\t\t\t\trange.selectNodeContents(parent);\n\t\t\t}\n\n\t\t\tlet top, right, left;\n\n\t\t\tif(this.layout.name === \"pre-paginated\" ||\n\t\t\t\tthis.settings.axis !== \"horizontal\") {\n\t\t\t\tlet pos = range.getBoundingClientRect();\n\t\t\t\ttop = pos.top;\n\t\t\t\tright = pos.right;\n\t\t\t} else {\n\t\t\t\t// Element might break columns, so find the left most element\n\t\t\t\tlet rects = range.getClientRects();\n\t\t\t\tlet rect;\n\t\t\t\tfor (var i = 0; i != rects.length; i++) {\n\t\t\t\t\trect = rects[i];\n\t\t\t\t\tif (!left || rect.left < left) {\n\t\t\t\t\t\tleft = rect.left;\n\t\t\t\t\t\tright = left + this.layout.columnWidth - this.layout.gap;\n\t\t\t\t\t\ttop = rect.top;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tlet mark = this.document.createElement(\"a\");\n\t\t\tmark.setAttribute(\"ref\", \"epubjs-mk\");\n\t\t\tmark.style.position = \"absolute\";\n\t\t\tmark.style.top = `${top}px`;\n\t\t\tmark.style.left = `${right}px`;\n\n\t\t\tmark.dataset[\"epubcfi\"] = cfiRange;\n\n\t\t\tif (data) {\n\t\t\t\tObject.keys(data).forEach((key) => {\n\t\t\t\t\tmark.dataset[key] = data[key];\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (cb) {\n\t\t\t\tmark.addEventListener(\"click\", cb);\n\t\t\t\tmark.addEventListener(\"touchstart\", cb);\n\t\t\t}\n\n\t\t\tmark.addEventListener(\"click\", emitter);\n\t\t\tmark.addEventListener(\"touchstart\", emitter);\n\n\t\t\tthis.element.appendChild(mark);\n\n\t\t\tthis.marks[cfiRange] = { \"element\": mark, \"listeners\": [emitter, cb] };\n\n\t\t\treturn parent;\n\t\t}\n\n\t\tunhighlight(cfiRange) {\n\t\t\tlet item;\n\t\t\tif (cfiRange in this.highlights) {\n\t\t\t\titem = this.highlights[cfiRange];\n\n\t\t\t\tthis.pane.removeMark(item.mark);\n\t\t\t\titem.listeners.forEach((l) => {\n\t\t\t\t\tif (l) { item.element.removeEventListener(\"click\", l); }\n\t\t\t\t});\n\t\t\t\tdelete this.highlights[cfiRange];\n\t\t\t}\n\t\t}\n\n\t\tununderline(cfiRange) {\n\t\t\tlet item;\n\t\t\tif (cfiRange in this.underlines) {\n\t\t\t\titem = this.underlines[cfiRange];\n\t\t\t\tthis.pane.removeMark(item.mark);\n\t\t\t\titem.listeners.forEach((l) => {\n\t\t\t\t\tif (l) { item.element.removeEventListener(\"click\", l); }\n\t\t\t\t});\n\t\t\t\tdelete this.underlines[cfiRange];\n\t\t\t}\n\t\t}\n\n\t\tunmark(cfiRange) {\n\t\t\tlet item;\n\t\t\tif (cfiRange in this.marks) {\n\t\t\t\titem = this.marks[cfiRange];\n\t\t\t\tthis.element.removeChild(item.element);\n\t\t\t\titem.listeners.forEach((l) => {\n\t\t\t\t\tif (l) { item.element.removeEventListener(\"click\", l); }\n\t\t\t\t});\n\t\t\t\tdelete this.marks[cfiRange];\n\t\t\t}\n\t\t}\n\n\t\tdestroy() {\n\n\t\t\tfor (let cfiRange in this.highlights) {\n\t\t\t\tthis.unhighlight(cfiRange);\n\t\t\t}\n\n\t\t\tfor (let cfiRange in this.underlines) {\n\t\t\t\tthis.ununderline(cfiRange);\n\t\t\t}\n\n\t\t\tfor (let cfiRange in this.marks) {\n\t\t\t\tthis.unmark(cfiRange);\n\t\t\t}\n\n\t\t\tif (this.blobUrl) {\n\t\t\t\trevokeBlobUrl(this.blobUrl);\n\t\t\t}\n\n\t\t\tif(this.displayed){\n\t\t\t\tthis.displayed = false;\n\n\t\t\t\tthis.removeListeners();\n\n\t\t\t\tthis.stopExpanding = true;\n\t\t\t\tthis.element.removeChild(this.iframe);\n\n\t\t\t\tthis.iframe = undefined;\n\t\t\t\tthis.contents = undefined;\n\n\t\t\t\tthis._textWidth = null;\n\t\t\t\tthis._textHeight = null;\n\t\t\t\tthis._width = null;\n\t\t\t\tthis._height = null;\n\t\t\t}\n\n\t\t\t// this.element.style.height = \"0px\";\n\t\t\t// this.element.style.width = \"0px\";\n\t\t}\n\t}\n\n\teventEmitter(IframeView.prototype);\n\n\t/**\n\t * Checks if `value` is the\n\t * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n\t * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t * @example\n\t *\n\t * _.isObject({});\n\t * // => true\n\t *\n\t * _.isObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObject(_.noop);\n\t * // => true\n\t *\n\t * _.isObject(null);\n\t * // => false\n\t */\n\tfunction isObject(value) {\n\t  var type = typeof value;\n\t  return value != null && (type == 'object' || type == 'function');\n\t}\n\n\tvar isObject_1 = isObject;\n\n\t/** Detect free variable `global` from Node.js. */\n\tvar freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;\n\n\tvar _freeGlobal = freeGlobal;\n\n\t/** Detect free variable `self`. */\n\tvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n\t/** Used as a reference to the global object. */\n\tvar root = _freeGlobal || freeSelf || Function('return this')();\n\n\tvar _root = root;\n\n\t/**\n\t * Gets the timestamp of the number of milliseconds that have elapsed since\n\t * the Unix epoch (1 January 1970 00:00:00 UTC).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 2.4.0\n\t * @category Date\n\t * @returns {number} Returns the timestamp.\n\t * @example\n\t *\n\t * _.defer(function(stamp) {\n\t *   console.log(_.now() - stamp);\n\t * }, _.now());\n\t * // => Logs the number of milliseconds it took for the deferred invocation.\n\t */\n\tvar now = function() {\n\t  return _root.Date.now();\n\t};\n\n\tvar now_1 = now;\n\n\t/** Built-in value references. */\n\tvar Symbol$1 = _root.Symbol;\n\n\tvar _Symbol = Symbol$1;\n\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\n\t/**\n\t * Used to resolve the\n\t * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar nativeObjectToString = objectProto.toString;\n\n\t/** Built-in value references. */\n\tvar symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;\n\n\t/**\n\t * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n\t *\n\t * @private\n\t * @param {*} value The value to query.\n\t * @returns {string} Returns the raw `toStringTag`.\n\t */\n\tfunction getRawTag(value) {\n\t  var isOwn = hasOwnProperty.call(value, symToStringTag),\n\t      tag = value[symToStringTag];\n\n\t  try {\n\t    value[symToStringTag] = undefined;\n\t    var unmasked = true;\n\t  } catch (e) {}\n\n\t  var result = nativeObjectToString.call(value);\n\t  if (unmasked) {\n\t    if (isOwn) {\n\t      value[symToStringTag] = tag;\n\t    } else {\n\t      delete value[symToStringTag];\n\t    }\n\t  }\n\t  return result;\n\t}\n\n\tvar _getRawTag = getRawTag;\n\n\t/** Used for built-in method references. */\n\tvar objectProto$1 = Object.prototype;\n\n\t/**\n\t * Used to resolve the\n\t * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar nativeObjectToString$1 = objectProto$1.toString;\n\n\t/**\n\t * Converts `value` to a string using `Object.prototype.toString`.\n\t *\n\t * @private\n\t * @param {*} value The value to convert.\n\t * @returns {string} Returns the converted string.\n\t */\n\tfunction objectToString(value) {\n\t  return nativeObjectToString$1.call(value);\n\t}\n\n\tvar _objectToString = objectToString;\n\n\t/** `Object#toString` result references. */\n\tvar nullTag = '[object Null]',\n\t    undefinedTag = '[object Undefined]';\n\n\t/** Built-in value references. */\n\tvar symToStringTag$1 = _Symbol ? _Symbol.toStringTag : undefined;\n\n\t/**\n\t * The base implementation of `getTag` without fallbacks for buggy environments.\n\t *\n\t * @private\n\t * @param {*} value The value to query.\n\t * @returns {string} Returns the `toStringTag`.\n\t */\n\tfunction baseGetTag(value) {\n\t  if (value == null) {\n\t    return value === undefined ? undefinedTag : nullTag;\n\t  }\n\t  return (symToStringTag$1 && symToStringTag$1 in Object(value))\n\t    ? _getRawTag(value)\n\t    : _objectToString(value);\n\t}\n\n\tvar _baseGetTag = baseGetTag;\n\n\t/**\n\t * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t * and has a `typeof` result of \"object\".\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t * @example\n\t *\n\t * _.isObjectLike({});\n\t * // => true\n\t *\n\t * _.isObjectLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObjectLike(_.noop);\n\t * // => false\n\t *\n\t * _.isObjectLike(null);\n\t * // => false\n\t */\n\tfunction isObjectLike(value) {\n\t  return value != null && typeof value == 'object';\n\t}\n\n\tvar isObjectLike_1 = isObjectLike;\n\n\t/** `Object#toString` result references. */\n\tvar symbolTag = '[object Symbol]';\n\n\t/**\n\t * Checks if `value` is classified as a `Symbol` primitive or object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n\t * @example\n\t *\n\t * _.isSymbol(Symbol.iterator);\n\t * // => true\n\t *\n\t * _.isSymbol('abc');\n\t * // => false\n\t */\n\tfunction isSymbol(value) {\n\t  return typeof value == 'symbol' ||\n\t    (isObjectLike_1(value) && _baseGetTag(value) == symbolTag);\n\t}\n\n\tvar isSymbol_1 = isSymbol;\n\n\t/** Used as references for various `Number` constants. */\n\tvar NAN = 0 / 0;\n\n\t/** Used to match leading and trailing whitespace. */\n\tvar reTrim = /^\\s+|\\s+$/g;\n\n\t/** Used to detect bad signed hexadecimal string values. */\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n\t/** Used to detect binary string values. */\n\tvar reIsBinary = /^0b[01]+$/i;\n\n\t/** Used to detect octal string values. */\n\tvar reIsOctal = /^0o[0-7]+$/i;\n\n\t/** Built-in method references without a dependency on `root`. */\n\tvar freeParseInt = parseInt;\n\n\t/**\n\t * Converts `value` to a number.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to process.\n\t * @returns {number} Returns the number.\n\t * @example\n\t *\n\t * _.toNumber(3.2);\n\t * // => 3.2\n\t *\n\t * _.toNumber(Number.MIN_VALUE);\n\t * // => 5e-324\n\t *\n\t * _.toNumber(Infinity);\n\t * // => Infinity\n\t *\n\t * _.toNumber('3.2');\n\t * // => 3.2\n\t */\n\tfunction toNumber(value) {\n\t  if (typeof value == 'number') {\n\t    return value;\n\t  }\n\t  if (isSymbol_1(value)) {\n\t    return NAN;\n\t  }\n\t  if (isObject_1(value)) {\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n\t    value = isObject_1(other) ? (other + '') : other;\n\t  }\n\t  if (typeof value != 'string') {\n\t    return value === 0 ? value : +value;\n\t  }\n\t  value = value.replace(reTrim, '');\n\t  var isBinary = reIsBinary.test(value);\n\t  return (isBinary || reIsOctal.test(value))\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t    : (reIsBadHex.test(value) ? NAN : +value);\n\t}\n\n\tvar toNumber_1 = toNumber;\n\n\t/** Error message constants. */\n\tvar FUNC_ERROR_TEXT = 'Expected a function';\n\n\t/* Built-in method references for those with the same name as other `lodash` methods. */\n\tvar nativeMax = Math.max,\n\t    nativeMin = Math.min;\n\n\t/**\n\t * Creates a debounced function that delays invoking `func` until after `wait`\n\t * milliseconds have elapsed since the last time the debounced function was\n\t * invoked. The debounced function comes with a `cancel` method to cancel\n\t * delayed `func` invocations and a `flush` method to immediately invoke them.\n\t * Provide `options` to indicate whether `func` should be invoked on the\n\t * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n\t * with the last arguments provided to the debounced function. Subsequent\n\t * calls to the debounced function return the result of the last `func`\n\t * invocation.\n\t *\n\t * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t * invoked on the trailing edge of the timeout only if the debounced function\n\t * is invoked more than once during the `wait` timeout.\n\t *\n\t * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n\t * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n\t *\n\t * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t * for details over the differences between `_.debounce` and `_.throttle`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Function\n\t * @param {Function} func The function to debounce.\n\t * @param {number} [wait=0] The number of milliseconds to delay.\n\t * @param {Object} [options={}] The options object.\n\t * @param {boolean} [options.leading=false]\n\t *  Specify invoking on the leading edge of the timeout.\n\t * @param {number} [options.maxWait]\n\t *  The maximum time `func` is allowed to be delayed before it's invoked.\n\t * @param {boolean} [options.trailing=true]\n\t *  Specify invoking on the trailing edge of the timeout.\n\t * @returns {Function} Returns the new debounced function.\n\t * @example\n\t *\n\t * // Avoid costly calculations while the window size is in flux.\n\t * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t *\n\t * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n\t * jQuery(element).on('click', _.debounce(sendMail, 300, {\n\t *   'leading': true,\n\t *   'trailing': false\n\t * }));\n\t *\n\t * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n\t * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n\t * var source = new EventSource('/stream');\n\t * jQuery(source).on('message', debounced);\n\t *\n\t * // Cancel the trailing debounced invocation.\n\t * jQuery(window).on('popstate', debounced.cancel);\n\t */\n\tfunction debounce(func, wait, options) {\n\t  var lastArgs,\n\t      lastThis,\n\t      maxWait,\n\t      result,\n\t      timerId,\n\t      lastCallTime,\n\t      lastInvokeTime = 0,\n\t      leading = false,\n\t      maxing = false,\n\t      trailing = true;\n\n\t  if (typeof func != 'function') {\n\t    throw new TypeError(FUNC_ERROR_TEXT);\n\t  }\n\t  wait = toNumber_1(wait) || 0;\n\t  if (isObject_1(options)) {\n\t    leading = !!options.leading;\n\t    maxing = 'maxWait' in options;\n\t    maxWait = maxing ? nativeMax(toNumber_1(options.maxWait) || 0, wait) : maxWait;\n\t    trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t  }\n\n\t  function invokeFunc(time) {\n\t    var args = lastArgs,\n\t        thisArg = lastThis;\n\n\t    lastArgs = lastThis = undefined;\n\t    lastInvokeTime = time;\n\t    result = func.apply(thisArg, args);\n\t    return result;\n\t  }\n\n\t  function leadingEdge(time) {\n\t    // Reset any `maxWait` timer.\n\t    lastInvokeTime = time;\n\t    // Start the timer for the trailing edge.\n\t    timerId = setTimeout(timerExpired, wait);\n\t    // Invoke the leading edge.\n\t    return leading ? invokeFunc(time) : result;\n\t  }\n\n\t  function remainingWait(time) {\n\t    var timeSinceLastCall = time - lastCallTime,\n\t        timeSinceLastInvoke = time - lastInvokeTime,\n\t        timeWaiting = wait - timeSinceLastCall;\n\n\t    return maxing\n\t      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n\t      : timeWaiting;\n\t  }\n\n\t  function shouldInvoke(time) {\n\t    var timeSinceLastCall = time - lastCallTime,\n\t        timeSinceLastInvoke = time - lastInvokeTime;\n\n\t    // Either this is the first call, activity has stopped and we're at the\n\t    // trailing edge, the system time has gone backwards and we're treating\n\t    // it as the trailing edge, or we've hit the `maxWait` limit.\n\t    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n\t      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n\t  }\n\n\t  function timerExpired() {\n\t    var time = now_1();\n\t    if (shouldInvoke(time)) {\n\t      return trailingEdge(time);\n\t    }\n\t    // Restart the timer.\n\t    timerId = setTimeout(timerExpired, remainingWait(time));\n\t  }\n\n\t  function trailingEdge(time) {\n\t    timerId = undefined;\n\n\t    // Only invoke if we have `lastArgs` which means `func` has been\n\t    // debounced at least once.\n\t    if (trailing && lastArgs) {\n\t      return invokeFunc(time);\n\t    }\n\t    lastArgs = lastThis = undefined;\n\t    return result;\n\t  }\n\n\t  function cancel() {\n\t    if (timerId !== undefined) {\n\t      clearTimeout(timerId);\n\t    }\n\t    lastInvokeTime = 0;\n\t    lastArgs = lastCallTime = lastThis = timerId = undefined;\n\t  }\n\n\t  function flush() {\n\t    return timerId === undefined ? result : trailingEdge(now_1());\n\t  }\n\n\t  function debounced() {\n\t    var time = now_1(),\n\t        isInvoking = shouldInvoke(time);\n\n\t    lastArgs = arguments;\n\t    lastThis = this;\n\t    lastCallTime = time;\n\n\t    if (isInvoking) {\n\t      if (timerId === undefined) {\n\t        return leadingEdge(lastCallTime);\n\t      }\n\t      if (maxing) {\n\t        // Handle invocations in a tight loop.\n\t        timerId = setTimeout(timerExpired, wait);\n\t        return invokeFunc(lastCallTime);\n\t      }\n\t    }\n\t    if (timerId === undefined) {\n\t      timerId = setTimeout(timerExpired, wait);\n\t    }\n\t    return result;\n\t  }\n\t  debounced.cancel = cancel;\n\t  debounced.flush = flush;\n\t  return debounced;\n\t}\n\n\tvar debounce_1 = debounce;\n\n\t/** Error message constants. */\n\tvar FUNC_ERROR_TEXT$1 = 'Expected a function';\n\n\t/**\n\t * Creates a throttled function that only invokes `func` at most once per\n\t * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t * method to cancel delayed `func` invocations and a `flush` method to\n\t * immediately invoke them. Provide `options` to indicate whether `func`\n\t * should be invoked on the leading and/or trailing edge of the `wait`\n\t * timeout. The `func` is invoked with the last arguments provided to the\n\t * throttled function. Subsequent calls to the throttled function return the\n\t * result of the last `func` invocation.\n\t *\n\t * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t * invoked on the trailing edge of the timeout only if the throttled function\n\t * is invoked more than once during the `wait` timeout.\n\t *\n\t * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n\t * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n\t *\n\t * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t * for details over the differences between `_.throttle` and `_.debounce`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Function\n\t * @param {Function} func The function to throttle.\n\t * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t * @param {Object} [options={}] The options object.\n\t * @param {boolean} [options.leading=true]\n\t *  Specify invoking on the leading edge of the timeout.\n\t * @param {boolean} [options.trailing=true]\n\t *  Specify invoking on the trailing edge of the timeout.\n\t * @returns {Function} Returns the new throttled function.\n\t * @example\n\t *\n\t * // Avoid excessively updating the position while scrolling.\n\t * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t *\n\t * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n\t * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n\t * jQuery(element).on('click', throttled);\n\t *\n\t * // Cancel the trailing throttled invocation.\n\t * jQuery(window).on('popstate', throttled.cancel);\n\t */\n\tfunction throttle(func, wait, options) {\n\t  var leading = true,\n\t      trailing = true;\n\n\t  if (typeof func != 'function') {\n\t    throw new TypeError(FUNC_ERROR_TEXT$1);\n\t  }\n\t  if (isObject_1(options)) {\n\t    leading = 'leading' in options ? !!options.leading : leading;\n\t    trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t  }\n\t  return debounce_1(func, wait, {\n\t    'leading': leading,\n\t    'maxWait': wait,\n\t    'trailing': trailing\n\t  });\n\t}\n\n\tvar throttle_1 = throttle;\n\n\tclass Stage {\n\t\tconstructor(_options) {\n\t\t\tthis.settings = _options || {};\n\t\t\tthis.id = \"epubjs-container-\" + uuid();\n\n\t\t\tthis.container = this.create(this.settings);\n\n\t\t\tif(this.settings.hidden) {\n\t\t\t\tthis.wrapper = this.wrap(this.container);\n\t\t\t}\n\n\t\t}\n\n\t\t/*\n\t\t* Creates an element to render to.\n\t\t* Resizes to passed width and height or to the elements size\n\t\t*/\n\t\tcreate(options){\n\t\t\tlet height  = options.height;// !== false ? options.height : \"100%\";\n\t\t\tlet width   = options.width;// !== false ? options.width : \"100%\";\n\t\t\tlet overflow  = options.overflow || false;\n\t\t\tlet axis = options.axis || \"vertical\";\n\t\t\tlet direction = options.direction;\n\t\t\tlet scale = options.scale;\n\n\t\t\tif(options.height && isNumber(options.height)) {\n\t\t\t\theight = options.height + \"px\";\n\t\t\t}\n\n\t\t\tif(options.width && isNumber(options.width)) {\n\t\t\t\twidth = options.width + \"px\";\n\t\t\t}\n\n\t\t\t// Create new container element\n\t\t\tlet container = document.createElement(\"div\");\n\n\t\t\tcontainer.id = this.id;\n\t\t\tcontainer.classList.add(\"epub-container\");\n\n\t\t\t// Style Element\n\t\t\t// container.style.fontSize = \"0\";\n\t\t\tcontainer.style.wordSpacing = \"0\";\n\t\t\tcontainer.style.lineHeight = \"0\";\n\t\t\tcontainer.style.verticalAlign = \"top\";\n\t\t\t// container.style.position = \"relative\";\n\n\t\t\tif(axis === \"horizontal\") {\n\t\t\t\t// container.style.whiteSpace = \"nowrap\";\n\t\t\t\tcontainer.style.display = \"flex\";\n\t\t\t\tcontainer.style.flexDirection = \"row\";\n\t\t\t\tcontainer.style.flexWrap = \"nowrap\";\n\t\t\t}\n\n\t\t\tif(width){\n\t\t\t\tcontainer.style.width = width;\n\t\t\t}\n\n\t\t\tif(height){\n\t\t\t\tcontainer.style.height = height;\n\t\t\t}\n\n\t\t\tif (overflow) {\n\t\t\t\tcontainer.style.overflow = overflow;\n\t\t\t}\n\n\t\t\tif (direction) {\n\t\t\t\tcontainer.dir = direction;\n\t\t\t\tcontainer.style[\"direction\"] = direction;\n\t\t\t}\n\n\t\t\tif (direction && this.settings.fullsize) {\n\t\t\t\tdocument.body.style[\"direction\"] = direction;\n\t\t\t}\n\n\t\t\tif (scale) {\n\t\t\t\tcontainer.style[\"transform-origin\"] = \"top left\";\n\t\t\t\tcontainer.style[\"transform\"] = \"scale(\" + scale + \")\";\n\t\t\t\tcontainer.style.overflow = \"visible\";\n\t\t\t}\n\n\t\t\treturn container;\n\t\t}\n\n\t\twrap(container) {\n\t\t\tvar wrapper = document.createElement(\"div\");\n\n\t\t\twrapper.style.visibility = \"hidden\";\n\t\t\twrapper.style.overflow = \"hidden\";\n\t\t\twrapper.style.width = \"0\";\n\t\t\twrapper.style.height = \"0\";\n\n\t\t\twrapper.appendChild(container);\n\t\t\treturn wrapper;\n\t\t}\n\n\n\t\tgetElement(_element){\n\t\t\tvar element;\n\n\t\t\tif(isElement(_element)) {\n\t\t\t\telement = _element;\n\t\t\t} else if (typeof _element === \"string\") {\n\t\t\t\telement = document.getElementById(_element);\n\t\t\t}\n\n\t\t\tif(!element){\n\t\t\t\tthrow new Error(\"Not an Element\");\n\t\t\t}\n\n\t\t\treturn element;\n\t\t}\n\n\t\tattachTo(what){\n\n\t\t\tvar element = this.getElement(what);\n\t\t\tvar base;\n\n\t\t\tif(!element){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(this.settings.hidden) {\n\t\t\t\tbase = this.wrapper;\n\t\t\t} else {\n\t\t\t\tbase = this.container;\n\t\t\t}\n\n\t\t\telement.appendChild(base);\n\n\t\t\tthis.element = element;\n\n\t\t\treturn element;\n\n\t\t}\n\n\t\tgetContainer() {\n\t\t\treturn this.container;\n\t\t}\n\n\t\tonResize(func){\n\t\t\t// Only listen to window for resize event if width and height are not fixed.\n\t\t\t// This applies if it is set to a percent or auto.\n\t\t\tif(!isNumber(this.settings.width) ||\n\t\t\t\t !isNumber(this.settings.height) ) {\n\t\t\t\tthis.resizeFunc = throttle_1(func, 50);\n\t\t\t\twindow.addEventListener(\"resize\", this.resizeFunc, false);\n\t\t\t}\n\n\t\t}\n\n\t\tonOrientationChange(func){\n\t\t\tthis.orientationChangeFunc = func;\n\t\t\twindow.addEventListener(\"orientationchange\", this.orientationChangeFunc, false);\n\t\t}\n\n\t\tsize(width, height){\n\t\t\tvar bounds$$1;\n\t\t\t// var width = _width || this.settings.width;\n\t\t\t// var height = _height || this.settings.height;\n\n\t\t\t// If width or height are set to false, inherit them from containing element\n\t\t\tif(width === null) {\n\t\t\t\tbounds$$1 = this.element.getBoundingClientRect();\n\n\t\t\t\tif(bounds$$1.width) {\n\t\t\t\t\twidth = bounds$$1.width;\n\t\t\t\t\tthis.container.style.width = bounds$$1.width + \"px\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(height === null) {\n\t\t\t\tbounds$$1 = bounds$$1 || this.element.getBoundingClientRect();\n\n\t\t\t\tif(bounds$$1.height) {\n\t\t\t\t\theight = bounds$$1.height;\n\t\t\t\t\tthis.container.style.height = bounds$$1.height + \"px\";\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif(!isNumber(width)) {\n\t\t\t\tbounds$$1 = this.container.getBoundingClientRect();\n\t\t\t\twidth = bounds$$1.width;\n\t\t\t\t//height = bounds.height;\n\t\t\t}\n\n\t\t\tif(!isNumber(height)) {\n\t\t\t\tbounds$$1 = bounds$$1 || this.container.getBoundingClientRect();\n\t\t\t\t//width = bounds.width;\n\t\t\t\theight = bounds$$1.height;\n\t\t\t}\n\n\n\t\t\tthis.containerStyles = window.getComputedStyle(this.container);\n\n\t\t\tthis.containerPadding = {\n\t\t\t\tleft: parseFloat(this.containerStyles[\"padding-left\"]) || 0,\n\t\t\t\tright: parseFloat(this.containerStyles[\"padding-right\"]) || 0,\n\t\t\t\ttop: parseFloat(this.containerStyles[\"padding-top\"]) || 0,\n\t\t\t\tbottom: parseFloat(this.containerStyles[\"padding-bottom\"]) || 0\n\t\t\t};\n\n\t\t\t// Bounds not set, get them from window\n\t\t\tlet _windowBounds = windowBounds();\n\t\t\tif (!width) {\n\t\t\t\twidth = _windowBounds.width;\n\t\t\t}\n\t\t\tif (this.settings.fullsize || !height) {\n\t\t\t\theight = _windowBounds.height;\n\t\t\t}\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\treturn {\n\t\t\t\twidth: width -\n\t\t\t\t\t\t\t\tthis.containerPadding.left -\n\t\t\t\t\t\t\t\tthis.containerPadding.right,\n\t\t\t\theight: height -\n\t\t\t\t\t\t\t\tthis.containerPadding.top -\n\t\t\t\t\t\t\t\tthis.containerPadding.bottom\n\t\t\t};\n\n\t\t}\n\n\t\tbounds(){\n\t\t\tlet box;\n\t\t\tif (this.container.style.overflow !== \"visible\") {\n\t\t\t\tbox = this.container && this.container.getBoundingClientRect();\n\t\t\t}\n\n\t\t\tif(!box || !box.width || !box.height) {\n\t\t\t\treturn windowBounds();\n\t\t\t} else {\n\t\t\t\treturn box;\n\t\t\t}\n\n\t\t}\n\n\t\tgetSheet(){\n\t\t\tvar style = document.createElement(\"style\");\n\n\t\t\t// WebKit hack --> https://davidwalsh.name/add-rules-stylesheets\n\t\t\tstyle.appendChild(document.createTextNode(\"\"));\n\n\t\t\tdocument.head.appendChild(style);\n\n\t\t\treturn style.sheet;\n\t\t}\n\n\t\taddStyleRules(selector, rulesArray){\n\t\t\tvar scope = \"#\" + this.id + \" \";\n\t\t\tvar rules = \"\";\n\n\t\t\tif(!this.sheet){\n\t\t\t\tthis.sheet = this.getSheet();\n\t\t\t}\n\n\t\t\trulesArray.forEach(function(set) {\n\t\t\t\tfor (var prop in set) {\n\t\t\t\t\tif(set.hasOwnProperty(prop)) {\n\t\t\t\t\t\trules += prop + \":\" + set[prop] + \";\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.sheet.insertRule(scope + selector + \" {\" + rules + \"}\", 0);\n\t\t}\n\n\t\taxis(axis) {\n\t\t\tif(axis === \"horizontal\") {\n\t\t\t\tthis.container.style.display = \"flex\";\n\t\t\t\tthis.container.style.flexDirection = \"row\";\n\t\t\t\tthis.container.style.flexWrap = \"nowrap\";\n\t\t\t} else {\n\t\t\t\tthis.container.style.display = \"block\";\n\t\t\t}\n\t\t}\n\n\t\t// orientation(orientation) {\n\t\t// \tif (orientation === \"landscape\") {\n\t\t//\n\t\t// \t} else {\n\t\t//\n\t\t// \t}\n\t\t//\n\t\t// \tthis.orientation = orientation;\n\t\t// }\n\n\t\tdirection(dir) {\n\t\t\tif (this.container) {\n\t\t\t\tthis.container.dir = dir;\n\t\t\t\tthis.container.style[\"direction\"] = dir;\n\t\t\t}\n\n\t\t\tif (this.settings.fullsize) {\n\t\t\t\tdocument.body.style[\"direction\"] = dir;\n\t\t\t}\n\t\t}\n\n\t\tscale(s) {\n\t\t\tif (this.container) {\n\t\t\t\tthis.container.style[\"transform-origin\"] = \"top left\";\n\t\t\t\tthis.container.style[\"transform\"] = \"scale(\" + s + \")\";\n\t\t\t}\n\t\t}\n\n\t\tdestroy() {\n\t\t\tvar base;\n\n\t\t\tif (this.element) {\n\n\t\t\t\tif(this.settings.hidden) {\n\t\t\t\t\tbase = this.wrapper;\n\t\t\t\t} else {\n\t\t\t\t\tbase = this.container;\n\t\t\t\t}\n\n\t\t\t\tif(this.element.contains(base)) {\n\t\t\t\t\tthis.element.removeChild(base);\n\t\t\t\t}\n\n\t\t\t\twindow.removeEventListener(\"resize\", this.resizeFunc);\n\t\t\t\twindow.removeEventListener(\"orientationChange\", this.orientationChangeFunc);\n\n\t\t\t}\n\t\t}\n\t}\n\n\tclass Views {\n\t\tconstructor(container) {\n\t\t\tthis.container = container;\n\t\t\tthis._views = [];\n\t\t\tthis.length = 0;\n\t\t\tthis.hidden = false;\n\t\t}\n\n\t\tall() {\n\t\t\treturn this._views;\n\t\t}\n\n\t\tfirst() {\n\t\t\treturn this._views[0];\n\t\t}\n\n\t\tlast() {\n\t\t\treturn this._views[this._views.length-1];\n\t\t}\n\n\t\tindexOf(view) {\n\t\t\treturn this._views.indexOf(view);\n\t\t}\n\n\t\tslice() {\n\t\t\treturn this._views.slice.apply(this._views, arguments);\n\t\t}\n\n\t\tget(i) {\n\t\t\treturn this._views[i];\n\t\t}\n\n\t\tappend(view){\n\t\t\tthis._views.push(view);\n\t\t\tif(this.container){\n\t\t\t\tthis.container.appendChild(view.element);\n\t\t\t}\n\t\t\tthis.length++;\n\t\t\treturn view;\n\t\t}\n\n\t\tprepend(view){\n\t\t\tthis._views.unshift(view);\n\t\t\tif(this.container){\n\t\t\t\tthis.container.insertBefore(view.element, this.container.firstChild);\n\t\t\t}\n\t\t\tthis.length++;\n\t\t\treturn view;\n\t\t}\n\n\t\tinsert(view, index) {\n\t\t\tthis._views.splice(index, 0, view);\n\n\t\t\tif(this.container){\n\t\t\t\tif(index < this.container.children.length){\n\t\t\t\t\tthis.container.insertBefore(view.element, this.container.children[index]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.container.appendChild(view.element);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.length++;\n\t\t\treturn view;\n\t\t}\n\n\t\tremove(view) {\n\t\t\tvar index = this._views.indexOf(view);\n\n\t\t\tif(index > -1) {\n\t\t\t\tthis._views.splice(index, 1);\n\t\t\t}\n\n\n\t\t\tthis.destroy(view);\n\n\t\t\tthis.length--;\n\t\t}\n\n\t\tdestroy(view) {\n\t\t\tif(view.displayed){\n\t\t\t\tview.destroy();\n\t\t\t}\n\n\t\t\tif(this.container){\n\t\t\t\t this.container.removeChild(view.element);\n\t\t\t}\n\t\t\tview = null;\n\t\t}\n\n\t\t// Iterators\n\n\t\tforEach() {\n\t\t\treturn this._views.forEach.apply(this._views, arguments);\n\t\t}\n\n\t\tclear(){\n\t\t\t// Remove all views\n\t\t\tvar view;\n\t\t\tvar len = this.length;\n\n\t\t\tif(!this.length) return;\n\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tview = this._views[i];\n\t\t\t\tthis.destroy(view);\n\t\t\t}\n\n\t\t\tthis._views = [];\n\t\t\tthis.length = 0;\n\t\t}\n\n\t\tfind(section){\n\n\t\t\tvar view;\n\t\t\tvar len = this.length;\n\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tview = this._views[i];\n\t\t\t\tif(view.displayed && view.section.index == section.index) {\n\t\t\t\t\treturn view;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\tdisplayed(){\n\t\t\tvar displayed = [];\n\t\t\tvar view;\n\t\t\tvar len = this.length;\n\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tview = this._views[i];\n\t\t\t\tif(view.displayed){\n\t\t\t\t\tdisplayed.push(view);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn displayed;\n\t\t}\n\n\t\tshow(){\n\t\t\tvar view;\n\t\t\tvar len = this.length;\n\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tview = this._views[i];\n\t\t\t\tif(view.displayed){\n\t\t\t\t\tview.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.hidden = false;\n\t\t}\n\n\t\thide(){\n\t\t\tvar view;\n\t\t\tvar len = this.length;\n\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tview = this._views[i];\n\t\t\t\tif(view.displayed){\n\t\t\t\t\tview.hide();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.hidden = true;\n\t\t}\n\t}\n\n\tclass DefaultViewManager {\n\t\tconstructor(options) {\n\n\t\t\tthis.name = \"default\";\n\t\t\tthis.View = options.view;\n\t\t\tthis.request = options.request;\n\t\t\tthis.spine = options.spine;\n\t\t\tthis.hooks = options.hooks;\n\t\t\tthis.q = new Queue(this);\n\n\t\t\tthis.settings = extend(this.settings || {}, {\n\t\t\t\tinfinite: true,\n\t\t\t\thidden: false,\n\t\t\t\twidth: undefined,\n\t\t\t\theight: undefined,\n\t\t\t\taxis: undefined,\n\t\t\t\tflow: \"scrolled\",\n\t\t\t\tignoreClass: \"\"\n\t\t\t});\n\n\t\t\textend(this.settings, options.settings || {});\n\n\t\t\tthis.viewSettings = {\n\t\t\t\tignoreClass: this.settings.ignoreClass,\n\t\t\t\thooks: this.hooks,\n\t\t\t\taxis: this.settings.axis,\n\t\t\t\tflow: this.settings.flow,\n\t\t\t\tlayout: this.layout,\n\t\t\t\tmethod: this.settings.method || \"url\", // srcdoc, blobUrl, write\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tforceEvenPages: true\n\t\t\t};\n\n\t\t\tthis.rendered = false;\n\n\t\t}\n\n\t\trender(element, size){\n\t\t\tlet tag = element.tagName;\n\n\t\t\tif (tag && (tag.toLowerCase() == \"body\" ||\n\t\t\t\t\ttag.toLowerCase() == \"html\")) {\n\t\t\t\tthis.fullsize = true;\n\t\t\t}\n\n\t\t\tif (this.fullsize) {\n\t\t\t\tthis.settings.overflow = \"visible\";\n\t\t\t\tthis.overflow = this.settings.overflow;\n\t\t\t}\n\n\t\t\tthis.settings.size = size;\n\n\t\t\t// Save the stage\n\t\t\tthis.stage = new Stage({\n\t\t\t\twidth: size.width,\n\t\t\t\theight: size.height,\n\t\t\t\toverflow: this.overflow,\n\t\t\t\thidden: this.settings.hidden,\n\t\t\t\taxis: this.settings.axis,\n\t\t\t\tfullsize: this.fullsize,\n\t\t\t\tdirection: this.settings.direction,\n\t\t\t\tscale: this.settings.scale\n\t\t\t});\n\n\t\t\tthis.stage.attachTo(element);\n\n\t\t\t// Get this stage container div\n\t\t\tthis.container = this.stage.getContainer();\n\n\t\t\t// Views array methods\n\t\t\tthis.views = new Views(this.container);\n\n\t\t\t// Calculate Stage Size\n\t\t\tthis._bounds = this.bounds();\n\t\t\tthis._stageSize = this.stage.size();\n\n\t\t\t// Set the dimensions for views\n\t\t\tthis.viewSettings.width = this._stageSize.width;\n\t\t\tthis.viewSettings.height = this._stageSize.height;\n\n\t\t\t// Function to handle a resize event.\n\t\t\t// Will only attach if width and height are both fixed.\n\t\t\tthis.stage.onResize(this.onResized.bind(this));\n\n\t\t\tthis.stage.onOrientationChange(this.onOrientationChange.bind(this));\n\n\t\t\t// Add Event Listeners\n\t\t\tthis.addEventListeners();\n\n\t\t\t// Add Layout method\n\t\t\t// this.applyLayoutMethod();\n\t\t\tif (this.layout) {\n\t\t\t\tthis.updateLayout();\n\t\t\t}\n\n\t\t\tthis.rendered = true;\n\n\t\t}\n\n\t\taddEventListeners(){\n\t\t\tvar scroller;\n\n\t\t\twindow.addEventListener(\"unload\", function(e){\n\t\t\t\tthis.destroy();\n\t\t\t}.bind(this));\n\n\t\t\tif(!this.fullsize) {\n\t\t\t\tscroller = this.container;\n\t\t\t} else {\n\t\t\t\tscroller = window;\n\t\t\t}\n\n\t\t\tscroller.addEventListener(\"scroll\", this.onScroll.bind(this));\n\t\t}\n\n\t\tremoveEventListeners(){\n\t\t\tvar scroller;\n\n\t\t\tif(!this.fullsize) {\n\t\t\t\tscroller = this.container;\n\t\t\t} else {\n\t\t\t\tscroller = window;\n\t\t\t}\n\n\t\t\tif (scroller) {\n\t\t\t\tscroller.removeEventListener(\"scroll\", this.onScroll.bind(this));\n\t\t\t}\n\t\t}\n\n\t\tdestroy(){\n\t\t\tclearTimeout(this.orientationTimeout);\n\t\t\tclearTimeout(this.resizeTimeout);\n\t\t\tclearTimeout(this.afterScrolled);\n\n\t\t\tthis.clear();\n\n\t\t\tthis.removeEventListeners();\n\n\t\t\tthis.stage && this.stage.destroy();\n\n\t\t\tthis.rendered = false;\n\n\t\t\t/*\n\n\t\t\t\tclearTimeout(this.trimTimeout);\n\t\t\t\tif(this.settings.hidden) {\n\t\t\t\t\tthis.element.removeChild(this.wrapper);\n\t\t\t\t} else {\n\t\t\t\t\tthis.element.removeChild(this.container);\n\t\t\t\t}\n\t\t\t*/\n\t\t}\n\n\t\tonOrientationChange(e) {\n\t\t\tlet {orientation} = window;\n\n\t\t\tthis.resize();\n\n\t\t\t// Per ampproject:\n\t\t\t// In IOS 10.3, the measured size of an element is incorrect if the\n\t\t\t// element size depends on window size directly and the measurement\n\t\t\t// happens in window.resize event. Adding a timeout for correct\n\t\t\t// measurement. See https://github.com/ampproject/amphtml/issues/8479\n\t\t\tclearTimeout(this.orientationTimeout);\n\t\t\tthis.orientationTimeout = setTimeout(function(){\n\t\t\t\tthis.orientationTimeout = undefined;\n\t\t\t\tthis.resize();\n\t\t\t\tthis.emit(EVENTS.MANAGERS.ORIENTATION_CHANGE, orientation);\n\t\t\t}.bind(this), 500);\n\n\t\t}\n\n\t\tonResized(e) {\n\t\t\tthis.resize();\n\t\t}\n\n\t\tresize(width, height){\n\t\t\tlet stageSize = this.stage.size(width, height);\n\n\t\t\t// For Safari, wait for orientation to catch up\n\t\t\t// if the window is a square\n\t\t\tthis.winBounds = windowBounds();\n\t\t\tif (this.orientationTimeout &&\n\t\t\t\t\tthis.winBounds.width === this.winBounds.height) {\n\t\t\t\t// reset the stage size for next resize\n\t\t\t\tthis._stageSize = undefined;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._stageSize &&\n\t\t\t\t\tthis._stageSize.width === stageSize.width &&\n\t\t\t\t\tthis._stageSize.height === stageSize.height ) {\n\t\t\t\t// Size is the same, no need to resize\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._stageSize = stageSize;\n\n\t\t\tthis._bounds = this.bounds();\n\n\t\t\t// Clear current views\n\t\t\tthis.clear();\n\n\t\t\t// Update for new views\n\t\t\tthis.viewSettings.width = this._stageSize.width;\n\t\t\tthis.viewSettings.height = this._stageSize.height;\n\n\t\t\tthis.updateLayout();\n\n\t\t\tthis.emit(EVENTS.MANAGERS.RESIZED, {\n\t\t\t\twidth: this._stageSize.width,\n\t\t\t\theight: this._stageSize.height\n\t\t\t});\n\t\t}\n\n\t\tcreateView(section) {\n\t\t\treturn new this.View(section, this.viewSettings);\n\t\t}\n\n\t\tdisplay(section, target){\n\n\t\t\tvar displaying = new defer();\n\t\t\tvar displayed = displaying.promise;\n\n\t\t\t// Check if moving to target is needed\n\t\t\tif (target === section.href || isNumber(target)) {\n\t\t\t\ttarget = undefined;\n\t\t\t}\n\n\t\t\t// Check to make sure the section we want isn't already shown\n\t\t\tvar visible = this.views.find(section);\n\n\t\t\t// View is already shown, just move to correct location in view\n\t\t\tif(visible && section) {\n\t\t\t\tlet offset = visible.offset();\n\n\t\t\t\tif (this.settings.direction === \"ltr\") {\n\t\t\t\t\tthis.scrollTo(offset.left, offset.top, true);\n\t\t\t\t} else {\n\t\t\t\t\tlet width = visible.width();\n\t\t\t\t\tthis.scrollTo(offset.left + width, offset.top, true);\n\t\t\t\t}\n\n\t\t\t\tif(target) {\n\t\t\t\t\tlet offset = visible.locationOf(target);\n\t\t\t\t\tthis.moveTo(offset);\n\t\t\t\t}\n\n\t\t\t\tdisplaying.resolve();\n\t\t\t\treturn displayed;\n\t\t\t}\n\n\t\t\t// Hide all current views\n\t\t\tthis.clear();\n\n\t\t\tthis.add(section)\n\t\t\t\t.then(function(view){\n\n\t\t\t\t\t// Move to correct place within the section, if needed\n\t\t\t\t\tif(target) {\n\t\t\t\t\t\tlet offset = view.locationOf(target);\n\t\t\t\t\t\tthis.moveTo(offset);\n\t\t\t\t\t}\n\n\t\t\t\t}.bind(this), (err) => {\n\t\t\t\t\tdisplaying.reject(err);\n\t\t\t\t})\n\t\t\t\t.then(function(){\n\t\t\t\t\tvar next;\n\t\t\t\t\tif (this.layout.name === \"pre-paginated\" &&\n\t\t\t\t\t\t\tthis.layout.divisor > 1) {\n\t\t\t\t\t\tnext = nextSection(section, this.spine);\n\t\t\t\t\t\tif (next) {\n\t\t\t\t\t\t\treturn this.add(next);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}.bind(this))\n\t\t\t\t.then(function(){\n\n\t\t\t\t\tthis.views.show();\n\n\t\t\t\t\tdisplaying.resolve();\n\n\t\t\t\t}.bind(this));\n\n\t\t\treturn displayed;\n\t\t}\n\n\t\tafterDisplayed(view){\n\t\t\tthis.emit(EVENTS.MANAGERS.ADDED, view);\n\t\t}\n\n\t\tafterResized(view){\n\t\t\tthis.emit(EVENTS.MANAGERS.RESIZE, view.section);\n\t\t}\n\n\t\tmoveTo(offset){\n\t\t\tvar distX = 0,\n\t\t\t\t  distY = 0;\n\n\t\t\tif(!this.isPaginated) {\n\t\t\t\tdistY = offset.top;\n\t\t\t} else {\n\t\t\t\tdistX = Math.floor(offset.left / this.layout.delta) * this.layout.delta;\n\n\t\t\t\tif (distX + this.layout.delta > this.container.scrollWidth) {\n\t\t\t\t\tdistX = this.container.scrollWidth - this.layout.delta;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.scrollTo(distX, distY, true);\n\t\t}\n\n\t\tadd(section){\n\t\t\tvar view = this.createView(section);\n\n\t\t\tthis.views.append(view);\n\n\t\t\t// view.on(EVENTS.VIEWS.SHOWN, this.afterDisplayed.bind(this));\n\t\t\tview.onDisplayed = this.afterDisplayed.bind(this);\n\t\t\tview.onResize = this.afterResized.bind(this);\n\n\t\t\tview.on(EVENTS.VIEWS.AXIS, (axis) => {\n\t\t\t\tthis.updateAxis(axis);\n\t\t\t});\n\n\t\t\treturn view.display(this.request);\n\n\t\t}\n\n\t\tappend(section){\n\t\t\tvar view = this.createView(section);\n\t\t\tthis.views.append(view);\n\n\t\t\tview.onDisplayed = this.afterDisplayed.bind(this);\n\t\t\tview.onResize = this.afterResized.bind(this);\n\n\t\t\tview.on(EVENTS.VIEWS.AXIS, (axis) => {\n\t\t\t\tthis.updateAxis(axis);\n\t\t\t});\n\n\t\t\treturn view.display(this.request);\n\t\t}\n\n\t\tprepend(section){\n\t\t\tvar view = this.createView(section);\n\n\t\t\tview.on(EVENTS.VIEWS.RESIZED, (bounds$$1) => {\n\t\t\t\tthis.counter(bounds$$1);\n\t\t\t});\n\n\t\t\tthis.views.prepend(view);\n\n\t\t\tview.onDisplayed = this.afterDisplayed.bind(this);\n\t\t\tview.onResize = this.afterResized.bind(this);\n\n\t\t\tview.on(EVENTS.VIEWS.AXIS, (axis) => {\n\t\t\t\tthis.updateAxis(axis);\n\t\t\t});\n\n\t\t\treturn view.display(this.request);\n\t\t}\n\n\t\tcounter(bounds$$1){\n\t\t\tif(this.settings.axis === \"vertical\") {\n\t\t\t\tthis.scrollBy(0, bounds$$1.heightDelta, true);\n\t\t\t} else {\n\t\t\t\tthis.scrollBy(bounds$$1.widthDelta, 0, true);\n\t\t\t}\n\n\t\t}\n\n\t\t// resizeView(view) {\n\t\t//\n\t\t// \tif(this.settings.globalLayoutProperties.layout === \"pre-paginated\") {\n\t\t// \t\tview.lock(\"both\", this.bounds.width, this.bounds.height);\n\t\t// \t} else {\n\t\t// \t\tview.lock(\"width\", this.bounds.width, this.bounds.height);\n\t\t// \t}\n\t\t//\n\t\t// };\n\n\t\tnext(){\n\t\t\tvar next;\n\t\t\tvar left;\n\n\t\t\tlet dir = this.settings.direction;\n\n\t\t\tif(!this.views.length) return;\n\n\t\t\tif(this.isPaginated && this.settings.axis === \"horizontal\" && (!dir || dir === \"ltr\")) {\n\n\t\t\t\tthis.scrollLeft = this.container.scrollLeft;\n\n\t\t\t\tleft = this.container.scrollLeft + this.container.offsetWidth + this.layout.delta;\n\n\t\t\t\tif(left <= this.container.scrollWidth) {\n\t\t\t\t\tthis.scrollBy(this.layout.delta, 0, true);\n\t\t\t\t} else {\n\t\t\t\t\tnext = nextSection(this.views.last().section, this.spine);\n\t\t\t\t}\n\t\t\t} else if (this.isPaginated && this.settings.axis === \"horizontal\" && dir === \"rtl\") {\n\n\t\t\t\tthis.scrollLeft = this.container.scrollLeft;\n\n\t\t\t\tleft = this.container.scrollLeft;\n\n\t\t\t\tif(left > 0) {\n\t\t\t\t\tthis.scrollBy(this.layout.delta, 0, true);\n\t\t\t\t} else {\n\t\t\t\t\tnext = nextSection(this.views.last().section, this.spine);\n\t\t\t\t}\n\n\t\t\t} else if (this.isPaginated && this.settings.axis === \"vertical\") {\n\n\t\t\t\tthis.scrollTop = this.container.scrollTop;\n\n\t\t\t\tlet top  = this.container.scrollTop + this.container.offsetHeight;\n\n\t\t\t\tif(top < this.container.scrollHeight) {\n\t\t\t\t\tthis.scrollBy(0, this.layout.height, true);\n\t\t\t\t} else {\n\t\t\t\t\tnext = nextSection(this.views.last().section, this.spine);\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tnext = nextSection(this.views.last().section, this.spine);\n\t\t\t}\n\n\t\t\tif(next) {\n\t\t\t\tthis.clear();\n\n\t\t\t\treturn this.append(next)\n\t\t\t\t\t.then(function(){\n\t\t\t\t\t\tvar right;\n\t\t\t\t\t\tif (this.layout.name === \"pre-paginated\" && this.layout.divisor > 1) {\n\t\t\t\t\t\t\tright = nextSection(next, this.spine);\n\t\t\t\t\t\t\tif (right) {\n\t\t\t\t\t\t\t\treturn this.append(right);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this), (err) => {\n\t\t\t\t\t\treturn err;\n\t\t\t\t\t})\n\t\t\t\t\t.then(function(){\n\t\t\t\t\t\tthis.views.show();\n\t\t\t\t\t}.bind(this));\n\t\t\t}\n\t\t}\n\n\t\tprev(){\n\t\t\tvar prev;\n\t\t\tvar left;\n\t\t\tlet dir = this.settings.direction;\n\n\t\t\tif(!this.views.length) return;\n\n\t\t\tif(this.isPaginated && this.settings.axis === \"horizontal\" && (!dir || dir === \"ltr\")) {\n\n\t\t\t\tthis.scrollLeft = this.container.scrollLeft;\n\n\t\t\t\tleft = this.container.scrollLeft;\n\n\t\t\t\tif(left > 0) {\n\t\t\t\t\tthis.scrollBy(-this.layout.delta, 0, true);\n\t\t\t\t} else {\n\t\t\t\t\tprev = prevSection(this.views.first().section, this.spine);\n\t\t\t\t}\n\n\t\t\t} else if (this.isPaginated && this.settings.axis === \"horizontal\" && dir === \"rtl\") {\n\n\t\t\t\tthis.scrollLeft = this.container.scrollLeft;\n\n\t\t\t\tleft = this.container.scrollLeft + this.container.offsetWidth + this.layout.delta;\n\n\t\t\t\tif(left <= this.container.scrollWidth) {\n\t\t\t\t\tthis.scrollBy(-this.layout.delta, 0, true);\n\t\t\t\t} else {\n\t\t\t\t\tprev = prevSection(this.views.first().section, this.spine);\n\t\t\t\t}\n\n\t\t\t} else if (this.isPaginated && this.settings.axis === \"vertical\") {\n\n\t\t\t\tthis.scrollTop = this.container.scrollTop;\n\n\t\t\t\tlet top = this.container.scrollTop;\n\n\t\t\t\tif(top > 0) {\n\t\t\t\t\tthis.scrollBy(0, -(this.layout.height), true);\n\t\t\t\t} else {\n\t\t\t\t\tprev = prevSection(this.views.first().section, this.spine);\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tprev = prevSection(this.views.first().section, this.spine);\n\n\t\t\t}\n\n\t\t\tif(prev) {\n\t\t\t\tthis.clear();\n\n\t\t\t\treturn this.prepend(prev)\n\t\t\t\t\t.then(function(){\n\t\t\t\t\t\tvar left;\n\t\t\t\t\t\tif (this.layout.name === \"pre-paginated\" && this.layout.divisor > 1) {\n\t\t\t\t\t\t\tleft = prevSection(prev, this.spine);\n\t\t\t\t\t\t\tif (left) {\n\t\t\t\t\t\t\t\treturn this.prepend(left);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}.bind(this), (err) => {\n\t\t\t\t\t\treturn err;\n\t\t\t\t\t})\n\t\t\t\t\t.then(function(){\n\t\t\t\t\t\tif(this.isPaginated && this.settings.axis === \"horizontal\") {\n\t\t\t\t\t\t\tif (this.settings.direction === \"rtl\") {\n\t\t\t\t\t\t\t\tthis.scrollTo(0, 0, true);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.scrollTo(this.container.scrollWidth - this.layout.delta, 0, true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.views.show();\n\t\t\t\t\t}.bind(this));\n\t\t\t}\n\t\t}\n\n\t\tcurrent(){\n\t\t\tvar visible = this.visible();\n\t\t\tif(visible.length){\n\t\t\t\t// Current is the last visible view\n\t\t\t\treturn visible[visible.length-1];\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tclear () {\n\n\t\t\t// this.q.clear();\n\n\t\t\tif (this.views) {\n\t\t\t\tthis.views.hide();\n\t\t\t\tthis.scrollTo(0,0, true);\n\t\t\t\tthis.views.clear();\n\t\t\t}\n\t\t}\n\n\t\tcurrentLocation(){\n\n\t\t\tif (this.settings.axis === \"vertical\") {\n\t\t\t\tthis.location = this.scrolledLocation();\n\t\t\t} else {\n\t\t\t\tthis.location = this.paginatedLocation();\n\t\t\t}\n\t\t\treturn this.location;\n\t\t}\n\n\t\tscrolledLocation() {\n\t\t\tlet visible = this.visible();\n\t\t\tlet container = this.container.getBoundingClientRect();\n\t\t\tlet pageHeight = (container.height < window.innerHeight) ? container.height : window.innerHeight;\n\n\t\t\tlet offset = 0;\n\t\t\tlet used = 0;\n\n\t\t\tif(this.fullsize) {\n\t\t\t\toffset = window.scrollY;\n\t\t\t}\n\n\t\t\tlet sections = visible.map((view) => {\n\t\t\t\tlet {index} = view.section;\n\t\t\t\tlet href = view.section.source || view.section.href;\n\n\t\t\t\tlet position = view.position();\n\t\t\t\tlet height = view.height();\n\n\t\t\t\tlet startPos = offset + container.top - position.top + used;\n\t\t\t\tlet endPos = startPos + pageHeight - used;\n\t\t\t\tif (endPos > height) {\n\t\t\t\t\tendPos = height;\n\t\t\t\t\tused = (endPos - startPos);\n\t\t\t\t}\n\n\t\t\t\tlet totalPages = this.layout.count(height, pageHeight).pages;\n\n\t\t\t\tlet currPage = Math.ceil(startPos / pageHeight);\n\t\t\t\tlet pages = [];\n\t\t\t\tlet endPage = Math.ceil(endPos / pageHeight);\n\n\t\t\t\tpages = [];\n\t\t\t\tfor (var i = currPage; i <= endPage; i++) {\n\t\t\t\t\tlet pg = i + 1;\n\t\t\t\t\tpages.push(pg);\n\t\t\t\t}\n\n\t\t\t\tlet mapping = this.mapping.page(view.contents, view.section.cfiBase, startPos, endPos);\n\n\t\t\t\treturn {\n\t\t\t\t\tindex,\n\t\t\t\t\thref,\n\t\t\t\t\tpages,\n\t\t\t\t\ttotalPages,\n\t\t\t\t\tmapping\n\t\t\t\t};\n\t\t\t});\n\n\t\t\treturn sections;\n\t\t}\n\n\t\tpaginatedLocation(){\n\t\t\tlet visible = this.visible();\n\t\t\tlet container = this.container.getBoundingClientRect();\n\n\t\t\tlet left = 0;\n\t\t\tlet used = 0;\n\n\t\t\tif(this.fullsize) {\n\t\t\t\tleft = window.scrollX;\n\t\t\t}\n\n\t\t\tlet sections = visible.map((view) => {\n\t\t\t\tlet {index} = view.section;\n\t\t\t\tlet href = view.section.source || view.section.href;\n\t\t\t\t// let offset = view.offset().left;\n\t\t\t\tlet position = view.position().left;\n\t\t\t\tlet width = view.width();\n\n\t\t\t\t// Find mapping\n\t\t\t\tlet start = left + container.left - position + used;\n\t\t\t\tlet end = start + this.layout.width - used;\n\n\t\t\t\tlet mapping = this.mapping.page(view.contents, view.section.cfiBase, start, end);\n\n\t\t\t\t// Find displayed pages\n\t\t\t\t//console.log(\"pre\", end, offset + width);\n\t\t\t\t// if (end > offset + width) {\n\t\t\t\t// \tend = offset + width;\n\t\t\t\t// \tused = this.layout.pageWidth;\n\t\t\t\t// }\n\t\t\t\t// console.log(\"post\", end);\n\n\t\t\t\tlet totalPages = this.layout.count(width).pages;\n\t\t\t\tlet startPage = Math.floor(start / this.layout.pageWidth);\n\t\t\t\tlet pages = [];\n\t\t\t\tlet endPage = Math.floor(end / this.layout.pageWidth);\n\n\t\t\t\t// start page should not be negative\n\t\t\t\tif (startPage < 0) {\n\t\t\t\t\tstartPage = 0;\n\t\t\t\t\tendPage = endPage + 1;\n\t\t\t\t}\n\n\t\t\t\t// Reverse page counts for rtl\n\t\t\t\tif (this.settings.direction === \"rtl\") {\n\t\t\t\t\tlet tempStartPage = startPage;\n\t\t\t\t\tstartPage = totalPages - endPage;\n\t\t\t\t\tendPage = totalPages - tempStartPage;\n\t\t\t\t}\n\n\n\t\t\t\tfor (var i = startPage + 1; i <= endPage; i++) {\n\t\t\t\t\tlet pg = i;\n\t\t\t\t\tpages.push(pg);\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tindex,\n\t\t\t\t\thref,\n\t\t\t\t\tpages,\n\t\t\t\t\ttotalPages,\n\t\t\t\t\tmapping\n\t\t\t\t};\n\t\t\t});\n\n\t\t\treturn sections;\n\t\t}\n\n\t\tisVisible(view, offsetPrev, offsetNext, _container){\n\t\t\tvar position = view.position();\n\t\t\tvar container = _container || this.bounds();\n\n\t\t\tif(this.settings.axis === \"horizontal\" &&\n\t\t\t\tposition.right > container.left - offsetPrev &&\n\t\t\t\tposition.left < container.right + offsetNext) {\n\n\t\t\t\treturn true;\n\n\t\t\t} else if(this.settings.axis === \"vertical\" &&\n\t\t\t\tposition.bottom > container.top - offsetPrev &&\n\t\t\t\tposition.top < container.bottom + offsetNext) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tvisible(){\n\t\t\tvar container = this.bounds();\n\t\t\tvar views = this.views.displayed();\n\t\t\tvar viewsLength = views.length;\n\t\t\tvar visible = [];\n\t\t\tvar isVisible;\n\t\t\tvar view;\n\n\t\t\tfor (var i = 0; i < viewsLength; i++) {\n\t\t\t\tview = views[i];\n\t\t\t\tisVisible = this.isVisible(view, 0, 0, container);\n\n\t\t\t\tif(isVisible === true) {\n\t\t\t\t\tvisible.push(view);\n\t\t\t\t}\n\n\t\t\t}\n\t\t\treturn visible;\n\t\t}\n\n\t\tscrollBy(x, y, silent){\n\t\t\tlet dir = this.settings.direction === \"rtl\" ? -1 : 1;\n\n\t\t\tif(silent) {\n\t\t\t\tthis.ignore = true;\n\t\t\t}\n\n\t\t\tif(!this.fullsize) {\n\t\t\t\tif(x) this.container.scrollLeft += x * dir;\n\t\t\t\tif(y) this.container.scrollTop += y;\n\t\t\t} else {\n\t\t\t\twindow.scrollBy(x * dir, y * dir);\n\t\t\t}\n\t\t\tthis.scrolled = true;\n\t\t}\n\n\t\tscrollTo(x, y, silent){\n\t\t\tif(silent) {\n\t\t\t\tthis.ignore = true;\n\t\t\t}\n\n\t\t\tif(!this.fullsize) {\n\t\t\t\tthis.container.scrollLeft = x;\n\t\t\t\tthis.container.scrollTop = y;\n\t\t\t} else {\n\t\t\t\twindow.scrollTo(x,y);\n\t\t\t}\n\t\t\tthis.scrolled = true;\n\t\t}\n\n\t\tonScroll(){\n\t\t\tlet scrollTop;\n\t\t\tlet scrollLeft;\n\n\t\t\tif(!this.fullsize) {\n\t\t\t\tscrollTop = this.container.scrollTop;\n\t\t\t\tscrollLeft = this.container.scrollLeft;\n\t\t\t} else {\n\t\t\t\tscrollTop = window.scrollY;\n\t\t\t\tscrollLeft = window.scrollX;\n\t\t\t}\n\n\t\t\tthis.scrollTop = scrollTop;\n\t\t\tthis.scrollLeft = scrollLeft;\n\n\t\t\tif(!this.ignore) {\n\t\t\t\tthis.emit(EVENTS.MANAGERS.SCROLL, {\n\t\t\t\t\ttop: scrollTop,\n\t\t\t\t\tleft: scrollLeft\n\t\t\t\t});\n\n\t\t\t\tclearTimeout(this.afterScrolled);\n\t\t\t\tthis.afterScrolled = setTimeout(function () {\n\t\t\t\t\tthis.emit(EVENTS.MANAGERS.SCROLLED, {\n\t\t\t\t\t\ttop: this.scrollTop,\n\t\t\t\t\t\tleft: this.scrollLeft\n\t\t\t\t\t});\n\t\t\t\t}.bind(this), 20);\n\n\n\n\t\t\t} else {\n\t\t\t\tthis.ignore = false;\n\t\t\t}\n\n\t\t}\n\n\t\tbounds() {\n\t\t\tvar bounds$$1;\n\n\t\t\tbounds$$1 = this.stage.bounds();\n\n\t\t\treturn bounds$$1;\n\t\t}\n\n\t\tapplyLayout(layout) {\n\n\t\t\tthis.layout = layout;\n\t\t\tthis.updateLayout();\n\t\t\t // this.manager.layout(this.layout.format);\n\t\t}\n\n\t\tupdateLayout() {\n\n\t\t\tif (!this.stage) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._stageSize = this.stage.size();\n\n\t\t\tif(!this.isPaginated) {\n\t\t\t\tthis.layout.calculate(this._stageSize.width, this._stageSize.height);\n\t\t\t} else {\n\t\t\t\tthis.layout.calculate(\n\t\t\t\t\tthis._stageSize.width,\n\t\t\t\t\tthis._stageSize.height,\n\t\t\t\t\tthis.settings.gap\n\t\t\t\t);\n\n\t\t\t\t// Set the look ahead offset for what is visible\n\t\t\t\tthis.settings.offset = this.layout.delta;\n\n\t\t\t\t// this.stage.addStyleRules(\"iframe\", [{\"margin-right\" : this.layout.gap + \"px\"}]);\n\n\t\t\t}\n\n\t\t\t// Set the dimensions for views\n\t\t\tthis.viewSettings.width = this.layout.width;\n\t\t\tthis.viewSettings.height = this.layout.height;\n\n\t\t\tthis.setLayout(this.layout);\n\t\t}\n\n\t\tsetLayout(layout){\n\n\t\t\tthis.viewSettings.layout = layout;\n\n\t\t\tthis.mapping = new Mapping(layout.props, this.settings.direction, this.settings.axis);\n\n\t\t\tif(this.views) {\n\n\t\t\t\tthis.views.forEach(function(view){\n\t\t\t\t\tif (view) {\n\t\t\t\t\t\tview.setLayout(layout);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdateAxis(axis, forceUpdate){\n\n\t\t\tif (!this.isPaginated) {\n\t\t\t\taxis = \"vertical\";\n\t\t\t}\n\n\t\t\tif (!forceUpdate && axis === this.settings.axis) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.settings.axis = axis;\n\n\t\t\tthis.stage && this.stage.axis(axis);\n\n\t\t\tthis.viewSettings.axis = axis;\n\n\t\t\tif (this.mapping) {\n\t\t\t\tthis.mapping = new Mapping(this.layout.props, this.settings.direction, this.settings.axis);\n\t\t\t}\n\n\t\t\tif (this.layout) {\n\t\t\t\tif (axis === \"vertical\") {\n\t\t\t\t\tthis.layout.spread(\"none\");\n\t\t\t\t} else {\n\t\t\t\t\tthis.layout.spread(this.layout.settings.spread);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tupdateFlow(flow){\n\t\t\tlet isPaginated = (flow === \"paginated\" || flow === \"auto\");\n\n\t\t\tthis.isPaginated = isPaginated;\n\n\t\t\tif (flow === \"scrolled-doc\" ||\n\t\t\t\t\tflow === \"scrolled-continuous\" ||\n\t\t\t\t\tflow === \"scrolled\") {\n\t\t\t\tthis.updateAxis(\"vertical\");\n\t\t\t}\n\n\t\t\tthis.viewSettings.flow = flow;\n\n\t\t\tif (!this.settings.overflow) {\n\t\t\t\tthis.overflow = isPaginated ? \"hidden\" : \"auto\";\n\t\t\t} else {\n\t\t\t\tthis.overflow = this.settings.overflow;\n\t\t\t}\n\t\t\t// this.views.forEach(function(view){\n\t\t\t// \tview.setAxis(axis);\n\t\t\t// });\n\n\t\t\tthis.updateLayout();\n\n\t\t}\n\n\t\tgetContents(){\n\t\t\tvar contents = [];\n\t\t\tif (!this.views) {\n\t\t\t\treturn contents;\n\t\t\t}\n\t\t\tthis.views.forEach(function(view){\n\t\t\t\tconst viewContents = view && view.contents;\n\t\t\t\tif (viewContents) {\n\t\t\t\t\tcontents.push(viewContents);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn contents;\n\t\t}\n\n\t\tdirection(dir=\"ltr\") {\n\t\t\tthis.settings.direction = dir;\n\n\t\t\tthis.stage && this.stage.direction(dir);\n\n\t\t\tthis.viewSettings.direction = dir;\n\n\t\t\tthis.updateLayout();\n\t\t}\n\n\t\tisRendered() {\n\t\t\treturn this.rendered;\n\t\t}\n\n\t\tscale(s) {\n\t\t\tthis.settings.scale = s;\n\n\t\t\tif (this.stage) {\n\t\t\t\tthis.stage.scale(s);\n\t\t\t}\n\t\t}\n\t}\n\n\t//-- Enable binding events to Manager\n\teventEmitter(DefaultViewManager.prototype);\n\n\tclass ContinuousViewManager extends DefaultViewManager {\n\t\tconstructor(options) {\n\t\t\tsuper(options);\n\n\t\t\tthis.name = \"continuous\";\n\n\t\t\tthis.settings = extend(this.settings || {}, {\n\t\t\t\tinfinite: true,\n\t\t\t\toverflow: undefined,\n\t\t\t\taxis: undefined,\n\t\t\t\tflow: \"scrolled\",\n\t\t\t\toffset: 500,\n\t\t\t\toffsetDelta: 250,\n\t\t\t\twidth: undefined,\n\t\t\t\theight: undefined\n\t\t\t});\n\n\t\t\textend(this.settings, options.settings || {});\n\n\t\t\t// Gap can be 0, but defaults doesn't handle that\n\t\t\tif (options.settings.gap != \"undefined\" && options.settings.gap === 0) {\n\t\t\t\tthis.settings.gap = options.settings.gap;\n\t\t\t}\n\n\t\t\tthis.viewSettings = {\n\t\t\t\tignoreClass: this.settings.ignoreClass,\n\t\t\t\thooks: this.hooks,\n\t\t\t\taxis: this.settings.axis,\n\t\t\t\tflow: this.settings.flow,\n\t\t\t\tlayout: this.layout,\n\t\t\t\tmethod: this.settings.method || \"url\", // srcdoc, blobUrl, write\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tforceEvenPages: false\n\t\t\t};\n\n\t\t\tthis.scrollTop = 0;\n\t\t\tthis.scrollLeft = 0;\n\t\t}\n\n\t\tdisplay(section, target){\n\t\t\treturn DefaultViewManager.prototype.display.call(this, section, target)\n\t\t\t\t.then(function () {\n\t\t\t\t\treturn this.fill();\n\t\t\t\t}.bind(this));\n\t\t}\n\n\t\tfill(_full){\n\t\t\tvar full = _full || new defer();\n\n\t\t\tthis.q.enqueue(() => {\n\t\t\t\treturn this.check();\n\t\t\t}).then((result) => {\n\t\t\t\tif (result) {\n\t\t\t\t\tthis.fill(full);\n\t\t\t\t} else {\n\t\t\t\t\tfull.resolve();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn full.promise;\n\t\t}\n\n\t\tmoveTo(offset){\n\t\t\t// var bounds = this.stage.bounds();\n\t\t\t// var dist = Math.floor(offset.top / bounds.height) * bounds.height;\n\t\t\tlet distX = 0;\n\t\t\tlet distY = 0;\n\n\t\t\t// let offsetX = 0;\n\t\t\t// let offsetY = 0;\n\n\t\t\tif(!this.isPaginated) {\n\t\t\t\tdistY = offset.top;\n\t\t\t\t// offsetY = offset.top+this.settings.offset;\n\t\t\t} else {\n\t\t\t\tdistX = Math.floor(offset.left / this.layout.delta) * this.layout.delta;\n\t\t\t\t// offsetX = distX+this.settings.offset;\n\t\t\t}\n\n\t\t\tif (distX > 0 || distY > 0) {\n\t\t\t\tthis.scrollBy(distX, distY, true);\n\t\t\t}\n\t\t}\n\n\t\tafterResized(view){\n\t\t\tthis.emit(EVENTS.MANAGERS.RESIZE, view.section);\n\t\t}\n\n\t\t// Remove Previous Listeners if present\n\t\tremoveShownListeners(view){\n\n\t\t\t// view.off(\"shown\", this.afterDisplayed);\n\t\t\t// view.off(\"shown\", this.afterDisplayedAbove);\n\t\t\tview.onDisplayed = function(){};\n\n\t\t}\n\n\t\tadd(section){\n\t\t\tvar view = this.createView(section);\n\n\t\t\tthis.views.append(view);\n\n\t\t\tview.on(EVENTS.VIEWS.RESIZED, (bounds$$1) => {\n\t\t\t\tview.expanded = true;\n\t\t\t});\n\n\t\t\tview.on(EVENTS.VIEWS.AXIS, (axis) => {\n\t\t\t\tthis.updateAxis(axis);\n\t\t\t});\n\n\t\t\t// view.on(EVENTS.VIEWS.SHOWN, this.afterDisplayed.bind(this));\n\t\t\tview.onDisplayed = this.afterDisplayed.bind(this);\n\t\t\tview.onResize = this.afterResized.bind(this);\n\n\t\t\treturn view.display(this.request);\n\t\t}\n\n\t\tappend(section){\n\t\t\tvar view = this.createView(section);\n\n\t\t\tview.on(EVENTS.VIEWS.RESIZED, (bounds$$1) => {\n\t\t\t\tview.expanded = true;\n\t\t\t});\n\n\t\t\t/*\n\t\t\tview.on(EVENTS.VIEWS.AXIS, (axis) => {\n\t\t\t\tthis.updateAxis(axis);\n\t\t\t});\n\t\t\t*/\n\n\t\t\tthis.views.append(view);\n\n\t\t\tview.onDisplayed = this.afterDisplayed.bind(this);\n\n\t\t\treturn view;\n\t\t}\n\n\t\tprepend(section){\n\t\t\tvar view = this.createView(section);\n\n\t\t\tview.on(EVENTS.VIEWS.RESIZED, (bounds$$1) => {\n\t\t\t\tthis.counter(bounds$$1);\n\t\t\t\tview.expanded = true;\n\t\t\t});\n\n\t\t\t/*\n\t\t\tview.on(EVENTS.VIEWS.AXIS, (axis) => {\n\t\t\t\tthis.updateAxis(axis);\n\t\t\t});\n\t\t\t*/\n\n\t\t\tthis.views.prepend(view);\n\n\t\t\tview.onDisplayed = this.afterDisplayed.bind(this);\n\n\t\t\treturn view;\n\t\t}\n\n\t\tcounter(bounds$$1){\n\t\t\tif(this.settings.axis === \"vertical\") {\n\t\t\t\tthis.scrollBy(0, bounds$$1.heightDelta, true);\n\t\t\t} else {\n\t\t\t\tthis.scrollBy(bounds$$1.widthDelta, 0, true);\n\t\t\t}\n\n\t\t}\n\n\t\tupdate(_offset){\n\t\t\tvar container = this.bounds();\n\t\t\tvar views = this.views.all();\n\t\t\tvar viewsLength = views.length;\n\t\t\tvar offset = typeof _offset != \"undefined\" ? _offset : (this.settings.offset || 0);\n\t\t\tvar isVisible;\n\t\t\tvar view;\n\n\t\t\tvar updating = new defer();\n\t\t\tvar promises = [];\n\t\t\tfor (var i = 0; i < viewsLength; i++) {\n\t\t\t\tview = views[i];\n\n\t\t\t\tisVisible = this.isVisible(view, offset, offset, container);\n\n\t\t\t\tif(isVisible === true) {\n\t\t\t\t\t// console.log(\"visible \" + view.index);\n\n\t\t\t\t\tif (!view.displayed) {\n\t\t\t\t\t\tlet displayed = view.display(this.request)\n\t\t\t\t\t\t\t.then(function (view) {\n\t\t\t\t\t\t\t\tview.show();\n\t\t\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\t\t\tview.hide();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tpromises.push(displayed);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tview.show();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.q.enqueue(view.destroy.bind(view));\n\t\t\t\t\t// console.log(\"hidden \" + view.index);\n\n\t\t\t\t\tclearTimeout(this.trimTimeout);\n\t\t\t\t\tthis.trimTimeout = setTimeout(function(){\n\t\t\t\t\t\tthis.q.enqueue(this.trim.bind(this));\n\t\t\t\t\t}.bind(this), 250);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif(promises.length){\n\t\t\t\treturn Promise.all(promises)\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tupdating.reject(err);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tupdating.resolve();\n\t\t\t\treturn updating.promise;\n\t\t\t}\n\n\t\t}\n\n\t\tcheck(_offsetLeft, _offsetTop){\n\t\t\tvar checking = new defer();\n\t\t\tvar newViews = [];\n\n\t\t\tvar horizontal = (this.settings.axis === \"horizontal\");\n\t\t\tvar delta = this.settings.offset || 0;\n\n\t\t\tif (_offsetLeft && horizontal) {\n\t\t\t\tdelta = _offsetLeft;\n\t\t\t}\n\n\t\t\tif (_offsetTop && !horizontal) {\n\t\t\t\tdelta = _offsetTop;\n\t\t\t}\n\n\t\t\tvar bounds$$1 = this._bounds; // bounds saved this until resize\n\n\t\t\tlet rtl = this.settings.direction === \"rtl\";\n\t\t\tlet dir = horizontal && rtl ? -1 : 1; //RTL reverses scrollTop\n\n\t\t\tvar offset = horizontal ? this.scrollLeft : this.scrollTop * dir;\n\t\t\tvar visibleLength = horizontal ? bounds$$1.width : bounds$$1.height;\n\t\t\tvar contentLength = horizontal ? this.container.scrollWidth : this.container.scrollHeight;\n\n\t\t\tlet prepend = () => {\n\t\t\t\tlet first = this.views.first();\n\t\t\t\tlet prev = first && prevSection(first.section, this.spine);\n\n\t\t\t\tif(prev) {\n\t\t\t\t\tnewViews.push(this.prepend(prev));\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlet append = () => {\n\t\t\t\tlet last = this.views.last();\n\t\t\t\tlet next = last && nextSection(last.section, this.spine);\n\n\t\t\t\tif(next) {\n\t\t\t\t\tnewViews.push(this.append(next));\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (offset + visibleLength + delta >= contentLength) {\n\t\t\t\tif (horizontal && rtl) {\n\t\t\t\t\tprepend();\n\t\t\t\t} else {\n\t\t\t\t\tappend();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (offset - delta < 0 ) {\n\t\t\t\tif (horizontal && rtl) {\n\t\t\t\t\tappend();\n\t\t\t\t} else {\n\t\t\t\t\tprepend();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet promises = newViews.map((view) => {\n\t\t\t\treturn view.displayed;\n\t\t\t});\n\n\t\t\tif(newViews.length){\n\t\t\t\treturn Promise.all(promises)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tif (this.layout.name === \"pre-paginated\" && this.layout.props.spread) {\n\t\t\t\t\t\t\treturn this.check();\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t// Check to see if anything new is on screen after rendering\n\t\t\t\t\t\treturn this.update(delta);\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\treturn err;\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.q.enqueue(function(){\n\t\t\t\t\tthis.update();\n\t\t\t\t}.bind(this));\n\t\t\t\tchecking.resolve(false);\n\t\t\t\treturn checking.promise;\n\t\t\t}\n\n\n\t\t}\n\n\t\ttrim(){\n\t\t\tvar task = new defer();\n\t\t\tvar displayed = this.views.displayed();\n\t\t\tvar first = displayed[0];\n\t\t\tvar last = displayed[displayed.length-1];\n\t\t\tvar firstIndex = this.views.indexOf(first);\n\t\t\tvar lastIndex = this.views.indexOf(last);\n\t\t\tvar above = this.views.slice(0, firstIndex);\n\t\t\tvar below = this.views.slice(lastIndex+1);\n\n\t\t\t// Erase all but last above\n\t\t\tfor (var i = 0; i < above.length-1; i++) {\n\t\t\t\tthis.erase(above[i], above);\n\t\t\t}\n\n\t\t\t// Erase all except first below\n\t\t\tfor (var j = 1; j < below.length; j++) {\n\t\t\t\tthis.erase(below[j]);\n\t\t\t}\n\n\t\t\ttask.resolve();\n\t\t\treturn task.promise;\n\t\t}\n\n\t\terase(view, above){ //Trim\n\n\t\t\tvar prevTop;\n\t\t\tvar prevLeft;\n\n\t\t\tif(this.settings.height) {\n\t\t\t\tprevTop = this.container.scrollTop;\n\t\t\t\tprevLeft = this.container.scrollLeft;\n\t\t\t} else {\n\t\t\t\tprevTop = window.scrollY;\n\t\t\t\tprevLeft = window.scrollX;\n\t\t\t}\n\n\t\t\tvar bounds$$1 = view.bounds();\n\n\t\t\tthis.views.remove(view);\n\n\t\t\tif(above) {\n\t\t\t\tif(this.settings.axis === \"vertical\") {\n\t\t\t\t\tthis.scrollTo(0, prevTop - bounds$$1.height, true);\n\t\t\t\t} else {\n\t\t\t\t\tthis.scrollTo(prevLeft - bounds$$1.width, 0, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\taddEventListeners(stage){\n\n\t\t\twindow.addEventListener(\"unload\", function(e){\n\t\t\t\tthis.ignore = true;\n\t\t\t\t// this.scrollTo(0,0);\n\t\t\t\tthis.destroy();\n\t\t\t}.bind(this));\n\n\t\t\tthis.addScrollListeners();\n\t\t}\n\n\t\taddScrollListeners() {\n\t\t\tvar scroller;\n\n\t\t\tthis.tick = requestAnimationFrame$1;\n\n\t\t\tif(this.settings.height) {\n\t\t\t\tthis.prevScrollTop = this.container.scrollTop;\n\t\t\t\tthis.prevScrollLeft = this.container.scrollLeft;\n\t\t\t} else {\n\t\t\t\tthis.prevScrollTop = window.scrollY;\n\t\t\t\tthis.prevScrollLeft = window.scrollX;\n\t\t\t}\n\n\t\t\tthis.scrollDeltaVert = 0;\n\t\t\tthis.scrollDeltaHorz = 0;\n\n\t\t\tif(this.settings.height) {\n\t\t\t\tscroller = this.container;\n\t\t\t\tthis.scrollTop = this.container.scrollTop;\n\t\t\t\tthis.scrollLeft = this.container.scrollLeft;\n\t\t\t} else {\n\t\t\t\tscroller = window;\n\t\t\t\tthis.scrollTop = window.scrollY;\n\t\t\t\tthis.scrollLeft = window.scrollX;\n\t\t\t}\n\n\t\t\tscroller.addEventListener(\"scroll\", this.onScroll.bind(this));\n\t\t\tthis._scrolled = debounce_1(this.scrolled.bind(this), 30);\n\t\t\t// this.tick.call(window, this.onScroll.bind(this));\n\n\t\t\tthis.didScroll = false;\n\n\t\t}\n\n\t\tremoveEventListeners(){\n\t\t\tvar scroller;\n\n\t\t\tif(this.settings.height) {\n\t\t\t\tscroller = this.container;\n\t\t\t} else {\n\t\t\t\tscroller = window;\n\t\t\t}\n\n\t\t\tscroller.removeEventListener(\"scroll\", this.onScroll.bind(this));\n\t\t}\n\n\t\tonScroll(){\n\t\t\tlet scrollTop;\n\t\t\tlet scrollLeft;\n\t\t\tlet dir = this.settings.direction === \"rtl\" ? -1 : 1;\n\n\t\t\tif(this.settings.height) {\n\t\t\t\tscrollTop = this.container.scrollTop;\n\t\t\t\tscrollLeft = this.container.scrollLeft;\n\t\t\t} else {\n\t\t\t\tscrollTop = window.scrollY * dir;\n\t\t\t\tscrollLeft = window.scrollX * dir;\n\t\t\t}\n\n\t\t\tthis.scrollTop = scrollTop;\n\t\t\tthis.scrollLeft = scrollLeft;\n\n\t\t\tif(!this.ignore) {\n\n\t\t\t\tthis._scrolled();\n\n\t\t\t} else {\n\t\t\t\tthis.ignore = false;\n\t\t\t}\n\n\t\t\tthis.scrollDeltaVert += Math.abs(scrollTop-this.prevScrollTop);\n\t\t\tthis.scrollDeltaHorz += Math.abs(scrollLeft-this.prevScrollLeft);\n\n\t\t\tthis.prevScrollTop = scrollTop;\n\t\t\tthis.prevScrollLeft = scrollLeft;\n\n\t\t\tclearTimeout(this.scrollTimeout);\n\t\t\tthis.scrollTimeout = setTimeout(function(){\n\t\t\t\tthis.scrollDeltaVert = 0;\n\t\t\t\tthis.scrollDeltaHorz = 0;\n\t\t\t}.bind(this), 150);\n\n\n\t\t\tthis.didScroll = false;\n\n\t\t}\n\n\t\tscrolled() {\n\t\t\tthis.q.enqueue(function() {\n\t\t\t\tthis.check();\n\t\t\t}.bind(this));\n\n\t\t\tthis.emit(EVENTS.MANAGERS.SCROLL, {\n\t\t\t\ttop: this.scrollTop,\n\t\t\t\tleft: this.scrollLeft\n\t\t\t});\n\n\t\t\tclearTimeout(this.afterScrolled);\n\t\t\tthis.afterScrolled = setTimeout(function () {\n\t\t\t\tthis.emit(EVENTS.MANAGERS.SCROLLED, {\n\t\t\t\t\ttop: this.scrollTop,\n\t\t\t\t\tleft: this.scrollLeft\n\t\t\t\t});\n\t\t\t}.bind(this));\n\t\t}\n\n\t\tnext(){\n\t\t\tlet delta = this.layout.props.name === \"pre-paginated\" &&\n\t\t\t\t\t\t\t\t\tthis.layout.props.spread ? this.layout.props.delta * 2 : this.layout.props.delta;\n\n\t\t\tif(!this.views.length) return;\n\n\t\t\tif(this.isPaginated && this.settings.axis === \"horizontal\") {\n\n\t\t\t\tthis.scrollBy(delta, 0, true);\n\n\t\t\t} else {\n\n\t\t\t\tthis.scrollBy(0, this.layout.height, true);\n\n\t\t\t}\n\n\t\t\tthis.q.enqueue(function() {\n\t\t\t\tthis.check();\n\t\t\t}.bind(this));\n\t\t}\n\n\t\tprev(){\n\t\t\tlet delta = this.layout.props.name === \"pre-paginated\" &&\n\t\t\t\t\t\t\t\t\tthis.layout.props.spread ? this.layout.props.delta * 2 : this.layout.props.delta;\n\n\t\t\tif(!this.views.length) return;\n\n\t\t\tif(this.isPaginated && this.settings.axis === \"horizontal\") {\n\n\t\t\t\tthis.scrollBy(-delta, 0, true);\n\n\t\t\t} else {\n\n\t\t\t\tthis.scrollBy(0, -this.layout.height, true);\n\n\t\t\t}\n\n\t\t\tthis.q.enqueue(function() {\n\t\t\t\tthis.check();\n\t\t\t}.bind(this));\n\t\t}\n\n\t\tupdateAxis(axis, forceUpdate){\n\n\t\t\tif (!this.isPaginated) {\n\t\t\t\taxis = \"vertical\";\n\t\t\t}\n\n\t\t\tif (!forceUpdate && axis === this.settings.axis) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.settings.axis = axis;\n\n\t\t\tthis.stage && this.stage.axis(axis);\n\n\t\t\tthis.viewSettings.axis = axis;\n\n\t\t\tif (this.mapping) {\n\t\t\t\tthis.mapping.axis(axis);\n\t\t\t}\n\n\t\t\tif (this.layout) {\n\t\t\t\tif (axis === \"vertical\") {\n\t\t\t\t\tthis.layout.spread(\"none\");\n\t\t\t\t} else {\n\t\t\t\t\tthis.layout.spread(this.layout.settings.spread);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (axis === \"vertical\") {\n\t\t\t\tthis.settings.infinite = true;\n\t\t\t} else {\n\t\t\t\tthis.settings.infinite = false;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tconst DEV = false;\n\n\t/**\n\t * Displays an Epub as a series of Views for each Section.\n\t * Requires Manager and View class to handle specifics of rendering\n\t * the section contetn.\n\t * @class\n\t * @param {Book} book\n\t * @param {object} [options]\n\t * @param {number} [options.width]\n\t * @param {number} [options.height]\n\t * @param {string} [options.ignoreClass] class for the cfi parser to ignore\n\t * @param {string | function | object} [options.manager='default']\n\t * @param {string | function} [options.view='iframe']\n\t * @param {string} [options.layout] layout to force\n\t * @param {string} [options.spread] force spread value\n\t * @param {number} [options.minSpreadWidth] overridden by spread: none (never) / both (always)\n\t * @param {string} [options.stylesheet] url of stylesheet to be injected\n\t * @param {string} [options.script] url of script to be injected\n\t */\n\tclass Rendition {\n\t\tconstructor(manifest, options) {\n\n\t\t\tthis.settings = extend(this.settings || {}, {\n\t\t\t\twidth: null,\n\t\t\t\theight: null,\n\t\t\t\tignoreClass: \"\",\n\t\t\t\tmanager: \"default\",\n\t\t\t\tview: \"iframe\",\n\t\t\t\tflow: null,\n\t\t\t\tlayout: null,\n\t\t\t\tspread: null,\n\t\t\t\tminSpreadWidth: 800,\n\t\t\t\tstylesheet: null,\n\t\t\t\tscript: null,\n\t\t\t\tworker: undefined,\n\t\t\t\tworkerScope: undefined\n\t\t\t});\n\n\t\t\textend(this.settings, options);\n\n\t\t\tif (typeof(this.settings.manager) === \"object\") {\n\t\t\t\tthis.manager = this.settings.manager;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Adds Hook methods to the Rendition prototype\n\t\t\t * @member {object} hooks\n\t\t\t * @property {Hook} hooks.content\n\t\t\t * @memberof Rendition\n\t\t\t */\n\t\t\tthis.hooks = {};\n\t\t\tthis.hooks.display = new Hook(this);\n\t\t\tthis.hooks.content = new Hook(this);\n\t\t\tthis.hooks.unloaded = new Hook(this);\n\t\t\tthis.hooks.layout = new Hook(this);\n\t\t\tthis.hooks.render = new Hook(this);\n\t\t\tthis.hooks.show = new Hook(this);\n\n\t\t\tthis.hooks.content.register(this.handleLinks.bind(this));\n\t\t\tthis.hooks.content.register(this.passEvents.bind(this));\n\t\t\tthis.hooks.content.register(this.adjustImages.bind(this));\n\t\t\tthis.hooks.content.register(this.addIdentifier.bind(this));\n\n\t\t\t/**\n\t\t\t * @member {Themes} themes\n\t\t\t * @memberof Rendition\n\t\t\t */\n\t\t\tthis.themes = new Themes(this);\n\n\t\t\t/**\n\t\t\t * @member {Annotations} annotations\n\t\t\t * @memberof Rendition\n\t\t\t */\n\t\t\tthis.annotations = new Annotations(this);\n\n\t\t\tthis.epubcfi = new EpubCFI();\n\n\t\t\tthis.q = new Queue(this);\n\n\t\t\t/**\n\t\t\t * A Rendered Location Range\n\t\t\t * @typedef location\n\t\t\t * @type {Object}\n\t\t\t * @property {object} start\n\t\t\t * @property {string} start.index\n\t\t\t * @property {string} start.href\n\t\t\t * @property {object} start.displayed\n\t\t\t * @property {EpubCFI} start.cfi\n\t\t\t * @property {number} start.location\n\t\t\t * @property {number} start.percentage\n\t\t\t * @property {number} start.displayed.page\n\t\t\t * @property {number} start.displayed.total\n\t\t\t * @property {object} end\n\t\t\t * @property {string} end.index\n\t\t\t * @property {string} end.href\n\t\t\t * @property {object} end.displayed\n\t\t\t * @property {EpubCFI} end.cfi\n\t\t\t * @property {number} end.location\n\t\t\t * @property {number} end.percentage\n\t\t\t * @property {number} end.displayed.page\n\t\t\t * @property {number} end.displayed.total\n\t\t\t * @property {boolean} atStart\n\t\t\t * @property {boolean} atEnd\n\t\t\t * @memberof Rendition\n\t\t\t */\n\t\t\tthis.location = undefined;\n\n\t\t\t// Hold queue until book is opened\n\t\t\t// this.q.enqueue(this.book.opened);\n\n\t\t\t/**\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis.spineByHref = undefined;\n\t\t\tthis.spineBySource = undefined;\n\t\t\tthis.spineById = undefined;\n\n\t\t\tthis.starting = new defer();\n\t\t\t/**\n\t\t\t * @member {promise} started returns after the rendition has started\n\t\t\t * @memberof Rendition\n\t\t\t */\n\t\t\tthis.started = this.starting.promise;\n\t\t\t// Block the queue until rendering is started\n\t\t\tthis.q.enqueue(this.started);\n\n\t\t\tif (manifest) {\n\t\t\t\tthis.unpack(manifest);\n\t\t\t}\n\n\t\t\t// If a service workers is used, block queue till it is ready\n\t\t\tif (this.settings.worker && navigator && 'serviceWorker' in navigator) {\n\t\t\t\tthis.q.enqueue(() => {\n\t\t\t\t\treturn this.worker(this.settings.worker)\n\t\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\t\t// worker failed, will need replacements\n\t\t\t\t\t\t\tthis.starting = new defer();\n\t\t\t\t\t\t\tthis.started = this.starting.promise;\n\t\t\t\t\t\t\t// Block the queue again\n\t\t\t\t\t\t\treturn this.q.enqueue(this.started);\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Load Book object or JSON manifest\n\t\t */\n\t\tunpack(manifest) {\n\t\t\tif (!manifest) {\n\t\t\t\tthrow new Error(\"No manifest provided\");\n\t\t\t}\n\n\t\t\tif (typeof manifest === \"string\") {\n\t\t\t\tthis.manifest = JSON.parse(manifest);\n\t\t\t} else {\n\t\t\t\tthis.manifest = manifest;\n\t\t\t}\n\n\t\t\tlet spine = this.manifest.spine.map((item, index) =>{\n\t\t\t\titem.index = index;\n\t\t\t\treturn item;\n\t\t\t});\n\n\t\t\tthis.spineByHref = {};\n\t\t\tthis.spineBySource = {};\n\t\t\tthis.spineById = {};\n\n\t\t\tthis.manifest.spine.forEach((section, index) => {\n\t\t\t\tthis.spineByHref[decodeURI(section.href)] = index;\n\t\t\t\tthis.spineByHref[encodeURI(section.href)] = index;\n\t\t\t\tthis.spineByHref[section.href] = index;\n\n\t\t\t\tif (section.source) {\n\t\t\t\t\tthis.spineBySource[decodeURI(section.source)] = index;\n\t\t\t\t\tthis.spineBySource[encodeURI(section.source)] = index;\n\t\t\t\t\tthis.spineBySource[section.source] = index;\n\t\t\t\t}\n\n\t\t\t\tthis.spineById[section.idref] = index;\n\t\t\t});\n\n\t\t\tthis.book = new Book(manifest);\n\n\t\t\tthis.start();\n\t\t}\n\t\t/**\n\t\t * Set the manager function\n\t\t * @param {function} manager\n\t\t */\n\t\tsetManager(manager) {\n\t\t\tthis.manager = manager;\n\t\t}\n\n\t\t/**\n\t\t * Require the manager from passed string, or as a class function\n\t\t * @param  {string|object} manager [description]\n\t\t * @return {method}\n\t\t */\n\t\trequireManager(manager) {\n\t\t\tvar viewManager;\n\n\t\t\t// If manager is a string, try to load from imported managers\n\t\t\tif (typeof manager === \"string\" && manager === \"default\") {\n\t\t\t\tviewManager = DefaultViewManager;\n\t\t\t} else if (typeof manager === \"string\" && manager === \"continuous\") {\n\t\t\t\tviewManager = ContinuousViewManager;\n\t\t\t} else {\n\t\t\t\t// otherwise, assume we were passed a class function\n\t\t\t\tviewManager = manager;\n\t\t\t}\n\n\t\t\treturn viewManager;\n\t\t}\n\n\t\t/**\n\t\t * Require the view from passed string, or as a class function\n\t\t * @param  {string|object} view\n\t\t * @return {view}\n\t\t */\n\t\trequireView(view) {\n\t\t\tvar View;\n\n\t\t\t// If view is a string, try to load from imported views,\n\t\t\tif (typeof view == \"string\" && view === \"iframe\") {\n\t\t\t\tView = IframeView;\n\t\t\t} else {\n\t\t\t\t// otherwise, assume we were passed a class function\n\t\t\t\tView = view;\n\t\t\t}\n\n\t\t\treturn View;\n\t\t}\n\n\t\t/**\n\t\t * Start the rendering\n\t\t * @return {Promise} rendering has started\n\t\t */\n\t\tstart(){\n\n\t\t\tif(!this.manager) {\n\t\t\t\tthis.ViewManager = this.requireManager(this.settings.manager);\n\t\t\t\tthis.View = this.requireView(this.settings.view);\n\n\t\t\t\tthis.manager = new this.ViewManager({\n\t\t\t\t\tview: this.View,\n\t\t\t\t\t// queue: this.q,\n\t\t\t\t\tspine: this.manifest.spine,\n\t\t\t\t\thooks: this.hooks,\n\t\t\t\t\t// request: this.book.load.bind(this.book),\n\t\t\t\t\tsettings: this.settings\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.direction(this.manifest.metadata.direction);\n\n\t\t\t// Parse metadata to get layout props\n\t\t\tthis.settings.globalLayoutProperties = this.determineLayoutProperties(this.manifest.metadata);\n\n\t\t\tthis.flow(this.settings.globalLayoutProperties.flow);\n\n\t\t\tthis.layout(this.settings.globalLayoutProperties);\n\n\t\t\t// Listen for displayed views\n\t\t\tthis.manager.on(EVENTS.MANAGERS.ADDED, this.afterDisplayed.bind(this));\n\t\t\tthis.manager.on(EVENTS.MANAGERS.REMOVED, this.afterRemoved.bind(this));\n\n\t\t\t// Listen for resizing\n\t\t\tthis.manager.on(EVENTS.MANAGERS.RESIZED, this.onResized.bind(this));\n\n\t\t\t// Listen for rotation\n\t\t\tthis.manager.on(EVENTS.MANAGERS.ORIENTATION_CHANGE, this.onOrientationChange.bind(this));\n\n\t\t\t// Listen for scroll changes\n\t\t\tthis.manager.on(EVENTS.MANAGERS.SCROLLED, this.reportLocation.bind(this));\n\n\t\t\t/**\n\t\t\t * Emit that rendering has started\n\t\t\t * @event started\n\t\t\t * @memberof Rendition\n\t\t\t */\n\t\t\tthis.emit(EVENTS.RENDITION.STARTED);\n\n\t\t\t// Start processing queue\n\t\t\tthis.starting.resolve();\n\t\t}\n\n\t\t/**\n\t\t * Call to attach the container to an element in the dom\n\t\t * Container must be attached before rendering can begin\n\t\t * @param  {element} element to attach to\n\t\t * @return {Promise}\n\t\t */\n\t\tattachTo(element){\n\n\t\t\treturn this.q.enqueue(function () {\n\n\t\t\t\t// Start rendering\n\t\t\t\tthis.manager.render(element, {\n\t\t\t\t\t\"width\"  : this.settings.width,\n\t\t\t\t\t\"height\" : this.settings.height\n\t\t\t\t});\n\n\t\t\t\t/**\n\t\t\t\t * Emit that rendering has attached to an element\n\t\t\t\t * @event attached\n\t\t\t\t * @memberof Rendition\n\t\t\t\t */\n\t\t\t\tthis.emit(EVENTS.RENDITION.ATTACHED);\n\n\t\t\t}.bind(this));\n\n\t\t}\n\n\t\t/**\n\t\t * Display a point in the book\n\t\t * The request will be added to the rendering Queue,\n\t\t * so it will wait until book is opened, rendering started\n\t\t * and all other rendering tasks have finished to be called.\n\t\t * @param  {string} target Url or EpubCFI\n\t\t * @return {Promise}\n\t\t */\n\t\tdisplay(target){\n\t\t\tif (this.displaying) {\n\t\t\t\tthis.displaying.resolve();\n\t\t\t}\n\t\t\treturn this.q.enqueue(this._display, target);\n\t\t}\n\n\t\t/**\n\t\t * Tells the manager what to display immediately\n\t\t * @private\n\t\t * @param  {string} target Url or EpubCFI\n\t\t * @return {Promise}\n\t\t */\n\t\t_display(target){\n\t\t\t// if (!this.book) {\n\t\t\t// \treturn;\n\t\t\t// }\n\t\t\tvar displaying = new defer();\n\t\t\tvar displayed = displaying.promise;\n\t\t\tvar section;\n\n\t\t\tthis.displaying = displaying;\n\n\t\t\t// Check if this is a book percentage\n\t\t\tif (this.locations &&\n\t\t\t\t\tthis.locations.length() &&\n\t\t\t\t (isFloat(target) || (target === \"1.0\")) ) { // Handle 1.0\n\t\t\t\ttarget = this.locations.cfiFromPercentage(parseFloat(target));\n\t\t\t}\n\n\t\t\tsection = this.findInSpine(target);\n\n\t\t\tif(!section){\n\t\t\t\tdisplaying.reject(new Error(\"No Section Found\"));\n\t\t\t\treturn displayed;\n\t\t\t}\n\n\t\t\tthis.manager.display(section, target)\n\t\t\t\t.then(() => {\n\t\t\t\t\tdisplaying.resolve(section);\n\t\t\t\t\tthis.displaying = undefined;\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Emit that a section has been displayed\n\t\t\t\t\t * @event displayed\n\t\t\t\t\t * @param {Section} section\n\t\t\t\t\t * @memberof Rendition\n\t\t\t\t\t */\n\t\t\t\t\tthis.emit(EVENTS.RENDITION.DISPLAYED, section);\n\t\t\t\t\tthis.reportLocation();\n\t\t\t\t}, (err) => {\n\t\t\t\t\t/**\n\t\t\t\t\t * Emit that has been an error displaying\n\t\t\t\t\t * @event displayError\n\t\t\t\t\t * @param {Section} section\n\t\t\t\t\t * @memberof Rendition\n\t\t\t\t\t */\n\t\t\t\t\tthis.emit(EVENTS.RENDITION.DISPLAY_ERROR, err);\n\t\t\t\t});\n\n\t\t\treturn displayed;\n\t\t}\n\n\t\t/**\n\t\t * Report what section has been displayed\n\t\t * @private\n\t\t * @param  {*} view\n\t\t */\n\t\tafterDisplayed(view){\n\n\t\t\tview.on(EVENTS.VIEWS.MARK_CLICKED, (cfiRange, data) => this.triggerMarkEvent(cfiRange, data, view));\n\n\t\t\tthis.hooks.render.trigger(view, this)\n\t\t\t\t.then(() => {\n\t\t\t\t\tif (view.contents) {\n\t\t\t\t\t\tthis.hooks.content.trigger(view.contents, this).then(() => {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Emit that a section has been rendered\n\t\t\t\t\t\t\t * @event rendered\n\t\t\t\t\t\t\t * @param {Section} section\n\t\t\t\t\t\t\t * @param {View} view\n\t\t\t\t\t\t\t * @memberof Rendition\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tthis.emit(EVENTS.RENDITION.RENDERED, view.section, view);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.emit(EVENTS.RENDITION.RENDERED, view.section, view);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t}\n\n\t\t/**\n\t\t * Report what has been removed\n\t\t * @private\n\t\t * @param  {*} view\n\t\t */\n\t\tafterRemoved(view){\n\t\t\tthis.hooks.unloaded.trigger(view, this).then(() => {\n\t\t\t\t/**\n\t\t\t\t * Emit that a section has been removed\n\t\t\t\t * @event removed\n\t\t\t\t * @param {Section} section\n\t\t\t\t * @param {View} view\n\t\t\t\t * @memberof Rendition\n\t\t\t\t */\n\t\t\t\tthis.emit(EVENTS.RENDITION.REMOVED, view.section, view);\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Report resize events and display the last seen location\n\t\t * @private\n\t\t */\n\t\tonResized(size){\n\n\t\t\t/**\n\t\t\t * Emit that the rendition has been resized\n\t\t\t * @event resized\n\t\t\t * @param {number} width\n\t\t\t * @param {height} height\n\t\t\t * @memberof Rendition\n\t\t\t */\n\t\t\tthis.emit(EVENTS.RENDITION.RESIZED, {\n\t\t\t\twidth: size.width,\n\t\t\t\theight: size.height\n\t\t\t});\n\n\t\t\tif (this.location && this.location.start) {\n\t\t\t\tthis.display(this.location.start.cfi);\n\t\t\t}\n\n\t\t}\n\n\t\t/**\n\t\t * Report orientation events and display the last seen location\n\t\t * @private\n\t\t */\n\t\tonOrientationChange(orientation){\n\t\t\t/**\n\t\t\t * Emit that the rendition has been rotated\n\t\t\t * @event orientationchange\n\t\t\t * @param {string} orientation\n\t\t\t * @memberof Rendition\n\t\t\t */\n\t\t\tthis.emit(EVENTS.RENDITION.ORIENTATION_CHANGE, orientation);\n\t\t}\n\n\t\t/**\n\t\t * Move the Rendition to a specific offset\n\t\t * Usually you would be better off calling display()\n\t\t * @param {object} offset\n\t\t */\n\t\tmoveTo(offset){\n\t\t\tthis.manager.moveTo(offset);\n\t\t}\n\n\t\t/**\n\t\t * Trigger a resize of the views\n\t\t * @param {number} [width]\n\t\t * @param {number} [height]\n\t\t */\n\t\tresize(width, height){\n\t\t\tif (width) {\n\t\t\t\tthis.settings.width = width;\n\t\t\t}\n\t\t\tif (height) {\n\t\t\t\tthis.settings.height = height;\n\t\t\t}\n\t\t\tthis.manager.resize(width, height);\n\t\t}\n\n\t\t/**\n\t\t * Clear all rendered views\n\t\t */\n\t\tclear(){\n\t\t\tthis.manager.clear();\n\t\t}\n\n\t\t/**\n\t\t * Go to the next \"page\" in the rendition\n\t\t * @return {Promise}\n\t\t */\n\t\tnext(){\n\t\t\treturn this.q.enqueue(this.manager.next.bind(this.manager))\n\t\t\t\t.then(this.reportLocation.bind(this));\n\t\t}\n\n\t\t/**\n\t\t * Go to the previous \"page\" in the rendition\n\t\t * @return {Promise}\n\t\t */\n\t\tprev(){\n\t\t\treturn this.q.enqueue(this.manager.prev.bind(this.manager))\n\t\t\t\t.then(this.reportLocation.bind(this));\n\t\t}\n\n\t\t//-- http://www.idpf.org/epub/301/spec/epub-publications.html#meta-properties-rendering\n\t\t/**\n\t\t * Determine the Layout properties from metadata and settings\n\t\t * @private\n\t\t * @param  {object} metadata\n\t\t * @return {object} properties\n\t\t */\n\t\tdetermineLayoutProperties(metadata){\n\t\t\tvar properties;\n\t\t\tvar layout = this.settings.layout || metadata.layout || \"reflowable\";\n\t\t\tvar spread = this.settings.spread || metadata.spread || \"auto\";\n\t\t\tvar orientation = this.settings.orientation || metadata.orientation || \"auto\";\n\t\t\tvar flow = this.settings.flow || metadata.flow || \"auto\";\n\t\t\tvar viewport = metadata.viewport || \"\";\n\t\t\tvar minSpreadWidth = this.settings.minSpreadWidth || metadata.minSpreadWidth || 800;\n\t\t\tvar direction = this.settings.direction || metadata.direction || \"ltr\";\n\n\t\t\tproperties = {\n\t\t\t\tlayout : layout,\n\t\t\t\tspread : spread,\n\t\t\t\torientation : orientation,\n\t\t\t\tflow : flow,\n\t\t\t\tviewport : viewport,\n\t\t\t\tminSpreadWidth : minSpreadWidth,\n\t\t\t\tdirection: direction\n\t\t\t};\n\n\t\t\treturn properties;\n\t\t}\n\n\t\t/**\n\t\t * Adjust the flow of the rendition to paginated or scrolled\n\t\t * (scrolled-continuous vs scrolled-doc are handled by different view managers)\n\t\t * @param  {string} flow\n\t\t */\n\t\tflow(flow){\n\t\t\tvar _flow = flow;\n\t\t\tif (flow === \"scrolled\" ||\n\t\t\t\t\tflow === \"scrolled-doc\" ||\n\t\t\t\t\tflow === \"scrolled-continuous\") {\n\t\t\t\t_flow = \"scrolled\";\n\t\t\t}\n\n\t\t\tif (flow === \"auto\" || flow === \"paginated\") {\n\t\t\t\t_flow = \"paginated\";\n\t\t\t}\n\n\t\t\tthis.settings.flow = flow;\n\n\t\t\tif (this._layout) {\n\t\t\t\tthis._layout.flow(_flow);\n\t\t\t}\n\n\t\t\tif (this.manager && this._layout) {\n\t\t\t\tthis.manager.applyLayout(this._layout);\n\t\t\t}\n\n\t\t\tif (this.manager) {\n\t\t\t\tthis.manager.updateFlow(_flow);\n\t\t\t}\n\n\t\t\tif (this.manager && this.manager.isRendered() && this.location) {\n\t\t\t\tthis.manager.clear();\n\t\t\t\tthis.display(this.location.start.cfi);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Adjust the layout of the rendition to reflowable or pre-paginated\n\t\t * @param  {object} settings\n\t\t */\n\t\tlayout(settings){\n\t\t\tif (settings) {\n\t\t\t\tthis._layout = new Layout(settings);\n\t\t\t\tthis._layout.spread(settings.spread, this.settings.minSpreadWidth);\n\n\t\t\t\t// this.mapping = new Mapping(this._layout.props);\n\n\t\t\t\tthis._layout.on(EVENTS.LAYOUT.UPDATED, (props, changed) => {\n\t\t\t\t\tthis.emit(EVENTS.RENDITION.LAYOUT, props, changed);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (this.manager && this._layout) {\n\t\t\t\tthis.manager.applyLayout(this._layout);\n\t\t\t}\n\n\t\t\treturn this._layout;\n\t\t}\n\n\t\t/**\n\t\t * Adjust if the rendition uses spreads\n\t\t * @param  {string} spread none | auto (TODO: implement landscape, portrait, both)\n\t\t * @param  {int} min min width to use spreads at\n\t\t */\n\t\tspread(spread, min){\n\n\t\t\tthis._layout.spread(spread, min);\n\n\t\t\tif (this.manager.isRendered()) {\n\t\t\t\tthis.manager.updateLayout();\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Adjust the direction of the rendition\n\t\t * @param  {string} dir\n\t\t */\n\t\tdirection(dir){\n\n\t\t\tthis.settings.direction = dir || \"ltr\";\n\n\t\t\tif (this.manager) {\n\t\t\t\tthis.manager.direction(this.settings.direction);\n\t\t\t}\n\n\t\t\tif (this.manager && this.manager.isRendered() && this.location) {\n\t\t\t\tthis.manager.clear();\n\t\t\t\tthis.display(this.location.start.cfi);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Report the current location\n\t\t * @fires relocated\n\t\t * @fires locationChanged\n\t\t */\n\t\treportLocation(){\n\t\t\treturn this.q.enqueue(function reportedLocation(){\n\t\t\t\trequestAnimationFrame(function reportedLocationAfterRAF() {\n\t\t\t\t\tvar location = this.manager.currentLocation();\n\t\t\t\t\tif (location && location.then && typeof location.then === \"function\") {\n\t\t\t\t\t\tlocation.then(function(result) {\n\t\t\t\t\t\t\tlet located = this.located(result);\n\n\t\t\t\t\t\t\tif (!located || !located.start || !located.end) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.location = located;\n\n\t\t\t\t\t\t\tthis.emit(EVENTS.RENDITION.LOCATION_CHANGED, {\n\t\t\t\t\t\t\t\tindex: this.location.start.index,\n\t\t\t\t\t\t\t\thref: this.location.start.href,\n\t\t\t\t\t\t\t\tstart: this.location.start.cfi,\n\t\t\t\t\t\t\t\tend: this.location.end.cfi,\n\t\t\t\t\t\t\t\tpercentage: this.location.start.percentage\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tthis.emit(EVENTS.RENDITION.RELOCATED, this.location);\n\t\t\t\t\t\t}.bind(this));\n\t\t\t\t\t} else if (location) {\n\t\t\t\t\t\tlet located = this.located(location);\n\n\t\t\t\t\t\tif (!located || !located.start || !located.end) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.location = located;\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * @event locationChanged\n\t\t\t\t\t\t * @deprecated\n\t\t\t\t\t\t * @type {object}\n\t\t\t\t\t\t * @property {number} index\n\t\t\t\t\t\t * @property {string} href\n\t\t\t\t\t\t * @property {EpubCFI} start\n\t\t\t\t\t\t * @property {EpubCFI} end\n\t\t\t\t\t\t * @property {number} percentage\n\t\t\t\t\t\t * @memberof Rendition\n\t\t\t\t\t\t */\n\t\t\t\t\t\tthis.emit(EVENTS.RENDITION.LOCATION_CHANGED, {\n\t\t\t\t\t\t\tindex: this.location.start.index,\n\t\t\t\t\t\t\thref: this.location.start.href,\n\t\t\t\t\t\t\tstart: this.location.start.cfi,\n\t\t\t\t\t\t\tend: this.location.end.cfi,\n\t\t\t\t\t\t\tpercentage: this.location.start.percentage\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * @event relocated\n\t\t\t\t\t\t * @type {displayedLocation}\n\t\t\t\t\t\t * @memberof Rendition\n\t\t\t\t\t\t */\n\t\t\t\t\t\tthis.emit(EVENTS.RENDITION.RELOCATED, this.location);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this));\n\t\t\t}.bind(this));\n\t\t}\n\n\t\t/**\n\t\t * Get the Current Location object\n\t\t * @return {displayedLocation | promise} location (may be a promise)\n\t\t */\n\t\tcurrentLocation(){\n\t\t\tvar location = this.manager.currentLocation();\n\t\t\tif (location && location.then && typeof location.then === \"function\") {\n\t\t\t\tlocation.then(function(result) {\n\t\t\t\t\tlet located = this.located(result);\n\t\t\t\t\treturn located;\n\t\t\t\t}.bind(this));\n\t\t\t} else if (location) {\n\t\t\t\tlet located = this.located(location);\n\t\t\t\treturn located;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Creates a Rendition#locationRange from location\n\t\t * passed by the Manager\n\t\t * @returns {displayedLocation}\n\t\t * @private\n\t\t */\n\t\tlocated(location){\n\t\t\tif (!location.length) {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t\tlet start = location[0];\n\t\t\tlet end = location[location.length-1];\n\n\t\t\tlet located = {\n\t\t\t\tstart: {\n\t\t\t\t\tindex: start.index,\n\t\t\t\t\thref: start.href,\n\t\t\t\t\tcfi: start.mapping.start,\n\t\t\t\t\tdisplayed: {\n\t\t\t\t\t\tpage: start.pages[0] || 1,\n\t\t\t\t\t\ttotal: start.totalPages\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tend: {\n\t\t\t\t\tindex: end.index,\n\t\t\t\t\thref: end.href,\n\t\t\t\t\tcfi: end.mapping.end,\n\t\t\t\t\tdisplayed: {\n\t\t\t\t\t\tpage: end.pages[end.pages.length-1] || 1,\n\t\t\t\t\t\ttotal: end.totalPages\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (this.locations) {\n\t\t\t\tlet locationStart = this.locations.locationFromCfi(start.mapping.start);\n\t\t\t\tlet locationEnd = this.locations.locationFromCfi(end.mapping.end);\n\n\t\t\t\tif (locationStart != null) {\n\t\t\t\t\tlocated.start.location = locationStart;\n\t\t\t\t\tlocated.start.percentage = this.locations.percentageFromLocation(locationStart);\n\t\t\t\t}\n\t\t\t\tif (locationEnd != null) {\n\t\t\t\t\tlocated.end.location = locationEnd;\n\t\t\t\t\tlocated.end.percentage = this.locations.percentageFromLocation(locationEnd);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.pageList) {\n\t\t\t\tlet pageStart = this.pageList.pageFromCfi(start.mapping.start);\n\t\t\t\tlet pageEnd = this.pageList.pageFromCfi(end.mapping.end);\n\n\t\t\t\tif (pageStart != -1) {\n\t\t\t\t\tlocated.start.page = pageStart;\n\t\t\t\t}\n\t\t\t\tif (pageEnd != -1) {\n\t\t\t\t\tlocated.end.page = pageEnd;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (end.index === this.manifest.spine[this.manifest.spine.length - 1].index &&\n\t\t\t\t\tlocated.end.displayed.page >= located.end.displayed.total) {\n\t\t\t\tlocated.atEnd = true;\n\t\t\t}\n\n\t\t\tif (start.index === this.manifest.spine[0].index &&\n\t\t\t\t\tlocated.start.displayed.page === 1) {\n\t\t\t\tlocated.atStart = true;\n\t\t\t}\n\n\t\t\treturn located;\n\t\t}\n\n\t\t/**\n\t\t * Remove and Clean Up the Rendition\n\t\t */\n\t\tdestroy(){\n\t\t\t// Clear the queue\n\t\t\tthis.q.clear();\n\t\t\tthis.q = undefined;\n\n\t\t\tthis.manager && this.manager.destroy();\n\n\t\t\tthis.manifest = undefined;\n\n\t\t\tthis.spineByHref = undefined;\n\t\t\tthis.spineBySource = undefined;\n\t\t\tthis.spineById = undefined;\n\n\t\t\tthis.hooks.display.clear();\n\t\t\t// this.hooks.serialize.clear();\n\t\t\tthis.hooks.content.clear();\n\t\t\tthis.hooks.layout.clear();\n\t\t\tthis.hooks.render.clear();\n\t\t\tthis.hooks.show.clear();\n\t\t\tthis.hooks = {};\n\n\t\t\tthis.themes.destroy();\n\t\t\tthis.themes = undefined;\n\n\t\t\tthis.epubcfi = undefined;\n\n\t\t\tthis.starting = undefined;\n\t\t\tthis.started = undefined;\n\n\t\t}\n\n\t\t/**\n\t\t * Pass the events from a view's Contents\n\t\t * @private\n\t\t * @param  {View} view\n\t\t */\n\t\tpassEvents(contents){\n\t\t\tvar listenedEvents = Contents.listenedEvents;\n\n\t\t\tlistenedEvents.forEach((e) => {\n\t\t\t\tcontents.on(e, (ev) => this.triggerViewEvent(ev, contents));\n\t\t\t});\n\n\t\t\tcontents.on(EVENTS.CONTENTS.SELECTED, (e) => this.triggerSelectedEvent(e, contents));\n\t\t}\n\n\t\t/**\n\t\t * Emit events passed by a view\n\t\t * @private\n\t\t * @param  {event} e\n\t\t */\n\t\ttriggerViewEvent(e, contents){\n\t\t\tthis.emit(e.type, e, contents);\n\t\t}\n\n\t\t/**\n\t\t * Emit a selection event's CFI Range passed from a a view\n\t\t * @private\n\t\t * @param  {EpubCFI} cfirange\n\t\t */\n\t\ttriggerSelectedEvent(cfirange, contents){\n\t\t\t/**\n\t\t\t * Emit that a text selection has occured\n\t\t\t * @event selected\n\t\t\t * @param {EpubCFI} cfirange\n\t\t\t * @param {Contents} contents\n\t\t\t * @memberof Rendition\n\t\t\t */\n\t\t\tthis.emit(EVENTS.RENDITION.SELECTED, cfirange, contents);\n\t\t}\n\n\t\t/**\n\t\t * Emit a markClicked event with the cfiRange and data from a mark\n\t\t * @private\n\t\t * @param  {EpubCFI} cfirange\n\t\t */\n\t\ttriggerMarkEvent(cfiRange, data, contents){\n\t\t\t/**\n\t\t\t * Emit that a mark was clicked\n\t\t\t * @event markClicked\n\t\t\t * @param {EpubCFI} cfirange\n\t\t\t * @param {object} data\n\t\t\t * @param {Contents} contents\n\t\t\t * @memberof Rendition\n\t\t\t */\n\t\t\tthis.emit(EVENTS.RENDITION.MARK_CLICKED, cfiRange, data, contents);\n\t\t}\n\n\t\t/**\n\t\t * Get a Range from a Visible CFI\n\t\t * @param  {string} cfi EpubCfi String\n\t\t * @param  {string} ignoreClass\n\t\t * @return {range}\n\t\t */\n\t\tgetRange(cfi, ignoreClass){\n\t\t\tvar _cfi = new EpubCFI(cfi);\n\t\t\tvar found = this.manager.visible().filter(function (view) {\n\t\t\t\tif(_cfi.spinePos === view.index) return true;\n\t\t\t});\n\n\t\t\t// Should only every return 1 item\n\t\t\tif (found.length) {\n\t\t\t\treturn found[0].contents.range(_cfi, ignoreClass);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Hook to adjust images to fit in columns\n\t\t * @param  {Contents} contents\n\t\t * @private\n\t\t */\n\t\tadjustImages(contents) {\n\n\t\t\tif (this._layout.name === \"pre-paginated\") {\n\t\t\t\treturn new Promise(function(resolve){\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcontents.addStylesheetRules({\n\t\t\t\t\"img\" : {\n\t\t\t\t\t\"max-width\": (this._layout.columnWidth ? this._layout.columnWidth + \"px\" : \"100%\") + \"!important\",\n\t\t\t\t\t\"max-height\": (this._layout.height ? (this._layout.height * 0.6) + \"px\" : \"60%\") + \"!important\",\n\t\t\t\t\t\"object-fit\": \"contain\",\n\t\t\t\t\t\"page-break-inside\": \"avoid\"\n\t\t\t\t},\n\t\t\t\t\"svg\" : {\n\t\t\t\t\t\"max-width\": (this._layout.columnWidth ? this._layout.columnWidth + \"px\" : \"100%\") + \"!important\",\n\t\t\t\t\t\"max-height\": (this._layout.height ? (this._layout.height * 0.6) + \"px\" : \"60%\") + \"!important\",\n\t\t\t\t\t\"page-break-inside\": \"avoid\"\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn new Promise(function(resolve, reject){\n\t\t\t\t// Wait to apply\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tresolve();\n\t\t\t\t}, 1);\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Hook to add the book identifier\n\t\t * @param  {Contents} contents\n\t\t * @private\n\t\t */\n\t\taddIdentifier(contents) {\n\t\t\tlet ident = this.book.metadata.identifier;\n\t\t\tcontents.addIdentifier(ident);\n\t\t}\n\n\t\t/**\n\t\t * Get the Contents object of each rendered view\n\t\t * @returns {Contents[]}\n\t\t */\n\t\tgetContents () {\n\t\t\treturn this.manager ? this.manager.getContents() : [];\n\t\t}\n\n\t\t/**\n\t\t * Get the views member from the manager\n\t\t * @returns {Views}\n\t\t */\n\t\tviews () {\n\t\t\tlet views = this.manager ? this.manager.views : undefined;\n\t\t\treturn views || [];\n\t\t}\n\n\t\t/**\n\t\t * Hook to handle link clicks in rendered content\n\t\t * @param  {Contents} contents\n\t\t * @private\n\t\t */\n\t\thandleLinks(contents) {\n\t\t\tif (contents) {\n\t\t\t\tcontents.on(EVENTS.CONTENTS.LINK_CLICKED, (href) => {\n\t\t\t\t\tlet relative = this.book.path.relative(href);\n\t\t\t\t\tthis.display(relative);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @return {object} spineItem\n\t\t */\n\t\tfindInSpine(target) {\n\t\t\tvar index = 0;\n\n\t\t\tif(this.epubcfi.isCfiString(target)) {\n\t\t\t\tlet cfi = new EpubCFI(target);\n\t\t\t\tindex = cfi.spinePos;\n\t\t\t} else if(typeof target === \"number\" || isNaN(target) === false){\n\t\t\t\tindex = target;\n\t\t\t} else if(typeof target === \"string\" && target.indexOf(\"#\") === 0) {\n\t\t\t\tindex = this.spineById[target.substring(1)];\n\t\t\t} else if(typeof target === \"string\") {\n\t\t\t\t// Remove fragments\n\t\t\t\ttarget = target.split(\"#\")[0];\n\t\t\t\tindex = this.spineByHref[target] ||\n\t\t\t\t\t\t\t\tthis.spineByHref[encodeURI(target)] ||\n\t\t\t\t\t\t\t\tthis.spineBySource[target] ||\n\t\t\t\t\t\t\t\tthis.spineBySource[encodeURI(target)];\n\t\t\t}\n\n\t\t\treturn this.manifest.spine[index] || null;\n\t\t}\n\n\t\t/**\n\t\t * Generates the Book Key using the identifer in the manifest or other string provided\n\t\t * @param  {string} [identifier] to use instead of metadata identifier\n\t\t * @return {string} key\n\t\t */\n\t\tkey(identifier) {\n\t\t\tvar ident = identifier || this.manifest.metadata.identifier;\n\t\t\treturn `epubjs-${EPUBJS_VERSION}-${ident}`;\n\t\t}\n\n\t\tworker(workerUrl) {\n\t\t\tlet deferred = new defer();\n\t\t\tlet key = this.key();\n\n\t\t\t// Resolve early if book is not archived and not cross domain\n\t\t\tlet url = new Url(this.book.url);\n\t\t\tlet source = this.book.source ? this.book.source.type : '';\n\n\t\t\tif(source !== \"application/epub+zip\" &&\n\t\t\t\t url.origin === window.location.origin) {\n\t\t\t\tdeferred.resolve();\n\t\t\t}\n\n\t\t\tif ('serviceWorker' in navigator) {\n\n\t\t\t\tlet worker = navigator.serviceWorker.controller;\n\t\t\t\t// Worker is already running\n\t\t\t\tif (worker) {\n\t\t\t\t\tdeferred.resolve();\n\t\t\t\t}\n\n\t\t\t\tnavigator.serviceWorker.register(workerUrl, { scope: this.settings.workerScope })\n\t\t\t\t\t.then((reg) => {\n\n\t\t\t\t\t\tworker = navigator.serviceWorker.controller;\n\n\t\t\t\t\t\tif (reg.active && !worker) {\n\t\t\t\t\t\t\tthis.emit(EVENTS.RENDITION.WORKER_INACTIVE);\n\t\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (worker) {\n\t\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}, (error) => {\n\t\t\t\t\t\t// registration failed\n\t\t\t\t\t\tconsole.error(error);\n\n\t\t\t\t\t\tthis.emit(EVENTS.RENDITION.WORKER_FAILED);\n\t\t\t\t\t\tdeferred.reject('Worker registration failed', error);\n\t\t\t\t\t});\n\n\t\t\t\tnavigator.serviceWorker.addEventListener('message', (event) => {\n\t\t\t\t\tDEV && console.log(\"[sw msg]\", event.data);\n\t\t\t\t\tif (event.data.msg === \"active\") {\n\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tnavigator.serviceWorker.addEventListener(\"controllerchange\", (event) => {\n\t\t\t\t\tworker = navigator.serviceWorker.controller;\n\t\t\t\t\tif (worker) {\n\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\n\t\t\t} else {\n\t\t\t\tdeferred.resolve();\n\t\t\t}\n\n\t\t\treturn deferred.promise;\n\t\t}\n\n\t\tcache(worker) {\n\t\t\tif (!worker) {\n\t\t\t\tworker = navigator.serviceWorker.controller;\n\t\t\t}\n\t\t\tworker.postMessage({ method: \"add\", key: key, resources: this.manifest.resources });\n\t\t}\n\n\t\tscale(s) {\n\t\t\treturn this.manager && this.manager.scale(s);\n\t\t}\n\n\t}\n\n\t//-- Enable binding events to Renderer\n\teventEmitter(Rendition.prototype);\n\n\tvar urlPolyfill = createCommonjsModule(function (module) {\n\t(function (root, factory) {\n\t    // Fix for this being undefined in modules\n\t    if (!root) {\n\t      root = window || commonjsGlobal;\n\t    }\n\t    if ('object' === 'object' && module.exports) {\n\t        // Node\n\t        module.exports = factory(root);\n\t    } else if (typeof undefined === 'function' && undefined.amd) {\n\t        // AMD. Register as an anonymous module.\n\t        undefined([], factory);\n\t    } else {\n\t        // Browser globals (root is window)\n\t        root.URL = factory(root);\n\t  }\n\t}(commonjsGlobal, function (scope) {\n\t  // feature detect for URL constructor\n\t  var hasWorkingUrl = false;\n\t  if (!scope.forceJURL) {\n\t    try {\n\t      var u = new URL('b', 'http://a');\n\t      u.pathname = 'c%20d';\n\t      hasWorkingUrl = u.href === 'http://a/c%20d';\n\t    } catch(e) {}\n\t  }\n\n\t  if (hasWorkingUrl)\n\t    return scope.URL;\n\n\t  var relative = Object.create(null);\n\t  relative['ftp'] = 21;\n\t  relative['file'] = 0;\n\t  relative['gopher'] = 70;\n\t  relative['http'] = 80;\n\t  relative['https'] = 443;\n\t  relative['ws'] = 80;\n\t  relative['wss'] = 443;\n\n\t  var relativePathDotMapping = Object.create(null);\n\t  relativePathDotMapping['%2e'] = '.';\n\t  relativePathDotMapping['.%2e'] = '..';\n\t  relativePathDotMapping['%2e.'] = '..';\n\t  relativePathDotMapping['%2e%2e'] = '..';\n\n\t  function isRelativeScheme(scheme) {\n\t    return relative[scheme] !== undefined;\n\t  }\n\n\t  function invalid() {\n\t    clear.call(this);\n\t    this._isInvalid = true;\n\t  }\n\n\t  function IDNAToASCII(h) {\n\t    if ('' == h) {\n\t      invalid.call(this);\n\t    }\n\t    // XXX\n\t    return h.toLowerCase()\n\t  }\n\n\t  function percentEscape(c) {\n\t    var unicode = c.charCodeAt(0);\n\t    if (unicode > 0x20 &&\n\t       unicode < 0x7F &&\n\t       // \" # < > ? `\n\t       [0x22, 0x23, 0x3C, 0x3E, 0x3F, 0x60].indexOf(unicode) == -1\n\t      ) {\n\t      return c;\n\t    }\n\t    return encodeURIComponent(c);\n\t  }\n\n\t  function percentEscapeQuery(c) {\n\t    // XXX This actually needs to encode c using encoding and then\n\t    // convert the bytes one-by-one.\n\n\t    var unicode = c.charCodeAt(0);\n\t    if (unicode > 0x20 &&\n\t       unicode < 0x7F &&\n\t       // \" # < > ` (do not escape '?')\n\t       [0x22, 0x23, 0x3C, 0x3E, 0x60].indexOf(unicode) == -1\n\t      ) {\n\t      return c;\n\t    }\n\t    return encodeURIComponent(c);\n\t  }\n\n\t  var EOF = undefined,\n\t      ALPHA = /[a-zA-Z]/,\n\t      ALPHANUMERIC = /[a-zA-Z0-9\\+\\-\\.]/;\n\n\t  function parse(input, stateOverride, base) {\n\n\t    var state = stateOverride || 'scheme start',\n\t        cursor = 0,\n\t        buffer = '',\n\t        seenAt = false,\n\t        seenBracket = false;\n\n\t    loop: while ((input[cursor - 1] != EOF || cursor == 0) && !this._isInvalid) {\n\t      var c = input[cursor];\n\t      switch (state) {\n\t        case 'scheme start':\n\t          if (c && ALPHA.test(c)) {\n\t            buffer += c.toLowerCase(); // ASCII-safe\n\t            state = 'scheme';\n\t          } else if (!stateOverride) {\n\t            buffer = '';\n\t            state = 'no scheme';\n\t            continue;\n\t          } else {\n\t            break loop;\n\t          }\n\t          break;\n\n\t        case 'scheme':\n\t          if (c && ALPHANUMERIC.test(c)) {\n\t            buffer += c.toLowerCase(); // ASCII-safe\n\t          } else if (':' == c) {\n\t            this._scheme = buffer;\n\t            buffer = '';\n\t            if (stateOverride) {\n\t              break loop;\n\t            }\n\t            if (isRelativeScheme(this._scheme)) {\n\t              this._isRelative = true;\n\t            }\n\t            if ('file' == this._scheme) {\n\t              state = 'relative';\n\t            } else if (this._isRelative && base && base._scheme == this._scheme) {\n\t              state = 'relative or authority';\n\t            } else if (this._isRelative) {\n\t              state = 'authority first slash';\n\t            } else {\n\t              state = 'scheme data';\n\t            }\n\t          } else if (!stateOverride) {\n\t            buffer = '';\n\t            cursor = 0;\n\t            state = 'no scheme';\n\t            continue;\n\t          } else if (EOF == c) {\n\t            break loop;\n\t          } else {\n\t            break loop;\n\t          }\n\t          break;\n\n\t        case 'scheme data':\n\t          if ('?' == c) {\n\t            this._query = '?';\n\t            state = 'query';\n\t          } else if ('#' == c) {\n\t            this._fragment = '#';\n\t            state = 'fragment';\n\t          } else {\n\t            // XXX error handling\n\t            if (EOF != c && '\\t' != c && '\\n' != c && '\\r' != c) {\n\t              this._schemeData += percentEscape(c);\n\t            }\n\t          }\n\t          break;\n\n\t        case 'no scheme':\n\t          if (!base || !(isRelativeScheme(base._scheme))) {\n\t            invalid.call(this);\n\t          } else {\n\t            state = 'relative';\n\t            continue;\n\t          }\n\t          break;\n\n\t        case 'relative or authority':\n\t          if ('/' == c && '/' == input[cursor+1]) {\n\t            state = 'authority ignore slashes';\n\t          } else {\n\t            state = 'relative';\n\t            continue\n\t          }\n\t          break;\n\n\t        case 'relative':\n\t          this._isRelative = true;\n\t          if ('file' != this._scheme)\n\t            this._scheme = base._scheme;\n\t          if (EOF == c) {\n\t            this._host = base._host;\n\t            this._port = base._port;\n\t            this._path = base._path.slice();\n\t            this._query = base._query;\n\t            this._username = base._username;\n\t            this._password = base._password;\n\t            break loop;\n\t          } else if ('/' == c || '\\\\' == c) {\n\t            state = 'relative slash';\n\t          } else if ('?' == c) {\n\t            this._host = base._host;\n\t            this._port = base._port;\n\t            this._path = base._path.slice();\n\t            this._query = '?';\n\t            this._username = base._username;\n\t            this._password = base._password;\n\t            state = 'query';\n\t          } else if ('#' == c) {\n\t            this._host = base._host;\n\t            this._port = base._port;\n\t            this._path = base._path.slice();\n\t            this._query = base._query;\n\t            this._fragment = '#';\n\t            this._username = base._username;\n\t            this._password = base._password;\n\t            state = 'fragment';\n\t          } else {\n\t            var nextC = input[cursor+1];\n\t            var nextNextC = input[cursor+2];\n\t            if (\n\t              'file' != this._scheme || !ALPHA.test(c) ||\n\t              (nextC != ':' && nextC != '|') ||\n\t              (EOF != nextNextC && '/' != nextNextC && '\\\\' != nextNextC && '?' != nextNextC && '#' != nextNextC)) {\n\t              this._host = base._host;\n\t              this._port = base._port;\n\t              this._username = base._username;\n\t              this._password = base._password;\n\t              this._path = base._path.slice();\n\t              this._path.pop();\n\t            }\n\t            state = 'relative path';\n\t            continue;\n\t          }\n\t          break;\n\n\t        case 'relative slash':\n\t          if ('/' == c || '\\\\' == c) {\n\t            if ('file' == this._scheme) {\n\t              state = 'file host';\n\t            } else {\n\t              state = 'authority ignore slashes';\n\t            }\n\t          } else {\n\t            if ('file' != this._scheme) {\n\t              this._host = base._host;\n\t              this._port = base._port;\n\t              this._username = base._username;\n\t              this._password = base._password;\n\t            }\n\t            state = 'relative path';\n\t            continue;\n\t          }\n\t          break;\n\n\t        case 'authority first slash':\n\t          if ('/' == c) {\n\t            state = 'authority second slash';\n\t          } else {\n\t            state = 'authority ignore slashes';\n\t            continue;\n\t          }\n\t          break;\n\n\t        case 'authority second slash':\n\t          state = 'authority ignore slashes';\n\t          if ('/' != c) {\n\t            continue;\n\t          }\n\t          break;\n\n\t        case 'authority ignore slashes':\n\t          if ('/' != c && '\\\\' != c) {\n\t            state = 'authority';\n\t            continue;\n\t          } else {\n\t          }\n\t          break;\n\n\t        case 'authority':\n\t          if ('@' == c) {\n\t            if (seenAt) {\n\t              buffer += '%40';\n\t            }\n\t            seenAt = true;\n\t            for (var i = 0; i < buffer.length; i++) {\n\t              var cp = buffer[i];\n\t              if ('\\t' == cp || '\\n' == cp || '\\r' == cp) {\n\t                continue;\n\t              }\n\t              // XXX check URL code points\n\t              if (':' == cp && null === this._password) {\n\t                this._password = '';\n\t                continue;\n\t              }\n\t              var tempC = percentEscape(cp);\n\t              (null !== this._password) ? this._password += tempC : this._username += tempC;\n\t            }\n\t            buffer = '';\n\t          } else if (EOF == c || '/' == c || '\\\\' == c || '?' == c || '#' == c) {\n\t            cursor -= buffer.length;\n\t            buffer = '';\n\t            state = 'host';\n\t            continue;\n\t          } else {\n\t            buffer += c;\n\t          }\n\t          break;\n\n\t        case 'file host':\n\t          if (EOF == c || '/' == c || '\\\\' == c || '?' == c || '#' == c) {\n\t            if (buffer.length == 2 && ALPHA.test(buffer[0]) && (buffer[1] == ':' || buffer[1] == '|')) {\n\t              state = 'relative path';\n\t            } else if (buffer.length == 0) {\n\t              state = 'relative path start';\n\t            } else {\n\t              this._host = IDNAToASCII.call(this, buffer);\n\t              buffer = '';\n\t              state = 'relative path start';\n\t            }\n\t            continue;\n\t          } else if ('\\t' == c || '\\n' == c || '\\r' == c) {\n\t          } else {\n\t            buffer += c;\n\t          }\n\t          break;\n\n\t        case 'host':\n\t        case 'hostname':\n\t          if (':' == c && !seenBracket) {\n\t            // XXX host parsing\n\t            this._host = IDNAToASCII.call(this, buffer);\n\t            buffer = '';\n\t            state = 'port';\n\t            if ('hostname' == stateOverride) {\n\t              break loop;\n\t            }\n\t          } else if (EOF == c || '/' == c || '\\\\' == c || '?' == c || '#' == c) {\n\t            this._host = IDNAToASCII.call(this, buffer);\n\t            buffer = '';\n\t            state = 'relative path start';\n\t            if (stateOverride) {\n\t              break loop;\n\t            }\n\t            continue;\n\t          } else if ('\\t' != c && '\\n' != c && '\\r' != c) {\n\t            if ('[' == c) {\n\t              seenBracket = true;\n\t            } else if (']' == c) {\n\t              seenBracket = false;\n\t            }\n\t            buffer += c;\n\t          } else {\n\t          }\n\t          break;\n\n\t        case 'port':\n\t          if (/[0-9]/.test(c)) {\n\t            buffer += c;\n\t          } else if (EOF == c || '/' == c || '\\\\' == c || '?' == c || '#' == c || stateOverride) {\n\t            if ('' != buffer) {\n\t              var temp = parseInt(buffer, 10);\n\t              if (temp != relative[this._scheme]) {\n\t                this._port = temp + '';\n\t              }\n\t              buffer = '';\n\t            }\n\t            if (stateOverride) {\n\t              break loop;\n\t            }\n\t            state = 'relative path start';\n\t            continue;\n\t          } else if ('\\t' == c || '\\n' == c || '\\r' == c) {\n\t          } else {\n\t            invalid.call(this);\n\t          }\n\t          break;\n\n\t        case 'relative path start':\n\t          state = 'relative path';\n\t          if ('/' != c && '\\\\' != c) {\n\t            continue;\n\t          }\n\t          break;\n\n\t        case 'relative path':\n\t          if (EOF == c || '/' == c || '\\\\' == c || (!stateOverride && ('?' == c || '#' == c))) {\n\t            var tmp;\n\t            if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\n\t              buffer = tmp;\n\t            }\n\t            if ('..' == buffer) {\n\t              this._path.pop();\n\t              if ('/' != c && '\\\\' != c) {\n\t                this._path.push('');\n\t              }\n\t            } else if ('.' == buffer && '/' != c && '\\\\' != c) {\n\t              this._path.push('');\n\t            } else if ('.' != buffer) {\n\t              if ('file' == this._scheme && this._path.length == 0 && buffer.length == 2 && ALPHA.test(buffer[0]) && buffer[1] == '|') {\n\t                buffer = buffer[0] + ':';\n\t              }\n\t              this._path.push(buffer);\n\t            }\n\t            buffer = '';\n\t            if ('?' == c) {\n\t              this._query = '?';\n\t              state = 'query';\n\t            } else if ('#' == c) {\n\t              this._fragment = '#';\n\t              state = 'fragment';\n\t            }\n\t          } else if ('\\t' != c && '\\n' != c && '\\r' != c) {\n\t            buffer += percentEscape(c);\n\t          }\n\t          break;\n\n\t        case 'query':\n\t          if (!stateOverride && '#' == c) {\n\t            this._fragment = '#';\n\t            state = 'fragment';\n\t          } else if (EOF != c && '\\t' != c && '\\n' != c && '\\r' != c) {\n\t            this._query += percentEscapeQuery(c);\n\t          }\n\t          break;\n\n\t        case 'fragment':\n\t          if (EOF != c && '\\t' != c && '\\n' != c && '\\r' != c) {\n\t            this._fragment += c;\n\t          }\n\t          break;\n\t      }\n\n\t      cursor++;\n\t    }\n\t  }\n\n\t  function clear() {\n\t    this._scheme = '';\n\t    this._schemeData = '';\n\t    this._username = '';\n\t    this._password = null;\n\t    this._host = '';\n\t    this._port = '';\n\t    this._path = [];\n\t    this._query = '';\n\t    this._fragment = '';\n\t    this._isInvalid = false;\n\t    this._isRelative = false;\n\t  }\n\n\t  // Does not process domain names or IP addresses.\n\t  // Does not handle encoding for the query parameter.\n\t  function jURL(url, base /* , encoding */) {\n\t    if (base !== undefined && !(base instanceof jURL))\n\t      base = new jURL(String(base));\n\n\t    this._url = url;\n\t    clear.call(this);\n\n\t    var input = url.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g, '');\n\t    // encoding = encoding || 'utf-8'\n\n\t    parse.call(this, input, null, base);\n\t  }\n\n\t  jURL.prototype = {\n\t    toString: function() {\n\t      return this.href;\n\t    },\n\t    get href() {\n\t      if (this._isInvalid)\n\t        return this._url;\n\n\t      var authority = '';\n\t      if ('' != this._username || null != this._password) {\n\t        authority = this._username +\n\t            (null != this._password ? ':' + this._password : '') + '@';\n\t      }\n\n\t      return this.protocol +\n\t          (this._isRelative ? '//' + authority + this.host : '') +\n\t          this.pathname + this._query + this._fragment;\n\t    },\n\t    set href(href) {\n\t      clear.call(this);\n\t      parse.call(this, href);\n\t    },\n\n\t    get protocol() {\n\t      return this._scheme + ':';\n\t    },\n\t    set protocol(protocol) {\n\t      if (this._isInvalid)\n\t        return;\n\t      parse.call(this, protocol + ':', 'scheme start');\n\t    },\n\n\t    get host() {\n\t      return this._isInvalid ? '' : this._port ?\n\t          this._host + ':' + this._port : this._host;\n\t    },\n\t    set host(host) {\n\t      if (this._isInvalid || !this._isRelative)\n\t        return;\n\t      parse.call(this, host, 'host');\n\t    },\n\n\t    get hostname() {\n\t      return this._host;\n\t    },\n\t    set hostname(hostname) {\n\t      if (this._isInvalid || !this._isRelative)\n\t        return;\n\t      parse.call(this, hostname, 'hostname');\n\t    },\n\n\t    get port() {\n\t      return this._port;\n\t    },\n\t    set port(port) {\n\t      if (this._isInvalid || !this._isRelative)\n\t        return;\n\t      parse.call(this, port, 'port');\n\t    },\n\n\t    get pathname() {\n\t      return this._isInvalid ? '' : this._isRelative ?\n\t          '/' + this._path.join('/') : this._schemeData;\n\t    },\n\t    set pathname(pathname) {\n\t      if (this._isInvalid || !this._isRelative)\n\t        return;\n\t      this._path = [];\n\t      parse.call(this, pathname, 'relative path start');\n\t    },\n\n\t    get search() {\n\t      return this._isInvalid || !this._query || '?' == this._query ?\n\t          '' : this._query;\n\t    },\n\t    set search(search) {\n\t      if (this._isInvalid || !this._isRelative)\n\t        return;\n\t      this._query = '?';\n\t      if ('?' == search[0])\n\t        search = search.slice(1);\n\t      parse.call(this, search, 'query');\n\t    },\n\n\t    get hash() {\n\t      return this._isInvalid || !this._fragment || '#' == this._fragment ?\n\t          '' : this._fragment;\n\t    },\n\t    set hash(hash) {\n\t      if (this._isInvalid)\n\t        return;\n\t      this._fragment = '#';\n\t      if ('#' == hash[0])\n\t        hash = hash.slice(1);\n\t      parse.call(this, hash, 'fragment');\n\t    },\n\n\t    get origin() {\n\t      var host;\n\t      if (this._isInvalid || !this._scheme) {\n\t        return '';\n\t      }\n\t      // javascript: Gecko returns String(\"\"), WebKit/Blink String(\"null\")\n\t      // Gecko throws error for \"data://\"\n\t      // data: Gecko returns \"\", Blink returns \"data://\", WebKit returns \"null\"\n\t      // Gecko returns String(\"\") for file: mailto:\n\t      // WebKit/Blink returns String(\"SCHEME://\") for file: mailto:\n\t      switch (this._scheme) {\n\t        case 'file':\n\t          return 'file://' // EPUBJS Added\n\t        case 'data':\n\t        case 'javascript':\n\t        case 'mailto':\n\t          return 'null';\n\t      }\n\t      host = this.host;\n\t      if (!host) {\n\t        return '';\n\t      }\n\t      return this._scheme + '://' + host;\n\t    }\n\t  };\n\n\t  // Copy over the static methods\n\t  var OriginalURL = scope.URL;\n\t  if (OriginalURL) {\n\t    jURL.createObjectURL = function(blob) {\n\t      // IE extension allows a second optional options argument.\n\t      // http://msdn.microsoft.com/en-us/library/ie/hh772302(v=vs.85).aspx\n\t      return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\n\t    };\n\t    jURL.revokeObjectURL = function(url) {\n\t      OriginalURL.revokeObjectURL(url);\n\t    };\n\t  }\n\n\t  return jURL;\n\t}));\n\t});\n\n\tconst DEV$1 = false;\n\t/**\n\t * Book proxy\n\t */\n\tclass Bridge {\n\t\tconstructor(options) {\n\t\t\tthis.waiting = {};\n\n\t\t\tthis.ready = new Promise((resolve, reject) => {\n\t\t\t\tthis.resolveReady = resolve;\n\t\t\t\tthis.rejectReady = reject;\n\t\t\t});\n\n\t\t\tif (options && options.worker) {\n\t\t\t\tthis.worker = new Worker(options.worker);\n\t\t\t\tthis.worker.addEventListener(\"message\", this.listen.bind(this));\n\n\t\t\t\tthis.ask(\"init\", [options]);\n\t\t\t}\n\n\t\t}\n\n\t\task(method, args) {\n\t\t\tlet asking = new defer();\n\t\t\tlet promiseId = asking.id;\n\n\t\t\tif (this.worker) {\n\t\t\t\tlet str = JSON.stringify({\n\t\t\t\t\tmethod: method,\n\t\t\t\t\targs: args,\n\t\t\t\t\tpromise: promiseId\n\t\t\t\t});\n\n\t\t\t\tif(method in this.waiting) {\n\t\t\t\t\tthis.waiting[promiseId].push(asking);\n\t\t\t\t} else {\n\t\t\t\t\tthis.waiting[promiseId] = [asking];\n\t\t\t\t}\n\n\t\t\t\tDEV$1 && console.log(\"[ask]\", str);\n\t\t\t\tthis.worker.postMessage(str);\n\t\t\t} else {\n\t\t\t\tasking.resolve(this.epub[method].apply(this.epub, args));\n\t\t\t}\n\n\n\t\t\treturn asking.promise;\n\t\t}\n\n\t\tlisten(event) {\n\t\t\tlet {data} = event;\n\t\t\tif (typeof data === \"string\") {\n\t\t\t\tdata = JSON.parse(data);\n\t\t\t}\n\n\t\t\tDEV$1 && console.log(\"[listen]\", data);\n\n\t\t\t// Promises\n\t\t\tif (data.promise && data.promise in this.waiting) {\n\t\t\t\tlet p = this.waiting[data.promise].shift();\n\t\t\t\tif (p) {\n\t\t\t\t\tp.resolve(data.value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Events\n\t\t\tif (data.eventName) {\n\t\t\t\tswitch (data.eventName) {\n\t\t\t\t\tcase \"ready\":\n\t\t\t\t\t\tthis.manifest = event.data.value;\n\t\t\t\t\t\tthis.book = new Book(this.manifest);\n\t\t\t\t\t\tthis.resolveReady(this.book);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"failed\":\n\t\t\t\t\t\tthis.rejectReady(event.data.error);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\topen(url) {\n\t\t\treturn this.ask(\"open\", [url]).then((result) => {\n\t\t\t\tif (typeof result === \"string\") {\n\t\t\t\t\tthis.manifest = JSON.parse(result);\n\t\t\t\t\tthis.book = new Book(this.manifest);\n\t\t\t\t} else {\n\t\t\t\t\tthis.book = result;\n\t\t\t\t}\n\n\t\t\t\tthis.resolveReady(this.book);\n\t\t\t\treturn this.book;\n\t\t\t});\n\t\t}\n\n\t\tkey(identifier) {\n\t\t\treturn this.ask(\"key\", [identifier]);\n\t\t}\n\n\t\treplacements() {\n\t\t\treturn this.ask(\"replacements\").then((manifest) => {\n\t\t\t\tthis.manifest = manifest;\n\t\t\t\tthis.book = new Book(this.manifest);\n\t\t\t\treturn this.book;\n\t\t\t});\n\t\t}\n\n\t\tcache() {\n\t\t\treturn this.ask(\"cache\").then((manifest) => {\n\t\t\t\tthis.manifest = manifest;\n\t\t\t\tthis.book = new Book(this.manifest);\n\t\t\t\treturn this.book;\n\t\t\t});\n\t\t}\n\n\t\tlocations() {\n\t\t\treturn this.ask(\"replacements\").then((manifest) => {\n\t\t\t\tthis.manifest = manifest;\n\t\t\t\tthis.book = new Book(this.manifest);\n\t\t\t\treturn this.book;\n\t\t\t});\n\t\t}\n\n\t\tgenerateLocations(breakPoint) {\n\t\t\treturn this.ask(\"generateLocations\", [breakPoint])\n\t\t\t\t.then(locations => {\n\t\t\t\t\tif (!this.book) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.book.locations = locations;\n\t\t\t\t\treturn locations;\n\t\t\t\t});\n\t\t}\n\n\t\tloadLocations(json) {\n\t\t\tlet locations;\n\t\t\tif (!this.book) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof locations === \"string\") {\n\t\t\t\tlocations = JSON.parse(json);\n\t\t\t} else {\n\t\t\t\tlocations = json;\n\t\t\t}\n\n\t\t\tthis.book.locations = locations;\n\t\t}\n\n\t\tdestroy() {\n\t\t\tthis.ask(\"destroy\");\n\t\t\tthis.worker.removeEventListener(\"message\", this.listen);\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new Book or Book Bridge & Worker\n\t * @param {string|ArrayBuffer} url URL, Path or ArrayBuffer\n\t * @param {object} options to pass to the book\n\t * @returns {Book} a new Book object\n\t * @example ePub(\"/path/to/book.epub\", {})\n\t */\n\tasync function ePub$1(url, options={}) {\n\t\tlet epub;\n\t\tlet rendition;\n\n\t\tif (arguments.length === 0 ||\n\t\t\t (arguments.length === 1 &&\n\t\t\t  typeof(arguments[0]) === \"object\")) {\n\t\t\treturn new Epub(...arguments);\n\t\t}\n\n\t\tif (options.worker) {\n\t\t\tepub = new Bridge(options);\n\t\t} else {\n\t\t\tepub = new Epub(options);\n\t\t}\n\n\t\treturn epub.open(url).then((book) => {\n\t\t\t/**\n\t\t\t * Sugar to render a book to an element\n\t\t\t * @param  {element | string} element element or string to add a rendition to\n\t\t\t * @param  {object} [options]\n\t\t\t * @return {Rendition}\n\t\t\t */\n\t\t\tbook.renderTo = (element, renditionOptions={}) => {\n\n\t\t\t\tif (options && typeof(options.worker) !== \"undefined\" &&\n\t\t\t\t\t\ttypeof(renditionOptions.worker) === \"undefined\" ) {\n\t\t\t\t\trenditionOptions.worker = options.worker;\n\t\t\t\t}\n\n\t\t\t\trendition = new Rendition(book.manifest, renditionOptions);\n\t\t\t\trendition.attachTo(element);\n\n\t\t\t\t// If the workers fails, switch to replacements\n\t\t    rendition.on(\"workerFailed\", function(){\n\t\t      rendition.clear();\n\t\t      epub.replacements().then((book) => {\n\t\t        rendition.unpack(book.manifest);\n\t\t        rendition.display(rendition.location);\n\t\t      });\n\t\t    });\n\n\t\t\t\treturn rendition;\n\t\t\t};\n\n\t\t\tbook.generateLocations = chars => {\n\t\t\t\treturn epub.generateLocations(chars)\n\t\t\t\t\t.then(locations => {\n\t\t\t\t\t\tbook.locations = locations;\n\t\t\t\t\t\treturn locations;\n\t\t\t\t\t});\n\t\t\t};\n\n\t\t\tbook._destroy = book.destroy;\n\t\t\tbook.destroy = () => {\n\t\t\t\tbook._destroy();\n\t\t\t\tepub.destroy();\n\t\t\t\trendition.destroy();\n\t\t\t};\n\n\t\t\t// epub.destroy();\n\t\t\twindow.Epub = epub;\n\n\t\t\treturn book;\n\t\t});\n\t}\n\n\tePub$1.VERSION = EPUBJS_VERSION;\n\n\tePub$1.CFI = EpubCFI;\n\tePub$1.Book = Book;\n\tePub$1.Rendition = Rendition;\n\tePub$1.Contents = Contents;\n\tePub$1.utils = utils;\n\n\t// export {\n\t// \tBook,\n\t// \tEpubCFI,\n\t// \tRendition,\n\t// \tContents,\n\t// \tLayout\n\t// };\n\n\treturn ePub$1;\n\n})));\n//# sourceMappingURL=epub.native.js.map\n";var BRIDGE="window.onerror = function (message, file, line, col, error) {\n  var msg = JSON.stringify({method:\"error\", value: message});\n  window.postMessage(msg, \"*\");\n};\n\n(function () {\n   var waitForReactNativePostMessageReady;\n\n  function _ready() {\n    var contents;\n    var targetOrigin = \"*\";\n    var sendMessage = function(obj) {\n      try {\n          window.postMessage(JSON.stringify(obj), targetOrigin);\n      } catch (error) {\n          window.postMessage(error.message, targetOrigin);\n      }\n    };\n\n    var preventTap = false;\n    var q = [];\n    var _isReady = false;\n\n    var book;\n    var rendition;\n\n    var minSpreadWidth = 800;\n    var axis = \"horizontal\";\n\n    var isChrome = /Chrome/.test(navigator.userAgent);\n    var isWebkit = !isChrome && /AppleWebKit/.test(navigator.userAgent);\n\n    var snapWidth = window.innerWidth;\n    var last_known_scroll_position = 0;\n    var ticking = false;\n    var touchCanceler = false;\n    var resizeCanceler = false;\n    var animating = false;\n\n    // debug\n    console.log = function() {\n      sendMessage({method:\"log\", value: Array.from(arguments)});\n    };\n\n    console.error = function() {\n      sendMessage({method:\"error\", value: Array.from(arguments)});\n    };\n\n    // var isReactNativePostMessageReady = !!window.originalPostMessage;\n    var isReactNativePostMessageReady = !!window.originalPostMessage || window.postMessage.toString().indexOf(\"[native code]\") === -1;\n    var hasReactNativePostMessage = typeof window.webkit !== \"undefined\" &&\n                                    typeof window.webkit.messageHandlers !== \"undefined\" &&\n                                    typeof window.webkit.messageHandlers.reactNative !== \"undefined\" &&\n                                    typeof window.webkit.messageHandlers.reactNative.postMessage !== \"undefined\";\n\n    clearTimeout(waitForReactNativePostMessageReady);\n    if (!isReactNativePostMessageReady && hasReactNativePostMessage) {\n      window.originalPostMessage = window.postMessage;\n      window.postMessage = function (data) { window.webkit.messageHandlers.reactNative.postMessage(data); };\n    } else if (!isReactNativePostMessageReady && !hasReactNativePostMessage){\n      waitForReactNativePostMessageReady = setTimeout(_ready, 1);\n      return;\n    }\n\n    function onMessage(e) {\n      var message = e.data;\n      handleMessage(message);\n    }\n\n    async function handleMessage(message) {\n      var decoded = (typeof message === \"object\") ? message : JSON.parse(message);\n      var response;\n      var result;\n\n      sendMessage({method:\"log\", value: \"[Rendition] handleMessage: \" + message});\n\n      switch (decoded.method) {\n        case \"open\": {\n          var url = decoded.args[0];\n          var options = decoded.args.length > 1 && decoded.args[1];\n          await openEpub(url, options);\n\n          if (options && options.webviewStylesheet) {\n            var head = document.getElementsByTagName('head')[0];\n            var link = document.createElement('link');\n            link.rel = 'stylesheet';\n            link.type = 'text/css';\n            link.href = options.webviewStylesheet;\n            head.appendChild(link);\n          }\n\n          break;\n        }\n        case \"display\": {\n          var args = decoded.args && decoded.args.length && decoded.args[0];\n          var target;\n\n          sendMessage({method:\"log\", value: \"[Rendition] display\"});\n\n          if (!args) {\n            target = undefined;\n          }\n          else if (args.target) {\n            target = args.target.toString();\n          }\n          else if (args.spine) {\n            target = parseInt(args.spine);\n          }\n\n          if (rendition) {\n            sendMessage({method:\"log\", value: \"[Rendition] display target: \" + target});\n            rendition.display(target);\n          } else {\n            sendMessage({method:\"log\", value: \"[Rendition] queue message: \" + message});\n            q.push(message);\n          }\n          break;\n        }\n        case \"flow\": {\n          var direction = decoded.args.length && decoded.args[0];\n          axis = (direction === \"paginated\") ? \"horizontal\" : \"vertical\";\n\n            sendMessage({method:\"log\", value: \"rendition.flow\"});\n            sendMessage({method:\"log\", value: direction});\n\n          if (rendition) {\n            rendition.flow(direction);\n          } else {\n            q.push(message);\n          }\n\n          break;\n        }\n        case \"setLocations\": {\n          var locations = decoded.args[0];\n          if (book) {\n            book.locations.load(locations);\n          } else {\n            q.push(message);\n          }\n\n          if (rendition) {\n            rendition.reportLocation();\n          }\n          break;\n        }\n        case \"reportLocation\": {\n          if (rendition) {\n            rendition.reportLocation();\n          } else {\n            q.push(message);\n          }\n          break;\n        }\n        case \"minSpreadWidth\": {\n          minSpreadWidth = decoded.args;\n          break;\n        }\n        case \"mark\": {\n          if (rendition) {\n            rendition.annotations.mark.apply(rendition.annotations, decoded.args);\n          } else {\n            q.push(message);\n          }\n          break;\n        }\n        case \"underline\": {\n          if (rendition) {\n            rendition.annotations.underline.apply(rendition.annotations, decoded.args);\n          } else {\n            q.push(message);\n          }\n          break;\n        }\n        case \"highlight\": {\n          if (rendition) {\n            rendition.annotations.highlight.apply(rendition.annotations, decoded.args);\n          } else {\n            q.push(message);\n          }\n          break;\n        }\n        case \"removeAnnotation\": {\n          if (rendition) {\n            rendition.annotations.remove.apply(rendition.annotations, decoded.args);\n          } else {\n            q.push(message);\n          }\n          break;\n        }\n        case \"themes\": {\n          var themes = decoded.args[0];\n          if (rendition) {\n            rendition.themes.register(themes);\n          } else {\n            q.push(message);\n          }\n          break;\n        }\n        case \"theme\": {\n          var theme = decoded.args[0];\n          if (rendition) {\n            rendition.themes.select(theme);\n          } else {\n            q.push(message);\n          }\n          break;\n        }\n        case \"fontSize\": {\n          var fontSize = decoded.args[0];\n          if (rendition) {\n            rendition.themes.fontSize(fontSize);\n          } else {\n            q.push(message);\n          }\n          break;\n        }\n        case \"font\": {\n          var font = decoded.args[0];\n          if (rendition) {\n            rendition.themes.font(font);\n          } else {\n            q.push(message);\n          }\n          break;\n        }\n        case \"next\": {\n          if (rendition) {\n            rendition.next();\n          } else {\n            q.push(message);\n          }\n          break;\n        }\n        case \"prev\": {\n          if (rendition) {\n            rendition.prev();\n          } else {\n            q.push(message);\n          }\n          break;\n        }\n      }\n    }\n\n    async function openEpub(url, options) {\n      var settings = Object.assign({\n        manager: \"continuous\",\n        overflow: \"visible\",\n        method: \"blobUrl\"\n      }, options);\n\n      window.book = book = await ePub(url);\n\n      window.rendition = rendition = book.renderTo(document.body, settings);\n\n      rendition.hooks.content.register(function(contents) {\n        sendMessage({method:\"log\", value: '[Bridge] hooks.content.register'});\n        var doc = contents.document;\n        var startPosition = { x: -1, y: -1 };\n        var currentPosition = { x: -1, y: -1 };\n        var isLongPress = false;\n        var longPressTimer;\n        var touchduration = 300;\n        var $body = doc.getElementsByTagName('body')[0];\n\n        function touchStartHandler(e) {\n          var f, target;\n          startPosition.x = e.targetTouches[0].pageX;\n          startPosition.y = e.targetTouches[0].pageY;\n          currentPosition.x = e.targetTouches[0].pageX;\n          currentPosition.y = e.targetTouches[0].pageY;\n          isLongPress = false;\n\n          if (isWebkit) {\n            for (var i=0; i < e.targetTouches.length; i++) {\n              f = e.changedTouches[i].force;\n              if (f >= 0.8 && !preventTap) {\n                target = e.changedTouches[i].target;\n\n                if (target.getAttribute(\"ref\") === \"epubjs-mk\") {\n                  return;\n                }\n\n                clearTimeout(longPressTimer);\n\n                cfi = contents.cfiFromNode(target).toString();\n\n                sendMessage({method:\"longpress\", position: currentPosition, cfi: cfi});\n                isLongPress = false;\n                preventTap = true;\n              }\n            }\n          }\n\n\n          longPressTimer = setTimeout(function() {\n            target = e.targetTouches[0].target;\n\n            if (target.getAttribute(\"ref\") === \"epubjs-mk\") {\n              return;\n            }\n\n            cfi = contents.cfiFromNode(target).toString();\n\n            sendMessage({method:\"longpress\", position: currentPosition, cfi: cfi});\n            preventTap = true;\n          }, touchduration);\n        }\n\n        function touchMoveHandler(e) {\n          currentPosition.x = e.targetTouches[0].pageX;\n          currentPosition.y = e.targetTouches[0].pageY;\n          clearTimeout(longPressTimer);\n        }\n\n        function touchEndHandler(e) {\n          var cfi;\n          clearTimeout(longPressTimer);\n\n          if(preventTap) {\n            preventTap = false;\n            return;\n          }\n\n          if(Math.abs(startPosition.x - currentPosition.x) < 2 &&\n             Math.abs(startPosition.y - currentPosition.y) < 2) {\n\n            var target = e.changedTouches[0].target;\n\n            if (target.getAttribute(\"ref\") === \"epubjs-mk\" ||\n                target.getAttribute(\"ref\") === \"epubjs-hl\" ||\n                target.getAttribute(\"ref\") === \"epubjs-ul\") {\n              return;\n            }\n\n            cfi = contents.cfiFromNode(target).toString();\n\n            if(isLongPress) {\n              sendMessage({method:\"longpress\", position: currentPosition, cfi: cfi});\n              isLongPress = false;\n            } else {\n              setTimeout(function() {\n                if(preventTap) {\n                  preventTap = false;\n                  isLongPress = false;\n                  return;\n                }\n                sendMessage({method:\"press\", position: currentPosition, cfi: cfi});\n              }, 10);\n            }\n          }\n        }\n\n        function touchForceHandler(e) {\n          var f = e.changedTouches[0].force;\n          if (f >= 0.8 && !preventTap) {\n            var target = e.changedTouches[0].target;\n\n            if (target.getAttribute(\"ref\") === \"epubjs-mk\") {\n              return;\n            }\n\n            clearTimeout(longPressTimer);\n\n            cfi = contents.cfiFromNode(target).toString();\n\n            sendMessage({method:\"longpress\", position: currentPosition, cfi: cfi});\n            isLongPress = false;\n            preventTap = true;\n          }\n        }\n\n        if(!isWebkit) {\n\n          var prevX;\n          var flick = 0;\n          var pan = false;\n\n          doc.addEventListener('touchmove', function(e) {\n            var screenX = e.touches[0].screenX;\n            var delta = prevX - screenX;\n\n            touchMoveHandler(e);\n\n            if (axis !== \"horizontal\") {\n              return;\n            }\n\n            if (Math.abs(delta) > 0.5) {\n              pan = true;\n            }\n\n            if (delta > 20) {\n              flick = 1;\n            }\n\n            if (delta < -20) {\n              flick = -1;\n            }\n\n            // if (!animating) {\n            //   if (delta) {\n            //     window.scrollBy(delta, 0);\n            //   }\n            // }\n\n            prevX = screenX;\n\n            e.preventDefault();\n          }, { capture: true, passive: false });\n\n          doc.addEventListener('touchstart', function(e) {\n\n            touchStartHandler(e);\n\n            resizeCanceler = false;\n\n          }, { capture: false, passive: true });\n\n          doc.addEventListener('touchend', function(e) {\n\n            touchEndHandler(e);\n\n            if (axis !== \"horizontal\") {\n              return;\n            }\n\n            if(!animating) {\n\n              if (flick === 1) {\n                snap(last_known_scroll_position + snapWidth + 10);\n              }\n              else if (flick === -1) {\n                snap(last_known_scroll_position - snapWidth + 10);\n              }\n              else if (pan) {\n                snap(last_known_scroll_position);\n              }\n\n            }\n\n            prevX = undefined;\n            flick = 0;\n            pan = false;\n          }, { capture: true, passive: false });\n\n        } else {\n          doc.addEventListener(\"touchstart\", touchStartHandler, false);\n\n          doc.addEventListener(\"touchmove\", touchMoveHandler, false);\n\n          doc.addEventListener(\"touchend\", touchEndHandler, false);\n\n          doc.addEventListener('touchforcechange', touchForceHandler, false);\n        }\n\n      }.bind(this));\n\n      rendition.on(\"relocated\", function(location){\n        sendMessage({method:\"relocated\", location: location});\n      });\n\n      rendition.on(\"selected\", function (cfiRange) {\n        preventTap = true;\n        sendMessage({method:\"selected\", cfiRange: cfiRange});\n      });\n\n      rendition.on(\"markClicked\", function (cfiRange, data) {\n        preventTap = true;\n        sendMessage({method:\"markClicked\", cfiRange: cfiRange, data: data});\n      });\n\n      rendition.on(\"rendered\", function (section) {\n        sendMessage({method:\"rendered\", sectionIndex: section.index});\n      });\n\n      rendition.on(\"added\", function (section) {\n        sendMessage({method:\"added\", sectionIndex: section.index});\n      });\n\n      rendition.on(\"removed\", function (section) {\n        sendMessage({method:\"removed\", sectionIndex: section.index});\n      });\n\n      rendition.on(\"resized\", function(size){\n        sendMessage({method:\"resized\", size: size});\n      });\n\n      // replay messages\n      rendition.started.then(function() {\n        var msg;\n        for (var i = 0; i < q.length; i++) {\n          msg = q.shift();\n          handleMessage(msg);\n        }\n      });\n\n      book.ready.then(function(){\n        _isReady = true;\n\n        sendMessage({method:\"ready\"});\n\n      });\n\n      window.addEventListener(\"unload\", function () {\n        book && book.destroy();\n      });\n    }\n\n    window.addEventListener(\"message\", onMessage);\n    // React native uses document for postMessages\n    document.addEventListener(\"message\", onMessage);\n\n    sendMessage({method:\"loaded\", value: true});\n\n    // Snap scrolling\n    if(!isWebkit) {\n\n      // Disable momentum scrolling\n      document.getElementsByTagName('body')[0].style.overflow = \"hidden\";\n\n      window.addEventListener('scroll', function(e) {\n        last_known_scroll_position = window.scrollX;\n      });\n\n      window.addEventListener('resize', function(e) {\n        resizeCanceler = true;\n        snapWidth = window.innerWidth;\n        animating = false;\n      });\n    }\n\n    function snap(scroll_pos) {\n      var snapTo = Math.round(scroll_pos / snapWidth) * snapWidth;\n      if (scroll_pos % snapWidth > 0) {\n        scrollToX(snapTo, 25000);\n      }\n    }\n\n    function scrollToX(scrollTargetX, speed, easing) {\n        var scrollX = window.scrollX,\n            scrollTargetX = scrollTargetX || 0,\n            speed = speed || 2000,\n            easing = easing || 'easeOutSine',\n            currentTime = 0;\n\n        animating = true;\n\n        // min time .1, max time .8 seconds\n        var time = Math.max(.1, Math.min(Math.abs(scrollX - scrollTargetX) / speed, .8));\n\n        // easing equations from https://github.com/danro/easing-js/blob/master/easing.js\n        var PI_D2 = Math.PI / 2,\n        easingEquations = {\n            easeOutSine: function (pos) {\n                return Math.sin(pos * (Math.PI / 2));\n            },\n            easeInOutSine: function (pos) {\n                return (-0.5 * (Math.cos(Math.PI * pos) - 1));\n            },\n            easeInOutQuint: function (pos) {\n                if ((pos /= 0.5) < 1) {\n                    return 0.5 * Math.pow(pos, 5);\n                }\n                return 0.5 * (Math.pow((pos - 2), 5) + 2);\n            }\n        };\n\n        // add animation loop\n        function tick() {\n            currentTime += 1 / 60;\n\n            var p = currentTime / time;\n            var t = easingEquations[easing](p);\n\n            if (touchCanceler) {\n              return;\n            }\n\n            if (resizeCanceler) {\n              resizeCanceler = false;\n              return;\n            }\n\n            if (p < 1) {\n                window.requestAnimationFrame(tick);\n\n                window.scrollTo(scrollX + ((scrollTargetX - scrollX) * t), 0);\n            } else {\n                window.scrollTo(scrollTargetX, 0);\n                animating = false;\n            }\n        }\n\n        tick();\n    }\n  }\n\n  if ( document.readyState === 'complete' ) {\n    _ready();\n  } else {\n    window.addEventListener(\"load\", _ready, false);\n  }\n}());\n";var EMBEDDED_HTML="\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no, shrink-to-fit=no\">\n  <title>epubjs</title>\n  <script>"+EPUBJS+"</script>\n  <script>"+BRIDGE+"</script>\n  <style>\n    body {\n      margin: 0;\n      -webkit-tap-highlight-color: rgba(0,0,0,0);\n      -webkit-tap-highlight-color: transparent; /* For some Androids */\n    }\n  </style>\n</head><body></body></html>\n";var Rendition=function(_Component){_inherits(Rendition,_Component);function Rendition(props){_classCallCheck(this,Rendition);var _this=_possibleConstructorReturn(this,(Rendition.__proto__||Object.getPrototypeOf(Rendition)).call(this,props));_this.state={loaded:false};return _this;}_createClass(Rendition,[{key:"componentDidMount",value:function componentDidMount(){this._isMounted=true;if(this.props.url){this.load(this.props.url);}}},{key:"componentWillUnmount",value:function componentWillUnmount(){this._isMounted=false;this.destroy();}},{key:"componentDidUpdate",value:function componentDidUpdate(prevProps){if(prevProps.url!==this.props.url){this.load(this.props.url);}if(prevProps.display!==this.props.display){this.display(this.props.display);}if(prevProps.orientation!==this.props.orientation){}if(prevProps.flow!==this.props.flow){this.flow(this.props.flow||"paginated");}if(prevProps.themes!==this.props.themes){this.themes(this.props.themes);}if(prevProps.themes!==this.props.theme){this.theme(this.props.theme);}if(prevProps.fontSize!==this.props.fontSize){this.fontSize(this.props.fontSize);}if(prevProps.font!==this.props.font){this.font(this.props.font);}}},{key:"load",value:function load(bookUrl){if(!this._webviewLoaded)return;__DEV__&&console.log("[Rendition] loading book: ",bookUrl);var config={"minSpreadWidth":this.props.minSpreadWidth||800,"flow":this.props.flow||"paginated"};if(this.props.stylesheet){config.stylesheet=this.props.stylesheet;}if(this.props.webviewStylesheet){config.webviewStylesheet=this.props.webviewStylesheet;}if(this.props.script){config.script=this.props.script;}this.sendToBridge("open",[bookUrl,config]);this.display(this.props.display);if(this.props.themes){this.themes(this.props.themes);}if(this.props.theme){this.theme(this.props.theme);}if(this.props.fontSize){this.fontSize(this.props.fontSize);}if(this.props.font){this.font(this.props.font);}}},{key:"display",value:function display(target){var spine=typeof target==="number"&&target;if(!this._webviewLoaded)return;if(spine){this.sendToBridge("display",[{"spine":spine}]);}else if(target){this.sendToBridge("display",[{"target":target}]);}else{this.sendToBridge("display");}}},{key:"flow",value:function flow(f){this.sendToBridge("flow",[f]);}},{key:"themes",value:function themes(t){this.sendToBridge("themes",[t]);}},{key:"theme",value:function theme(t){this.sendToBridge("theme",[t]);}},{key:"font",value:function font(f){this.sendToBridge("font",[f]);}},{key:"fontSize",value:function fontSize(f){this.sendToBridge("fontSize",[f]);}},{key:"setLocations",value:function setLocations(locations){this.locations=locations;if(this.isReady){this.sendToBridge("setLocations",[this.locations]);}}},{key:"reportLocation",value:function reportLocation(){if(this.isReady){this.sendToBridge("reportLocation");}}},{key:"highlight",value:function highlight(cfiRange,data){this.sendToBridge("highlight",[cfiRange,data]);}},{key:"underline",value:function underline(cfiRange,data){this.sendToBridge("underline",[cfiRange,data]);}},{key:"mark",value:function mark(cfiRange,data){this.sendToBridge("mark",[cfiRange,data]);}},{key:"unhighlight",value:function unhighlight(cfiRange,data){this.sendToBridge("removeAnnotation",[cfiRange,data]);}},{key:"ununderline",value:function ununderline(cfiRange,data){this.sendToBridge("removeAnnotation",[cfiRange,data]);}},{key:"unmark",value:function unmark(cfiRange,data){this.sendToBridge("removeAnnotation",[cfiRange,data]);}},{key:"next",value:function next(){this.sendToBridge("next");}},{key:"prev",value:function prev(){this.sendToBridge("prev");}},{key:"destroy",value:function destroy(){}},{key:"postMessage",value:function postMessage(str){if(this.refs.webviewbridge){return this.refs.webviewbridge.postMessage(str);}}},{key:"sendToBridge",value:function sendToBridge(method,args,promiseId){var str=JSON.stringify({method:method,args:args,promise:promiseId});if(!this.refs.webviewbridge){return;}this.refs.webviewbridge.postMessage(str);}},{key:"_onWebViewLoaded",value:function _onWebViewLoaded(){this._webviewLoaded=true;console.log('[Rendition] Web view has loaded');if(this.props.url){this.load(this.props.url);}}},{key:"_onBridgeMessage",value:function _onBridgeMessage(e){var msg=e.nativeEvent.data;var decoded;if(typeof msg==="string"){decoded=JSON.parse(msg);}else{decoded=msg;}var p;switch(decoded.method){case"log":{console.log.apply(console.log,[decoded.value]);break;}case"error":{if(this.props.onError){this.props.onError(decoded.value);}else{console.error.apply(console.error,[decoded.value]);}break;}case"loaded":{this._onWebViewLoaded();break;}case"rendered":{console.log("[Rendition] rendered");if(!this.state.loaded){this.setState({loaded:true});}break;}case"relocated":{var _decoded=decoded,location=_decoded.location;this._relocated(location);if(!this.state.loaded){this.setState({loaded:true});}break;}case"resized":{var _decoded2=decoded,size=_decoded2.size;console.log("resized",size.width,size.height);break;}case"press":{this.props.onPress&&this.props.onPress(decoded.cfi,decoded.position,this);break;}case"longpress":{this.props.onLongPress&&this.props.onLongPress(decoded.cfi,this);break;}case"selected":{var _decoded3=decoded,cfiRange=_decoded3.cfiRange;this._selected(cfiRange);break;}case"markClicked":{var _decoded4=decoded,_cfiRange=_decoded4.cfiRange,data=_decoded4.data;this._markClicked(_cfiRange,data);break;}case"added":{var _decoded5=decoded,sectionIndex=_decoded5.sectionIndex;this.props.onViewAdded&&this.props.onViewAdded(sectionIndex);break;}case"removed":{var _decoded6=decoded,_sectionIndex=_decoded6.sectionIndex;this.props.beforeViewRemoved&&this.props.beforeViewRemoved(_sectionIndex);break;}case"ready":{console.log("[Rendition] ready");this._ready();break;}default:{console.log("[Rendition] msg",decoded);}}}},{key:"_relocated",value:function _relocated(visibleLocation){this._visibleLocation=visibleLocation;if(this.props.onRelocated){this.props.onRelocated(visibleLocation,this);}}},{key:"_selected",value:function _selected(cfiRange){if(this.props.onSelected){this.props.onSelected(cfiRange,this);}}},{key:"_markClicked",value:function _markClicked(cfiRange,data){if(this.props.onMarkClicked){this.props.onMarkClicked(cfiRange,data,this);}}},{key:"_ready",value:function _ready(){this.isReady=true;if(this.locations){this.sendToBridge("setLocations",[this.locations]);}this.props.onDisplayed&&this.props.onDisplayed();}},{key:"render",value:function render(){var _this2=this;var WebViewer=_reactNative.Platform.OS==='ios'?_reactNativeWkwebviewReborn2.default:_reactNative.WebView;var loader=_react2.default.createElement(_reactNative.TouchableOpacity,{onPress:function onPress(){return _this2.props.onPress('');},style:styles.loadScreen,__source:{fileName:_jsxFileName,lineNumber:375}},_react2.default.createElement(_reactNative.View,{style:[styles.loadScreen,{backgroundColor:this.props.backgroundColor||"#FFFFFF"}],__source:{fileName:_jsxFileName,lineNumber:376}},_react2.default.createElement(_reactNative.ActivityIndicator,{color:this.props.color||"black",size:this.props.size||"large",style:{flex:1},__source:{fileName:_jsxFileName,lineNumber:379}})));if(!this.props.url){return loader;}return _react2.default.createElement(_reactNative.View,{ref:"framer",style:styles.container,__source:{fileName:_jsxFileName,lineNumber:393}},_react2.default.createElement(WebViewer,{ref:"webviewbridge",source:{html:EMBEDDED_HTML,baseUrl:this.props.url},style:[styles.manager,{backgroundColor:this.props.backgroundColor||"#FFFFFF"}],scalesPageToFit:false,bounces:false,javaScriptEnabled:true,scrollEnabled:true,pagingEnabled:this.props.flow==="paginated",onMessage:this._onBridgeMessage.bind(this),__source:{fileName:_jsxFileName,lineNumber:394}}),!this.state.loaded?loader:null);}}]);return Rendition;}(_react.Component);var styles=_reactNative.StyleSheet.create({container:{flex:1,flexDirection:"column"},manager:{flex:1},scrollContainer:{flex:1,marginTop:0,flexDirection:"row",flexWrap:"nowrap",backgroundColor:"#F8F8F8"},rowContainer:{flex:1},loadScreen:{position:"absolute",top:0,bottom:0,left:0,right:0,backgroundColor:"#fff",justifyContent:"center",alignItems:"center"}});(0,_eventEmitter2.default)(Rendition.prototype);module.exports=Rendition;